Id,Title,CreationDate,Tags,AnswerCount,ViewCount,CommentCount,FavoriteCount,Score,Body
27054162,"what are REST,RESTFul, SOA and microservices in simple terms?",2014-11-21 04:31:46,<rest><soa><microservices>,2,19619,3,11.0,23,"<p>I thought I knew what REST/""RESTFul"", restfulservices, webservices, SOA and microservices were but I came across so many different definitions that I reached the conclusion that those terms are overused, misused , or simply badly defined.</p>&#xA;&#xA;<p>I hope to have a clear understanding of what the aforementioned terms represent, their concrete definition , their commonality and differences, advantages vs disadvantages, and most importantly the bottom line - the most important things to remember in order to use those terms appropriately. </p>&#xA;"
27007353,How does data denormalization work with the Microservice Pattern?,2014-11-19 01:25:07,<database><denormalization><microservices>,4,6219,4,21.0,62,"<p>I just read an article on <a href=""http://java.dzone.com/articles/microservices-and-paas-part-2"">Microservices and PaaS Architecture</a>. In that article, about a third of the way down, the author states (under <strong>Denormalize like Crazy</strong>):</p>&#xA;&#xA;<blockquote>&#xA;  <p>Refactor database schemas, and de-normalize everything, to allow complete separation and partitioning of data. That is, do not use underlying tables that serve multiple microservices. There should be no sharing of underlying tables that span multiple microservices, and no sharing of data. Instead, if several services need access to the same data, it should be shared via a service API (such as a published REST or a message service interface).</p>&#xA;</blockquote>&#xA;&#xA;<p>While this <em>sounds</em> great in theory, in practicality it has some serious hurdles to overcome. The biggest of which is that, often, databases are tightly coupled and every table has <em>some</em> foreign key relationship with at least one other table. Because of this it could be impossible to partition a database into <em>n</em> sub-databases controlled by <em>n</em> microservices.</p>&#xA;&#xA;<p>So I ask: <strong>Given a database that consists entirely of related tables, how does one denormalize this into smaller fragments (groups of tables) so that the fragments can be controlled by separate microservices?</strong></p>&#xA;&#xA;<p>For instance, given the following (rather small, but exemplar) database:</p>&#xA;&#xA;<pre><code>[users] table&#xA;=============&#xA;user_id&#xA;user_first_name&#xA;user_last_name&#xA;user_email&#xA;&#xA;[products] table&#xA;================&#xA;product_id&#xA;product_name&#xA;product_description&#xA;product_unit_price&#xA;&#xA;[orders] table&#xA;==============&#xA;order_id&#xA;order_datetime&#xA;user_id&#xA;&#xA;[products_x_orders] table (for line items in the order)&#xA;=======================================================&#xA;products_x_orders_id&#xA;product_id&#xA;order_id&#xA;quantity_ordered&#xA;</code></pre>&#xA;&#xA;<p>Don't spend too much time critiquing my design, I did this on the fly. The point is that, to me, it makes logical sense to split this database into 3 microservices:</p>&#xA;&#xA;<ol>&#xA;<li><code>UserService</code> - for CRUDding users in the system; should ultimately manage the <code>[users]</code> table; and</li>&#xA;<li><code>ProductService</code> - for CRUDding products in the system; should ultimately manage the <code>[products]</code> table; and</li>&#xA;<li><code>OrderService</code> - for CRUDding orders in the system; should ultimately manage the <code>[orders]</code> and <code>[products_x_orders]</code> tables</li>&#xA;</ol>&#xA;&#xA;<p>However all of these tables have foreign key relationships with each other. If we denormalize them and treat them as monoliths, they lose all their semantic meaning:</p>&#xA;&#xA;<pre><code>[users] table&#xA;=============&#xA;user_id&#xA;user_first_name&#xA;user_last_name&#xA;user_email&#xA;&#xA;[products] table&#xA;================&#xA;product_id&#xA;product_name&#xA;product_description&#xA;product_unit_price&#xA;&#xA;[orders] table&#xA;==============&#xA;order_id&#xA;order_datetime&#xA;&#xA;[products_x_orders] table (for line items in the order)&#xA;=======================================================&#xA;products_x_orders_id&#xA;quantity_ordered&#xA;</code></pre>&#xA;&#xA;<p><strong>Now there's no way to know who ordered what, in which quantity, or when.</strong></p>&#xA;&#xA;<p>So is this article typical academic hullabaloo, or is there a real world practicality to this denormalization approach, and if so, what does it look like (bonus points for using my example in the answer)?</p>&#xA;"
25595492,Single Sign-On in Microservice Architecture,2014-08-31 19:26:54,<security><cloud><single-sign-on><microservices><paas>,2,13805,3,22.0,37,<p>I'm trying to design a green-field project that will have several services (serving data) and web-applications (serving HTML). I've read about microservices and they look like good fit.</p>&#xA;&#xA;<p>The problem I still have is how to implement SSO. I want the user to authenticate once and have access to all the different services and applications.</p>&#xA;&#xA;<p>I can think of several approaches:</p>&#xA;&#xA;<ol>&#xA;<li><p>Add Identity service and application. Any service that has protected resources will talk to the Identity service to make sure the credentials it has are valid. If they are not it will redirect the user for authentication.</p></li>&#xA;<li><p>Use a web-standard such as OpenID and have each service handle it own identities. This means the user will have to authorize individually each service/application but after that it will be SSO.</p></li>&#xA;</ol>&#xA;&#xA;<p>I'll be happy to hear other ideas. If a specific PaaS (such as Heroku) has a proprietary solution that would also be acceptable.</p>&#xA;
29460485,Microservices Architecture: Cross Service data sharing,2015-04-05 18:03:50,<web-services><architecture><microservices>,3,7356,2,17.0,22,"<p>Consider the following micro services for an online store project:<br>&#xA;Users Service keeps account data about the store's users (including first name, last name, email address, etc')</p>&#xA;&#xA;<p>Purchase Service keeps track of details about user's purchases.</p>&#xA;&#xA;<p>Each service provides a UI for viewing and managing it's relevant entities.&#xA;The Purchase Service index page lists purchases. Each purchase item should have the following fields:<br>&#xA;id, full name of purchasing user, purchased item title and price.<br>&#xA;Furthermore, as part of the index page, I'd like to have a search box to let the store manager search purchases by purchasing user name.</p>&#xA;&#xA;<p>It is not clear to me how to get back data which the Purchase Service does not hold - for example: a user's full name.&#xA;The problem gets worse when trying to do more complicated things like search purchases by purchasing user name.</p>&#xA;&#xA;<p>I figured that I can obviously solve this by syncing users between the two services by broadcasting some sort of event on user creation (and saving only the relevant user properties on the Purchase Service end). That's far from ideal in my perspective. How do you deal with this when you have millions of users? would you create millions of records in each service which consumes users data?</p>&#xA;&#xA;<p>Another obvious option is exposing an API at the Users Service end which brings back user details based on given ids. That means that every page load in the Purchase Service, I'll have to make a call to the Users Service in order to get the right user names. Not ideal, but I can live with it.</p>&#xA;&#xA;<p>What about implementing a purchase search based on user name? Well I can always expose another API endpoint at the Users Service end which receives the query term, perform a text search over user names in the Users Service, and then return all user details which match the criteria. At the Purchase Service, map the relevant ids back to the right names and show them in the page. This approach is not ideal either.</p>&#xA;&#xA;<p>Am I missing something? Is there another approach for implementing the above? Maybe the fact that I'm facing this issue is sort of a code smell? would love to hear other solutions.</p>&#xA;"
33399988,Microservices: datasource per instance or per microservice?,2015-10-28 19:31:53,<database><design><architecture><microservices>,5,2501,1,4.0,12,"<p>Building microservice architecture I faced the problem of data sharing between instances of the same microservice.</p>&#xA;&#xA;<p>I have microservice, that massively uses it's datasource - every request to service cause database request (usually insert). This service will be used very heavily and I plan to hide multiple instances behind Load Balancer. And here rises a question: shall these instances use ONE database (will the database be a bottleneck?) or MULTIPLE (datasource per instance) have?</p>&#xA;"
26616962,Microservices: What are smart endpoints and dumb pipes?,2014-10-28 19:33:01,<architecture><soa><messaging><distributed><microservices>,6,13620,0,7.0,15,"<p>I have read an article ""<a href=""http://martinfowler.com/articles/microservices.html#SmartEndpointsAndDumbPipes"" rel=""noreferrer"">Microservices</a>"" by Martin Fowler and find it difficult to understand <strong>smart endpoint</strong>s and <strong>dumb pipes</strong>. Please explain these terms, examples are welcome.</p>&#xA;"
26866479,Architecture of a microservice based web app,2014-11-11 13:53:31,<web-applications><soa><microservices>,4,6863,0,6.0,25,"<p>I am confused about the point at which a web application diverges into microservices - is it at url level or models level?&#xA;As an example, Suppose I have a monolithic app that serves 3 pages. Say each page serves a separate usecase and i want to back eack of them with their own microservices. Now, which of these is the correct way of implementing a microservice based architecture:</p>&#xA;&#xA;<ul>&#xA;<li>I create three different apps(microservices), each containing the (route, controller, models, templates) for one of the pages. And then based on which ever page is requested, I route the request to that particular app. This means that the whole page from database to HTML is served by a separate app. Basically, different pages in the same website are being completely served by different apps on the backend.</li>&#xA;<li>The 3 microservices do not handle the UI stuff but only the data for their usecases(models, controller, no templates) and expose it over a REST api. I have one public facing app. This app queries the three different apps(microservices) only for the data and then builds the html pages to be returned to browser. All the pages in a web app in this case are being served by a single app which internally makes use of three different microservices.</li>&#xA;</ul>&#xA;&#xA;<p><img src=""https://i.stack.imgur.com/b62O1.png"" alt=""enter image description here""></p>&#xA;"
31044380,Microservices authentication,2015-06-25 07:53:17,<rest><microservices>,4,3308,0,4.0,9,"<p><strong>Context</strong></p>&#xA;&#xA;<p>I have multiple services like :</p>&#xA;&#xA;<ul>&#xA;<li>User (LDAP or active directory etc...)</li>&#xA;<li>Billing</li>&#xA;<li>Planning</li>&#xA;<li>etc...</li>&#xA;<li>Authentication</li>&#xA;</ul>&#xA;&#xA;<p>I need to connect on my microservices Using OAuth2.0, for beginning, using the standard login / password (I use my own data, and not gettint a third leg server)</p>&#xA;&#xA;<p><strong>Problem</strong></p>&#xA;&#xA;<p>According to these pictures :</p>&#xA;&#xA;<p><em>Step 1</em></p>&#xA;&#xA;<p><img src=""https://i.stack.imgur.com/csUn0.jpg"" alt=""enter image description here""></p>&#xA;&#xA;<p><em>Step 2</em></p>&#xA;&#xA;<p><img src=""https://i.stack.imgur.com/xmohK.jpg"" alt=""enter image description here""></p>&#xA;&#xA;<p>How can I handle access_token control or authorization control, in my other services than authmicroservice ?</p>&#xA;"
31104540,DB consistency with microservices,2015-06-28 20:42:03,<database><soa><microservices>,4,4038,1,10.0,29,"<p>What is the best way to achieve DB consistency in microservice-based systems?</p>&#xA;&#xA;<p>At the <a href=""https://www.youtube.com/watch?v=wgdBVIX9ifA"" rel=""noreferrer"">GOTO in Berlin</a>, Martin Fowler was talking about microservices and one ""rule"" he mentioned was to keep ""per-service"" databases, which means that services cannot directly connect to a DB ""owned"" by another service.</p>&#xA;&#xA;<p>This is super-nice and elegant but in practice it becomes a bit tricky. Suppose that you have a few services:</p>&#xA;&#xA;<ul>&#xA;<li>a frontend</li>&#xA;<li>an order-management service</li>&#xA;<li>a loyalty-program service</li>&#xA;</ul>&#xA;&#xA;<p>Now, a customer make a purchase on your frontend, which will call the order management service, which will save everything in the DB -- no problem. At this point, there will also be a call to the loyalty-program service so that it credits / debits points from your account.</p>&#xA;&#xA;<p>Now, when everything is on the same DB / DB server it all becomes easy since you can run everything in one transaction: if the loyalty program service fails to write to the DB we can roll the whole thing back.</p>&#xA;&#xA;<p>When we do DB operations throughout multiple services this isn't possible, as we don't rely on one connection / take advantage of running a single transaction.&#xA;What are the best patterns to keep things consistent and live a happy life?</p>&#xA;&#xA;<p>I'm quite eager to hear your suggestions!..and thanks in advance!</p>&#xA;"
30286443,Microservices: How to store source code of many microservices?,2015-05-17 11:30:44,<git><microservices>,3,6232,0,8.0,29,"<p>Currently, I have <strong>20 microservices</strong> for one project. And every microservice stored in separate GIT reposotiry. &#xA;Subsequently, the number of services will increase <strong>to 200 (or more)</strong>.</p>&#xA;&#xA;<p>Every service has unit tests and integration tests. Every service has build in TeamCity (Continuous integration server). </p>&#xA;&#xA;<p>Question: How to store source code of 200 microservices for one project? In one repository or in separate repositories? </p>&#xA;"
36407520,Spring Cloud/Boot vs Wildfly Swarm,2016-04-04 16:02:13,<java><spring-boot><microservices><wildfly-9><wildfly-swarm>,1,5675,4,4.0,12,"<p>I have doing some analysis of modern Container less Java Stack on net, two Major promising things i came about was:</p>&#xA;&#xA;<ol>&#xA;<li>Spring Boot/Cloud (Packed in Tomcat or Jetty,...)</li>&#xA;<li>Wildfly Swarm (Moduler Wildfly 9 Server with minimum possible components)</li>&#xA;</ol>&#xA;&#xA;<p>Yes both have their own features but i have not been able to find out a good comparison of both as both thing are in my point of view better then each other but still i have to decide what good for implementing,</p>&#xA;&#xA;<ol>&#xA;<li>Good for Developer health</li>&#xA;<li>Complex Enterprise logic</li>&#xA;<li>Scalability</li>&#xA;<li>Hot deployments</li>&#xA;<li>Microservice Approach</li>&#xA;<li>Enterprise Integration Patterns</li>&#xA;<li>Continuous Delivery Pipeline.</li>&#xA;</ol>&#xA;&#xA;<p>Thanks for your thoughts</p>&#xA;&#xA;<p>Zaheer  </p>&#xA;"
34903605,Microservices: what are pros and cons?,2016-01-20 15:08:36,<architecture><microservices>,2,9224,0,7.0,20,<p>What are pros and cons of using microservices in comparison with alternative architectures?&#xA;Is there a rule of thumb when microservices should be used?</p>&#xA;
35381163,Best practice to organize authorization in microservice architecture?,2016-02-13 14:34:27,<authentication><architecture><authorization><microservices>,1,3241,8,3.0,9,"<p>For example, I have 3 services:</p>&#xA;&#xA;<ul>&#xA;<li>Authentication </li>&#xA;<li>Seller</li>&#xA;<li>Buyer</li>&#xA;</ul>&#xA;&#xA;<p>Each of them got their own databases, models, services... etc</p>&#xA;&#xA;<p>Authentication service knows about users, user-groups, roles, permissions and creates token.</p>&#xA;&#xA;<p>Where should I store sellers/buyers entities? On Authentication service, or on Seller/Buyer services?</p>&#xA;&#xA;<p>How should Seller/Buyer services interact to create new seller/buyer entity?</p>&#xA;&#xA;<p>How should Seller/Buyer services check permissions?</p>&#xA;&#xA;<p>Seller and Buyer entities have some common fields: name, password, email..., but also each of them have their own additional fields.</p>&#xA;&#xA;<p>Seller and Buyer interact with each other.</p>&#xA;"
41640621,Data Sharing between micro services,2017-01-13 17:52:49,<design-patterns><architecture><microservices><aws-api-gateway><data-sharing>,4,6060,9,11.0,24,"<p><strong>Current Architecture:</strong></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/qlrIu.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/qlrIu.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><strong>Problem:</strong></p>&#xA;&#xA;<p>We have a two-step flow between frontend and backend layers.  </p>&#xA;&#xA;<ul>&#xA;<li>First step:&#xA;The frontend validates an input <strong>I1</strong> from the user on microservice 1 (MS1)</li>&#xA;<li>Second step:&#xA;The frontend submits <strong>I1</strong> and more information to the microservice 2</li>&#xA;</ul>&#xA;&#xA;<p>The micro service 2 (MS2) needs to validates the integrity of <strong>I1</strong> as it is coming from the frontend. How to do avoid a new query to MS1? What's the best approach?</p>&#xA;&#xA;<p><strong>Flows that I'm trying to optimize removing the steps 1.3 and 2.3</strong></p>&#xA;&#xA;<p>Flow 1:</p>&#xA;&#xA;<ul>&#xA;<li>1.1 The User X requests data (MS2_Data) from MS2</li>&#xA;<li>1.2 The User X persists data (MS2_Data + MS1_Data) on MS1</li>&#xA;<li>1.3 The MS1 check the integrity of MS2_Data using a B2B HTTP request</li>&#xA;<li>1.4 The MS1 use MS2_Data and MS1_Data to persist and Database 1 and build the HTTP response.</li>&#xA;</ul>&#xA;&#xA;<p>Flow 2:</p>&#xA;&#xA;<ul>&#xA;<li>2.1 The User X already has data (MS2_Data) stored on local/session storage</li>&#xA;<li>2.2 The User X persists data (MS2_Data + MS1_Data) on MS1</li>&#xA;<li>2.3 The MS1 check the integrity of MS2_Data using a B2B HTTP request</li>&#xA;<li>2.4 The MS1 use MS2_Data and MS1_Data to persist and Database 1 and build the HTTP response.</li>&#xA;</ul>&#xA;&#xA;<p><strong>Approach</strong></p>&#xA;&#xA;<p>One possible approach is to use a B2B HTTP request between MS2 and MS1 but we would be duplicating the validation in the first step.&#xA;Another approach will be duplicating data from MS1 to MS2. however this is prohibitive due to the amount of data and it's volatility nature. Duplication does not seem to be a viable option.</p>&#xA;&#xA;<p>A more suitable solution is my opinion will the frontend to have the responsibility to fetch all the information required by the micro service 1 on the micro service 2 and delivered it to the micro service 2. This will avoid all this B2B HTTP requests.</p>&#xA;&#xA;<p><strong>The problem is how the micro service 1 can trust the information sent by the frontend. Perhaps using <a href=""https://jwt.io/introduction/"" rel=""noreferrer"">JWT</a> to somehow sign the data from the micro service 1 and the micro service 2 will be able to verify the message.</strong></p>&#xA;&#xA;<p><strong>Note</strong>&#xA;Every time the micro service 2 needs information from the micro service 1 a B2B http request is performed. (The HTTP request use <a href=""https://en.wikipedia.org/wiki/HTTP_ETag"" rel=""noreferrer"">ETAG</a> and <a href=""https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control"" rel=""noreferrer"">Cache Control: max-age</a>). How to avoid this? </p>&#xA;&#xA;<p><strong>Architecture Goal</strong></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/FR7E7.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/FR7E7.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><strong>The micro service 1 needs the data from the micro service 2 on demand to be able to persist MS1_Data and MS2_Data on MS1 database, so the ASYNC approach using a broker does not apply here.</strong></p>&#xA;&#xA;<p>My question is if exists a design pattern, best practice or a framework to enable this kind of thrust communication. </p>&#xA;&#xA;<p>The downside of the current architecture is the number of B2B HTTP requests that are performed between each micro services. Even if I use a cache-control mechanism the response time of each micro service will be affected. The response time of each micro services is critical. The goal here is to archive a better performance and some how use the frontend as a gateway to distribute data across several micro services but using a <strong>thrust communication</strong>. </p>&#xA;&#xA;<p>MS2_Data is just an Entity SID like product SID or vendor SID that the MS1 must use to maintain data integrity. </p>&#xA;&#xA;<p><strong>Possible Solution</strong></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/qSYQY.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/qSYQY.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>The idea is to use the gateway as an api gateway request processing that will cache some HTTP response from MS1 and MS2 and use them as a response to MS2 SDK and MS1 SDK. This way no communication (SYNC OR ASYNC) is made directly between MS1 and MS2 and data duplication is also avoided.</p>&#xA;&#xA;<p>Of course the above solution is just for shared UUID/GUID across micro services. For full data, an event bus is used to distribute events and data across micro services in an asynchronous way (Event sourcing pattern). </p>&#xA;&#xA;<p>Inspiration: <a href=""https://aws.amazon.com/api-gateway/"" rel=""noreferrer"">https://aws.amazon.com/api-gateway/</a> and <a href=""https://getkong.org/"" rel=""noreferrer"">https://getkong.org/</a></p>&#xA;&#xA;<p><strong>Related questions and documentation:</strong></p>&#xA;&#xA;<ul>&#xA;<li><a href=""https://stackoverflow.com/questions/41445442/how-to-sync-the-database-with-the-microservices-and-the-new-one/41475346"">How to sync the database with the microservices (and the new one)?</a></li>&#xA;<li><a href=""https://auth0.com/blog/introduction-to-microservices-part-4-dependencies/"" rel=""noreferrer"">https://auth0.com/blog/introduction-to-microservices-part-4-dependencies/</a></li>&#xA;<li><a href=""https://stackoverflow.com/questions/30213456/transactions-across-rest-microservices"">Transactions across REST microservices?</a></li>&#xA;<li><a href=""https://en.wikipedia.org/wiki/Two-phase_commit_protocol"" rel=""noreferrer"">https://en.wikipedia.org/wiki/Two-phase_commit_protocol</a></li>&#xA;<li><a href=""http://ws-rest.org/2014/sites/default/files/wsrest2014_submission_7.pdf"" rel=""noreferrer"">http://ws-rest.org/2014/sites/default/files/wsrest2014_submission_7.pdf</a></li>&#xA;<li><a href=""https://www.tigerteam.dk/2014/micro-services-its-not-only-the-size-that-matters-its-also-how-you-use-them-part-1/"" rel=""noreferrer"">https://www.tigerteam.dk/2014/micro-services-its-not-only-the-size-that-matters-its-also-how-you-use-them-part-1/</a></li>&#xA;</ul>&#xA;"
31842622,Microservices: How to integrate the UI?,2015-08-05 20:54:01,<microservices>,1,3595,3,3.0,13,"<p>today I started reading about Microservice architectures - and it seems to be very interesting!&#xA;But I have one doubt I need some exlanation on:&#xA;Assume I want to create a blog and would build 4 microservices for that: User/login Service, Article Service, Comments Service and Reporting/analytics Service(not a realistic example, I know...).&#xA;The Reporting/Analytics service is purely backend - no issue here for my understanding.&#xA;But the three others involve some UI part - and as to my understanding this UI part should also be part of the microservice itself, right?&#xA;How would the UI integration work? Would I then have a 5th ""front door"" service that collects the user requests, forwards them to the other services which then answer with HTML/CSS and the front door service would then compose the individual responses into what is returned to the user?</p>&#xA;&#xA;<p>Any change you have an example/use case for such a scenario?</p>&#xA;&#xA;<p>Thanks and regards!</p>&#xA;"
38071714,GraphQL and Microservice Architecture,2016-06-28 09:04:42,<architecture><microservices><graphql>,5,14892,0,48.0,86,"<p>I'm trying to understand where GraphQL is most suitable to use within a Microservice architecture. </p>&#xA;&#xA;<p>There is some debate about having only 1 GraphQL schema that works as API Gateway proxying the request to the targeted microservices and coercing their response. Microservices still would use REST / Thrift protocol for communication thought.</p>&#xA;&#xA;<p>Another approach is instead to have multiple GraphQL schemas one per microservice. Having a smaller API Gateway server that route the request to the targeted microservice with all the information of the request + the GraphQL query.</p>&#xA;&#xA;<p><strong>1st Approach</strong></p>&#xA;&#xA;<p>Having 1 GraphQL Schema as an API Gateway will have a downside where every time you change your microservice contract input/output, we have to change the GraphQL Schema accordingly on the API Gateway Side.</p>&#xA;&#xA;<p><strong>2nd Approach</strong></p>&#xA;&#xA;<p>If using Multiple GraphQL Schema per microservices, make sense in a way because GraphQL enforces a schema definition, and the consumer will need to respect input/output given from the microservice.</p>&#xA;&#xA;<p><strong>Questions</strong></p>&#xA;&#xA;<ul>&#xA;<li><p>Where do you find GraphQL the right fit for designing microservice architecture? </p></li>&#xA;<li><p>How would you design an API Gateway with a possible GraphQL implementation?</p></li>&#xA;</ul>&#xA;"
48906817,2PC vs Sagas (distributed transactions),2018-02-21 13:10:40,<transactions><cloud><microservices><distributed-computing><saga>,1,361,1,2.0,15,"<p>I'm developing my insight about distributed systems, and how to maintain data consistency across such systems, where business transactions covers multiple services, bounded contexts and network boundaries.</p>&#xA;&#xA;<p>Here are two approaches which I know are used to implement distributed transactions:</p>&#xA;&#xA;<ul>&#xA;<li>2-phase commit (2PC)</li>&#xA;<li>Sagas</li>&#xA;</ul>&#xA;&#xA;<p>2PC is a protocol for applications to <em>transparently</em> utilize global ACID transactions by the support of the platform. Being embedded in the platform, it is transparent to the business logic and the application code as far as I know.</p>&#xA;&#xA;<p>Sagas, on the other hand, are series of local transactions, where each local transaction mutates and persist the entities along with some flag indicating the phase of the global transaction and commits the change. In the other words, state of the transaction is part of the domain model. Rollback is the matter of committing a series of ""inverted"" transactions. Events emitted by the services triggers these local transactions in either case.</p>&#xA;&#xA;<p>Now, when and why would one use sagas over 2PC and vice versa? What are the use cases and pros/cons of both? Especially, the brittleness of sagas makes me nervous, as the inverted distributed transaction could fail as well.</p>&#xA;"
44579396,In microservices should i use pub/sub instead RPC to get more loosely couple architecture?,2017-06-16 01:24:56,<architecture><rpc><publish-subscribe><microservices>,2,1806,0,2.0,9,"<p>I current using a RPC call to another microservice via TCP and getting the response, but I think I can do it in this way:</p>&#xA;&#xA;<p>whithout make a RPC call, can I use a pub/sub to send to one service, publishing some channel like <em>request_user</em> and subscribed to a channel like  <em>object_user_response</em>, and then the other service that is subscribed to this <em>request_user</em>, publish <em>object_user_response</em>.</p>&#xA;&#xA;<p>Like that:</p>&#xA;&#xA;<pre><code>Service A &lt;-- (sub)object_user_response &lt;------  Redis&#xA;Service A --&gt; (pub)request_user -------------&gt;   Redis&#xA;&#xA;Service B &lt;-- (sub)request_user &lt;--------------- Redis&#xA;Service B --&gt; (pub) object_user_response ------&gt; Redis&#xA;</code></pre>&#xA;&#xA;<p>On receive a object_user_response, the service A checks if the id of user is the same that the function have requested. </p>&#xA;&#xA;<p>Should I use RPC or Pub/sub for that?&#xA;What is the most correct way to send data to a microservice and get response from there in terms of loosely coupled architecture, is using a RPC call or using two pub/sub, on for the request and another for the response?  </p>&#xA;"
37749087,"How to restore state in an event based, message driven microservice architecture on failure scenario",2016-06-10 13:06:04,<messaging><reactive-programming><microservices><event-based-programming>,3,1771,0,7.0,12,"<p>In the context of a microservice architecture, a message driven, asynchronous, event based design seems to be gaining popularity (see <a href=""http://blog.christianposta.com/microservices/why-microservices-should-be-event-driven-autonomy-vs-authority/"" rel=""noreferrer"">here</a> and <a href=""https://www.nginx.com/blog/event-driven-data-management-microservices/"" rel=""noreferrer"">here</a> for some examples, as well as the <a href=""http://www.reactivemanifesto.org/#message-driven"" rel=""noreferrer"">Reactive Manifesto - Message Driven trait</a>) as opposed to a synchronous (possibly REST based) mechanism.</p>&#xA;&#xA;<p>Taking that context and imagining an overly simplified ordering system, as depicted below:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/Xtttg.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/Xtttg.png"" alt=""ordering system""></a></p>&#xA;&#xA;<p>and the following message flow:</p>&#xA;&#xA;<ul>&#xA;<li>Order is placed from some source (web/mobile etc.)</li>&#xA;<li>Order service accepts order and publishes a <code>CreateOrderEvent</code></li>&#xA;<li>The InventoryService reacts on the <code>CreateOrderEvent</code>, does some inventory stuff and publishes a <code>InventoryUpdatedEvent</code> when it's done</li>&#xA;<li>The Invoice service then reacts to the <code>InventoryUpdatedEvent</code>, sends an invoice and publishes a <code>EmailInvoiceEvent</code></li>&#xA;</ul>&#xA;&#xA;<p>All services are up and we happily process orders... Everyone is happy.&#xA;Then, the Inventory service goes down for some reason </p>&#xA;&#xA;<p>Assuming that the events on the event bus are flowing in a ""non blocking"" manor. I.e. the messages are being published to a central topic and do not pile up on a queue if no service is reading from it (what I'm trying to convey is an event bus where, if the event is published on the bus, it would flow ""straight through"" and not queue up - ignore what messaging platform/technology is used at this point). That would mean that if the Inventory service were down for 5 minutes, the <code>CreateOrderEvent</code>'s passing through the event bus during that time are now ""gone"" or not seen by the Inventory service because in our overly simplified system, no other system is interested in those events.</p>&#xA;&#xA;<p>My question then is: How does the Inventory service (and the system as a whole) restore state in a way that no orders are missed/not processed?</p>&#xA;"
40900818,Querying / Pagination Across Microservices,2016-12-01 00:48:57,<web-services><rest><integration><soa><microservices>,1,836,3,0.0,11,"<p>Our shop has recently started taking on an SOA approach to application development.  We are seeing some great benefits with the separation of concerns, reusability, and other benefits of SOA/microservices.</p>&#xA;&#xA;<p>However, one <strong>big</strong> item we're stuck on is aggregating, filtering, and paginating results across services.  Let me describe the issue with a scenario.</p>&#xA;&#xA;<p>Say we have 3 services:</p>&#xA;&#xA;<ol>&#xA;<li><strong>PersonService</strong> - Stores information on people (names, addresses, etc)</li>&#xA;<li><strong>ItemService</strong> - Stores information on items that are purchasable.</li>&#xA;<li><strong>PaymentService</strong> - Stores information regarding payments that people have made for different items.</li>&#xA;</ol>&#xA;&#xA;<p>Now, say we want to build a reporting/admin tool that can display / report on multiple services in aggregate.  For instance, we want to display a paginated list of Payments, along with the Person and Item that each payment was for.  This is pretty straightforward:  Grab the list of payments, then query PersonService and ItemService for the respective Person and Item records.</p>&#xA;&#xA;<p>However, the issue comes into play when we want to then filter down that data:  For instance, displaying a paginated list of payments made by people with the first name 'Bob', who have purchased the item 'Car'. This makes things much more complicated, because we need to filter results from 3 different services without knowing how many results each service is going to return.  </p>&#xA;&#xA;<p>From a performance perspective, querying all of the services over and over again to narrow down the results would be costly, so I've been researching better solutions.  However, I cannot find concrete solutions to this problem (or at least a ""best practice"").  In a monolithic application, we'd simply use SQL joins across the different tables.  I'm having a ton of trouble figuring out how/if something similar is possible across services.</p>&#xA;&#xA;<p>My question to the community is:  What would your approach be?  Things I've considered:</p>&#xA;&#xA;<ol>&#xA;<li>Using some sort of search index (<strong>Elasticsearch</strong>, <strong>Solr</strong>) that contains all data for all services (updated via events pushed out by services), and then querying the search index for results.</li>&#xA;<li>Attempting to understand how projects like <strong>GraphQL</strong> and <strong>Neo4j</strong> may assist us with these issues.</li>&#xA;</ol>&#xA;"
29761872,Microservices and database joins,2015-04-21 02:34:10,<database><integration><microservices>,5,10558,2,18.0,55,"<p>For people that are splitting up monolithic applications into microservices how are you handling the connundrum of breaking apart the database.  Typical applications that I've worked on do a lot of database integration for performance and simplicity reasons.</p>&#xA;&#xA;<p>If you have two tables that are logically distinct (bounded contexts if you will) but you often do aggregate processing on a large volumes of that data then in the monolith you're more than likely to eschew object orientation and are instead using your database's standard JOIN feature to process the data on the database prior to return the aggregated view back to your app tier.</p>&#xA;&#xA;<p>How do you justify splitting up such data into microservices where presumably you will be required to 'join' the data through an API rather than at the database.</p>&#xA;&#xA;<p>I've read Sam Newman's Microservices book and in the chapter on splitting the Monolith he gives an example of ""Breaking Foreign Key Relationships"" where he acknowledges that doing a join across an API is going to be slower - but he goes on to say if your application is fast enough anyway, does it matter that it is slower than before?</p>&#xA;&#xA;<p>This seems a bit glib?  What are people's experiences?  What techniques did you use to make the API joins perform acceptably?</p>&#xA;"
29644916,Microservice Authentication strategy,2015-04-15 08:10:33,<authentication><architecture><microservices>,4,35930,7,47.0,92,"<p>I'm having a hard time choosing a decent/secure authentication strategy for a microservice architecture. The only SO post I found on the topic is this one: <a href=""https://stackoverflow.com/questions/25595492/single-sign-on-in-micro-service-architecture"">Single Sign-On in Microservice Architecture</a></p>&#xA;&#xA;<p>My idea here is to have in each service (eg. authentication, messaging, notification, profile etc.) a unique reference to each user (quite logically then his <code>user_id</code>) and the possibility to get the current user's <code>id</code> if logged in.</p>&#xA;&#xA;<p>From my researches, I see there are two possible strategies:</p>&#xA;&#xA;<h3>1. Shared architecture</h3>&#xA;&#xA;<p><img src=""https://i.stack.imgur.com/po7Qr.png"" alt=""Shared architecture""></p>&#xA;&#xA;<p>In this strategy, the authentication app is one service among other. But each service must be able to make the conversion <code>session_id</code> => <code>user_id</code> so it must be dead simple. That's why I thought of Redis, that would store the key:value <code>session_id:user_id</code>.</p>&#xA;&#xA;<h3>2. Firewall architecture</h3>&#xA;&#xA;<p><img src=""https://i.stack.imgur.com/NHGjh.png"" alt=""Firewall architecture""></p>&#xA;&#xA;<p>In this strategy, session storage doesn't really matter, as it is only handled by the authenticating app. Then the <code>user_id</code> can be forwarded to other services. I thought of Rails + Devise (+ Redis or mem-cached, or cookie storage, etc.) but there are tons of possibilities. The only thing that matter is that Service X will never need to authenticate the user.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>How do those two solutions compare in terms of:</p>&#xA;&#xA;<ul>&#xA;<li>security</li>&#xA;<li>robustness</li>&#xA;<li>scalability</li>&#xA;<li>ease of use</li>&#xA;</ul>&#xA;&#xA;<p>Or maybe you would suggest another solution I haven't mentioned in here?</p>&#xA;&#xA;<p>I like the solution #1 better but haven't found much default implementation that would secure me in the fact that I'm going in the right direction.</p>&#xA;&#xA;<p>I hope my question doesn't get closed. I don't really know where else to ask it.</p>&#xA;&#xA;<p>Thanks in advance</p>&#xA;"
37897058,"How to properly setup documentation for Restful services in a micro-service architecture (HAL, ALPS)",2016-06-18 12:39:04,<java><spring><spring-data><spring-data-rest><microservices>,2,391,1,0.0,9,"<p>I have been reading a lot about how to setup Microservices properly and I have been getting hung up with some of the more recent concepts including: HAL, ALPS, and the HAL Browser.  I have historically documented things leveraging Swagger UI, however, I am coming to understand that URL centric isn't the proper way and I should be organizing documentation around resources and links which is what the newer technologies are for.  I have quite a few knowledge gaps around these newer concepts, so I wanted to get a proper understanding of how these technologies work together so as I learn about each I can fit them into the puzzle.</p>&#xA;&#xA;<p>My current understanding is:</p>&#xA;&#xA;<p><b>HAL</b> - Is an additional format on top of JSON that will let you navigate through your API via links.</p>&#xA;&#xA;<p><b>ALPS</b> - It is an additional format on top of JSON that can let me provide English based descriptions to help describe my resources</p>&#xA;&#xA;<p><b>HAL Browser</b> - Swagger UI replacement for Resource and Link centric documentation.  Works with both HAL and ALPS together?</p>&#xA;&#xA;<p>Would my current understanding of these technologies be accurate or lacking in some areas?  Also implementation wise I am not fully understanding how the ALPS and HAL are interacting together.  I was aware of a hal+json format and a alps+json format, but I haven't seen a hal+alps+json format.</p>&#xA;&#xA;<p>The last area I would like to clear up is how I should be exposing these resources.  Typically I always had a focus on very lean json messages is sending the hal+json format around the expected or should I be hosting those endpoints at another URL specifically for documentation similar to swagger / HAL browser?</p>&#xA;"
51541318,How do I resolve the authors names of books in microservice world?,2018-07-26 14:30:41,<node.js><amazon-web-services><aws-lambda><microservices>,4,165,1,1.0,11,"<p>So I'm starting a journey down the road of microservices. I've spent some hours online trying immerse myself into this topic. </p>&#xA;&#xA;<p>One concept I'm not quite grasping yet is the idea of <strong>not using SQL joins</strong> and therefore having a small independent database for authors and the same for books.</p>&#xA;&#xA;<p>So I understand the following SQL:</p>&#xA;&#xA;<pre><code>BooksTable - id, name, authorid&#xA;AuthorsTable - id, name&#xA;&#xA;select book.name, author.name from book &#xA;join author on book.authorId = author.id&#xA;</code></pre>&#xA;&#xA;<p>In Node.js world</p>&#xA;&#xA;<p><strong>index.js</strong></p>&#xA;&#xA;<pre><code>app.get('/api/books' bookDomain.get());&#xA;</code></pre>&#xA;&#xA;<p><strong>bookDomain.js</strong></p>&#xA;&#xA;<pre><code>exports.get = () =&gt; {&#xA;  const books = bookService.get();&#xA;&#xA;  const authors = authorService.get();&#xA;&#xA;  /*&#xA;    This is where I'm lost: how do you achieve the simple SQL &#xA;    above? I'm assuming in the domain is where this information is &#xA;    ""joined""? am I correct?&#xA;  */&#xA;};&#xA;</code></pre>&#xA;&#xA;<p><strong>Services</strong></p>&#xA;&#xA;<pre><code>Database1&#xA;**bookService.js**&#xA;database context&#xA;&#xA;Database2&#xA;**authorService.js**&#xA;database context&#xA;</code></pre>&#xA;&#xA;<p><strong>expected data</strong> (something like it, basically i'm saying JSON should be the return type)</p>&#xA;&#xA;<pre><code>[{&#xA;  book {&#xA;    ""name"": ""Book 1"",&#xA;    ""author"": ""Author Name 1""&#xA;  }&#xA;},&#xA;{&#xA;  book {&#xA;    ""name"": ""Book 2"",&#xA;    ""author"": ""Author Name 2""&#xA;  }&#xA;}]&#xA;</code></pre>&#xA;"
31468806,Identity management with multiple spring boot micro services,2015-07-17 05:17:05,<spring><spring-boot><single-sign-on><microservices><identity-management>,2,918,1,0.0,0,"<p>I have multiple spring boot applications for difference purposes. &#xA;For example, mobile clients send their GPS coordinates to one spring boot micro service and at the same time, these mobile client access another spring boot micro service to do their CRUD operations. </p>&#xA;&#xA;<p>I'm facing with a problem of authenticating clients. I don't want do the authentication at all the services. Rather I would like to do this by using another identity management server (ex: Kerberos)  which produce a SSO token for all these micro services.</p>&#xA;&#xA;<p>OR a proxy which authenticates all the incoming requests and delegates them to relevant micro service.</p>&#xA;&#xA;<p>I searched couple of hours and I couldn't find any solid information on securing micro services even in general.</p>&#xA;&#xA;<ol>&#xA;<li>The design or architecture I'm taking is correct? </li>&#xA;<li>What is the best approach for this kind of a situation?</li>&#xA;<li>How can I implement this identity server/proxy who does the authentication?</li>&#xA;<li>Any technology, known identity mgmt servers which can easily integrate with Spring, known design patterns are there?</li>&#xA;</ol>&#xA;&#xA;<p>One question more,&#xA;It is OK to implement same authentication layer at each of these services?&#xA;(Because I think it is bad and I may wrong with that)</p>&#xA;&#xA;<p>I would like to stick with Spring.</p>&#xA;&#xA;<p>Highly appreciate if someone can direct me to a correct path.</p>&#xA;"
29148547,Spring Security OAuth2 AuthorizationServer,2015-03-19 15:22:41,<spring-security><spring-security-oauth2><microservices>,1,854,0,0.0,0,"<p>I'm playing around with spring-security-oauth2. I try to build some microservices with an authentication backend. </p>&#xA;&#xA;<p>I set up an simple spring boot project with the following dependencies</p>&#xA;&#xA;<pre><code>    &lt;parent&gt;&#xA;        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#xA;        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;&#xA;        &lt;version&gt;1.2.2.RELEASE&lt;/version&gt;&#xA;        &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;&#xA;    &lt;/parent&gt;&#xA;&#xA;    &lt;dependencies&gt;&#xA;        &lt;dependency&gt;&#xA;            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#xA;            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;&#xA;        &lt;/dependency&gt;&#xA;&#xA;        &lt;dependency&gt;&#xA;            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#xA;            &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;&#xA;        &lt;/dependency&gt;&#xA;&#xA;        &lt;dependency&gt;&#xA;            &lt;groupId&gt;org.springframework.security.oauth&lt;/groupId&gt;&#xA;            &lt;artifactId&gt;spring-security-oauth2&lt;/artifactId&gt;&#xA;            &lt;version&gt;2.0.6.RELEASE&lt;/version&gt;&#xA;        &lt;/dependency&gt;&#xA;&#xA;        &lt;dependency&gt;&#xA;            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;&#xA;            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;&#xA;            &lt;scope&gt;test&lt;/scope&gt;&#xA;        &lt;/dependency&gt;&#xA;    &lt;/dependencies&gt;&#xA;</code></pre>&#xA;&#xA;<p>and one Configuration Class</p>&#xA;&#xA;<pre><code>@Configuration&#xA;public class SecurityConfiguration {&#xA;&#xA;    @Autowired&#xA;    @Qualifier(""clientDetailsServiceBean"")&#xA;    private ClientDetailsService clientDetailsService;&#xA;&#xA;    @Autowired&#xA;    @Qualifier(""userDetailsServiceBean"")&#xA;    private UserDetailsService userDetailsService;&#xA;&#xA;    @Configuration&#xA;    @EnableWebSecurity&#xA;    @EnableGlobalMethodSecurity(jsr250Enabled = true, securedEnabled = true, prePostEnabled = true)&#xA;    public class WebSecurityConfiguration extends WebSecurityConfigurerAdapter {&#xA;&#xA;        @Override&#xA;        @Bean(name = ""authenticationManagerBean"")&#xA;        public AuthenticationManager authenticationManagerBean() throws Exception {&#xA;            return super.authenticationManagerBean();&#xA;        }&#xA;&#xA;        @Override&#xA;        protected void configure(AuthenticationManagerBuilder auth) throws Exception {&#xA;            auth.userDetailsService(userDetailsService);&#xA;        }&#xA;&#xA;        @Override&#xA;        protected void configure(HttpSecurity http) throws Exception {&#xA;            http.authorizeRequests().anyRequest().permitAll().and().userDetailsService(userDetailsService).formLogin().and().httpBasic();&#xA;        }&#xA;    }&#xA;&#xA;    @Configuration&#xA;    @EnableAuthorizationServer&#xA;    public class AuthorizationServerConfiguration extends AuthorizationServerConfigurerAdapter {&#xA;&#xA;        @Autowired&#xA;        @Qualifier(""authenticationManagerBean"")&#xA;        private AuthenticationManager authenticationManager;&#xA;&#xA;        @Override&#xA;        public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {&#xA;            endpoints.authenticationManager(authenticationManager).tokenStore(tokenStore());&#xA;        }&#xA;&#xA;        @Bean&#xA;        public ApprovalStore approvalStore() throws Exception {&#xA;            TokenApprovalStore store = new TokenApprovalStore();&#xA;            store.setTokenStore(tokenStore());&#xA;            return store;&#xA;        }&#xA;&#xA;        @Bean&#xA;        public TokenStore tokenStore() {&#xA;            return new InMemoryTokenStore();&#xA;        }&#xA;&#xA;        @Override&#xA;        public void configure(ClientDetailsServiceConfigurer clients) throws Exception {&#xA;            clients.withClientDetails(clientDetailsService);&#xA;        }&#xA;&#xA;        @Override&#xA;        public void configure(AuthorizationServerSecurityConfigurer security) throws Exception {&#xA;            security.checkTokenAccess(""permitAll()"");&#xA;            security.allowFormAuthenticationForClients();&#xA;        }&#xA;&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>My Implementation of Client- and UserDetailsService are very simple and always returns an object</p>&#xA;&#xA;<pre><code>@Service(""clientDetailsServiceBean"")&#xA;public class ClientDetailsServiceBean implements ClientDetailsService {&#xA;&#xA;    private static final Logger LOGGER = LoggerFactory.getLogger(ClientDetailsServiceBean.class);&#xA;&#xA;    @Override&#xA;    public ClientDetails loadClientByClientId(String clientId) throws ClientRegistrationException {&#xA;        LOGGER.info(""Load client {}"", clientId); &#xA;        BaseClientDetails details = new BaseClientDetails();&#xA;        details.setClientId(clientId);&#xA;        details.setAuthorizedGrantTypes(Arrays.asList(""password"", ""refresh_token"", ""client_credentials""));&#xA;        details.setScope(Arrays.asList(""trust""));&#xA;        details.setAutoApproveScopes(Arrays.asList(""trust""));&#xA;        details.setAuthorities(Arrays.asList(new SimpleGrantedAuthority(""client_role2"")));&#xA;        details.setResourceIds(Arrays.asList(""clients""));&#xA;        details.setClientSecret(""secret"");&#xA;&#xA;        return details;&#xA;    }&#xA;&#xA;}&#xA;@Service(""userDetailsServiceBean"")&#xA;public class UserDetailsServiceBean implements UserDetailsService {&#xA;    private static final Logger LOGGER = LoggerFactory.getLogger(UserDetailsServiceBean.class);&#xA;&#xA;    @Override&#xA;    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {&#xA;        LOGGER.info(""Load user {}"", username);&#xA;        return new User(username, ""password"", Arrays.asList(new SimpleGrantedAuthority(""ROLE_USER"")) );&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But, when i try to receive an accessToken via</p>&#xA;&#xA;<pre><code>curl http://localhost:8081/oauth/token -d grant_type=client_credentials -d client_id=web_client -d client_secret=secret&#xA;</code></pre>&#xA;&#xA;<p>i receive an error ""Full authentication is required to access this resource"" and when i try</p>&#xA;&#xA;<pre><code>curl http://localhost:8081/oauth/token -d grant_type=client_credentials -d client_id=web_client -d client_secret=secret --user web_client:secret&#xA;</code></pre>&#xA;&#xA;<p>i receive an error ""Bad credentials"". From my point of view both should work, but it seems like my configuration is missing. </p>&#xA;&#xA;<p>There are other things with OAuth that unclear to me:&#xA;I try to build an spring-mvc application with spring-security and a custom login form. It's possible to handle token request and refresh cycles by spring security without redirect to the authentication app?</p>&#xA;&#xA;<p>In case of event driven application, it's possible to ensure the token is valid? In case of failure, the user clicks on button and an event is written but the processing of this will be hours later. How can i process the event with the user credentials?</p>&#xA;"
33033834,how do I migrate a Java interface to a microservice?,2015-10-09 08:47:54,<java><rest><microservices>,3,764,0,0.0,0,"<p>I am looking at microservices, and the possibility of migrating some of our code to this architecture.  I understand the general concept but am struggling to see how it would work for our example.</p>&#xA;&#xA;<p>Supposing I have an interface called <code>RatingEngine</code> and an implementation called <code>RatingEngineImpl</code>, both running inside my monolithic application.  The principle is simple - The <code>RatingEngineImpl</code> could run in a different machine, and be accessed by the monolithic application via (say) a REST API, serializing the DTOs with json over http.  We even have an interface to help with this decoupling.</p>&#xA;&#xA;<p>But how do I actually go about this?  As far as I can see, I need to create a new implementation of the interface for the rump monolith (ie now the client), which takes calls to the interface methods, converts them into a REST call, and sends them over the network to the new 'rating engine service'.  Then I also need to implement a new http server, with an endpoint for each interface method, which then deserializes the DTOs (method parameters) and routes the call to our original <code>RatingEngineImpl</code>, which sits inside the server.  Then it serializes the response and sends it back to the client.  </p>&#xA;&#xA;<p>So that seems like an awful lot of plumbing code.  It also adds maintenance overhead, since if you tweak a method in the interface you need to make changes in two more places.</p>&#xA;&#xA;<p>Am I missing something?  Is there some clever way we can automate this boilerplate code construction?</p>&#xA;"
49113488,Distributed Database Design style for micro service-oriented architecture,2018-03-05 15:09:55,<spring-boot><microservices><distributed-database>,3,246,0,1.0,0,"<p>I am trying to convert one monolithic application into micro service oriented architecture style. Back end I am using spring , spring boot frameworks for development. Front-end I am using angular 2. And also using postgreSQL as database. &#xA;        Here my confusion is that , when I am designing my databases as distributed, according to functionalities it may contain  5 databases. Means I am designing according to vertical partition. Then I am thinking to implement inter-microservice communication services to achieve the entire functionality. </p>&#xA;&#xA;<p>The other way I am thinking that to horizontally partition the current structure. So my domain is based on some educational university. So half of university go under one DB and remaining will go under another DB. And deploy services according to Two region(two for two set of university). </p>&#xA;&#xA;<p>Currently I am decided to continue with the last mentioned approach. I am new to these types of tasks, since it referring some architecture task. Also I am beginner to this microservice and distributed database world. So Can anyone help me to confirm that my approach will give solution to my issue? Can I continue with my second approach - Horizontal partitioning of databases according to domain object? </p>&#xA;"
49226015,How to isolate services in choreography service composition,2018-03-11 22:58:24,<architecture><microservices><distributed-computing><service-composition>,1,55,1,2.0,0,"<p>I always encourage to design each service without knowing other services exists (isolated). </p>&#xA;&#xA;<p>Few days ago, i was reading about the cons and pros of choreography over orchestration in micro service architecture, i came across this topic that, &#xA;Lets say we have a system which consist of 3 services: ordering, payment, shipment. if i use a orchestrator, the orchestrator knows when and how to call each service. in fact its duty is to know how and when call what service, but in choreography, i have no idea when payment service does not know the ordering service exists how its gonna subscribe to its event (for sure at least ordering system needs to have payment models)?</p>&#xA;&#xA;<p>i become more confuse when i start to think that, if we have a method in ordering service which returns the ordering information followed by payment data and shipping data. how its going to return payment and shipping data?</p>&#xA;"
36920620,fastest mechanism to return large data from a micro-service,2016-04-28 16:38:11,<json><rest><http><redis><microservices>,1,323,6,1.0,0,"<p>I am new to the micro-service world.</p>&#xA;&#xA;<p>My micro-service has to return a large data (ballpark of 10-20 Mb).&#xA;The returned data contains <strong>large 2D arrays</strong> (""images"") and <strong>small structured data</strong> that can easily be represented with Json.</p>&#xA;&#xA;<p>Important: Both client and server are <strong>on the same machine</strong>.</p>&#xA;&#xA;<p>I have few options to return the data: </p>&#xA;&#xA;<ol>&#xA;<li>Encode the data to bytes array and send in the <strong>post</strong> body.</li>&#xA;<li>Encode only the ""images"" to binary and <strong>""multi-part"" post</strong> json + binary image1 + ... + binary imageN.</li>&#xA;<li>Write the data to a <strong>server resources</strong> (memory?)&#xA;and send the urls to client. The client will fetch the data with&#xA;few <strong>GET</strong> commands.</li>&#xA;<li>Write the data to <strong>Redis DB</strong> and send the client the&#xA;Redis address and data keys. The client will fetch the data with few&#xA;Redis readings.</li>&#xA;</ol>&#xA;&#xA;<p>What is <strong>fastest</strong> and the industry <strong>best known method</strong> to send back the results?</p>&#xA;"
40208887,"When utilizing a microservices architecture, will the underlying read/write database become a bottleneck?",2016-10-23 23:36:41,<sql><amazon-web-services><scalability><microservices>,3,348,1,0.0,0,"<p>As I described in the question, if I were to implement a microservices architecture, would the centralized read/write database become a bottleneck?</p>&#xA;&#xA;<p>To expand with an example, let's say I have three microservices: <code>users</code>, <code>teams</code>, and <code>team_members</code>. Each has its own microservice, but they all rely on each other in the database, so exclusive, parallel databases wouldn't be appropriate. Since microservices is meant to distribute the work to several different servers, doesn't the central database ultimately defeat the purpose of these microservices, as they all end up calling to the same server?</p>&#xA;"
35914674,Cascading microservices using Meteor,2016-03-10 11:06:08,<meteor><package><cluster-computing><microservices>,1,169,11,1.0,0,"<p>I've been looking into scaling Meteor, and had an idea by using the <a href=""https://www.google.co.uk/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;cad=rja&amp;uact=8&amp;ved=0ahUKEwi3z66g-7XLAhWDRhQKHS_qBwsQFggkMAA&amp;url=https%3A%2F%2Fgithub.com%2Fmeteorhacks%2Fcluster&amp;usg=AFQjCNEy9N5lo-9TmjFYvjgmCCO93mAwmg"" rel=""nofollow"">Meteor Cluster package</a>;</p>&#xA;&#xA;<ul>&#xA;<li>Create a super-service*, which the user connects to, containing general core packages to be used by every micro-service (api, app, salesSite, etc. would make use of its package),</li>&#xA;<li>The super-service then routes to the appropriate micro-service (e.g., the app), providing it with the functionality of its own packages.</li>&#xA;</ul>&#xA;&#xA;<p>(* - as in super- and sub-, not that it's awesome... I mean it is but...)</p>&#xA;&#xA;<p>The idea being that I can cascade each service as a superset of the super-service. This would also allow me to cleverly inherit functionality for other services in a cascading service style. E.g.,</p>&#xA;&#xA;<p>unauthedApp > guestApp > userApp > modApp > adminApp, </p>&#xA;&#xA;<p>for the application, where the functionality of the previous service are inherited to the preceding service (e.g., the further right along that chain, the more extra functionality is added and inherited).</p>&#xA;&#xA;<p>Is this possible?</p>&#xA;&#xA;<p>EDIT: If possible, is there a provided example of how to implement such a pattern using micro-services?</p>&#xA;&#xA;<p><strong>[[[[[ BIG EDIT #2: ]]]]]</strong></p>&#xA;&#xA;<p>Think I'm trying to make a solution fit the problem, so let me re-explain so this question can be answered based on the issue rather than the solution I'm trying to implement.</p>&#xA;&#xA;<p>Basically, I want to ""inherit"" (for lack of a better word) the packages depended on needed functionality, so that no code is unnecessarily sent through the wire. </p>&#xA;&#xA;<p>So starting with the core packages, which has libraries I want all of my services to have, I then want to further ""add"" the functionality as needed. Then I want to add page packages if serving a page-based service (instead of, say, the API service, which doesn't render pages), then the appropriate role-based page packages, etc., until the most specific packages are added.</p>&#xA;&#xA;<p>My thought was that I could make the services chain in such a way that I could traverse through from the most generic to most specific service, and that would finally end with a composition of packages from multiple services. So, for e.g., the guestApp, that might be the core packages + generic page packages + generic app packages + unauthApp packages + guestApp packages, so no unneccessary packages are added.</p>&#xA;&#xA;<p>Also with this imaginary pattern I'm describing, I don't need to add all my core packages to each microservice - I can deal with them all within the core package right at the top of the package traversal I've discussed above and not have to worry about forgetting to add the packages to the ""inherited"" packages.</p>&#xA;&#xA;<p>Hope my reasoning here makes sense, and I hope you guys know of a best practice for doing this. Thank you!</p>&#xA;"
35589008,Advice on how to monitor (micro)services?,2016-02-23 21:54:58,<service><spring-boot><monitoring><microservices><spring-boot-actuator>,1,851,2,0.0,0,"<p>We are transitioning from building applications on monolith application servers, to more microservices oriented applications on Spring Boot. We will publish health information with SB Actuator through HTTP or JMX.</p>&#xA;&#xA;<p>What are the options/best practices to monitor services, that will be around 30-50 in total? Thanks for your input!</p>&#xA;"
39721025,microservices for very small enterprise,2016-09-27 09:28:42,<api><web-applications><architecture><microservices>,2,699,2,0.0,0,"<p>Presently i'm working as web developper in a small company and i'm in charge to create a new web software to manage our business.&#xA;We cannot hire new developpers yet and we must deliver a first version as soon as posible.&#xA;In this context, i'm thinking about microservices architecture and i don't know if we should spend some time and resources to start our project with this kind of architecture.&#xA;Somebody has some experience about this subject?</p>&#xA;&#xA;<p>Thanks,</p>&#xA;"
44394119,monolithic or microservice concept,2017-06-06 15:30:08,<django><microservices>,2,610,0,0.0,0,"<p>I have a very large django project with many features that uses django as backend framework. My project lets users use both a website and a iOS app.</p>&#xA;&#xA;<p>I am researching using a monolithic app (currently using monolithic) vs micro services, I watched this <a href=""https://www.youtube.com/watch?v=OuhCYGLByJg"" rel=""nofollow noreferrer"">video</a> but one part really throws me off. At 1:05, he previews his 'monolithic' app before he changes to micro services, which to me looks like a single project with a bunch of different apps. </p>&#xA;&#xA;<p>1) Are these technically just folders and not apps? These (what i would assume he calls folders) all have a models.py and views.py and most have a admin.py.</p>&#xA;&#xA;<p>2) What makes this a monolithic app? Is it just because he doesn't simply use django-admin startapp in the terminal to create these 'folders'?</p>&#xA;&#xA;<p>3) Or are microservices multiple projects connected and not simply multiple apps in a single project?</p>&#xA;&#xA;<p>My biggest confusion is with the previewed project in the video because before then I thought I had a good grasp on these concepts. I was simply looking to change to microservices, after this part in the video I'm not sure I even know what a monolithic app really is.</p>&#xA;"
51566509,In Microservices is it acceptable to have an API returning an Aggregate Root that was replicated?,2018-07-27 22:56:45,<domain-driven-design><microservices><multiple-databases><aggregateroot>,3,72,7,0.0,0,"<p>Imagine we have a microservice M1 with an aggregate root called <code>Player</code> and a microservice M2 with an aggregate root called <code>Classification</code>, now in the M1 we need to do some logic based on some property from <code>Classification</code>, now some steps to do that are:</p>&#xA;&#xA;<ol>&#xA;<li>Replicate the list of possible Classifications to M1 via asynchronous messaging;</li>&#xA;<li>Do what is asked by the business in M1;</li>&#xA;</ol>&#xA;&#xA;<p>Ok, now imagine we have a view to add Players, and in that view is possible to choose the <code>Classification</code> of the new <code>Player</code> from a dropdown list. Now the question:</p>&#xA;&#xA;<p>Should the dropdown list be populated with the Classifications that were replicated into M1 or from M2?</p>&#xA;&#xA;<p>As you can see, by using the data from M1 we would have to expose the <code>Classification</code> from M1 via an API, thus the title of the question.</p>&#xA;&#xA;<p><strong>EDIT</strong></p>&#xA;&#xA;<p>The replications happens through async messaging using events, so I'm not exposing the entire aggregate to M1 just some properties like an Id and the Description of the classification.</p>&#xA;"
35286730,How to execute efficient communication for multiple (micro)services?,2016-02-09 08:01:49,<php><rest><restful-architecture><microservices>,1,574,1,1.0,0,"<p><strong>Case:</strong> Software build with many microservices and internal services.</p>&#xA;&#xA;<p><strong>The doubt</strong> is how to manage performance issues (network latency, size of resource) getting multiple resources from many microservices at once.</p>&#xA;&#xA;<p>I Just can not imagine making 20 HTTP requests to access all necessary resources.</p>&#xA;"
43032883,How could authentication work across microservices?,2017-03-26 18:31:33,<javascript><node.js><authentication><jwt><microservices>,3,111,3,0.0,0,"<p>I have two separate Node.js services.</p>&#xA;&#xA;<p>Service <code>A</code> is responsible for authenticating users.  If a user successfully logs in, the user is redirected to Service <code>B</code> (hosted on a <strong>subdomain</strong> of the domain Service <code>A</code> is hosted on).</p>&#xA;&#xA;<p>I am using <a href=""https://jwt.io/"" rel=""nofollow noreferrer"">JWT</a> for authentication.</p>&#xA;&#xA;<p><strong>Question:</strong> How can Service <code>B</code> be aware if a user is or is not authenticated?</p>&#xA;&#xA;<p>I imagine one way that Service <code>B</code> could be aware if they are or aren't authenticated is by asking Service <code>A</code> to check the JWT on each  Request to Service <code>B</code>. But how is Service <code>A</code> supposed to send the JWT to the client when the client is going to be redirected to a new origin?</p>&#xA;&#xA;<p>Is it safe to do something like:</p>&#xA;&#xA;<pre><code>window.location.href = 'https://b.example.com?jwt=tokenhere'&#xA;</code></pre>&#xA;&#xA;<p>I don't believe storing the JWT on <code>localStorage</code> since it does not allow cross origin access.</p>&#xA;"
36176403,Spring boot microservice with OAuth 2 and JWT for Security,2016-03-23 11:04:25,<oauth-2.0><spring-boot><jwt><microservices><api-management>,1,1343,0,0.0,0,"<p>I am developing a Spring boot application for payment using microservices, which will be consumed by mobile application and web application. </p>&#xA;&#xA;<p>1) Users need to be authenticated for accessing the mobile app</p>&#xA;&#xA;<p>2) Third party mobile apps using my services need to be authenticated (with my app)</p>&#xA;&#xA;<p>3) Web applications using my services need to be authenticated. </p>&#xA;&#xA;<p>My user details will be there in DB or LDAP. I have plans for integrating IBM API management and the deployment will be in on-premise servers. Based on this requirement how I need to design and implement my solution? </p>&#xA;&#xA;<p>After going through different blogs I am confused now. So a proper guidance will be very helpful for me.</p>&#xA;"
50663047,Microservices and Rest services deployed as jar file?,2018-06-03 03:35:19,<java><rest><war><microservices>,3,66,0,0.0,0,"<p>Let's take the simple example, where I have multiplication service as part of single monolithic MathService(deployed as war).</p>&#xA;&#xA;<p>Now I need to deploy multiplication service as separate service(rest service) which MathService can call. The concept of dividing the single monolithic&#xA;in to small maintainable service is microservice.</p>&#xA;&#xA;<p>But I am not sure is it mandatory to deploy Multiplication service as war file? Can it be still deployed as jar file on the web server?</p>&#xA;&#xA;<p>My understanding is that it should be war file as rest calls(HTTP call) needs to be handled by the servlet. Including servlet means it has to be war file.&#xA;Is that correct?</p>&#xA;"
50627087,"If my users are stored in another database, should I duplicate them in my service that uses SQL database?",2018-05-31 14:48:42,<mysql><sql><postgresql><microservices>,2,39,5,0.0,0,"<p>If my users are stored in some other database, but I am building posts in my SQL database, should I create another table <code>users</code>?</p>&#xA;&#xA;<p>If I did, I would be duplicating all of my users and would have to make sure this stays in sync with the other database, but on the other hand, my posts tables could save space by referring to fk instead of full id string each time.</p>&#xA;&#xA;<p>What is the recommendation? Create another table <code>users</code> or just pass in the user ids to query? </p>&#xA;"
42046797,"New to Microservices - refactoring a monolith ""Marketplace"" database",2017-02-04 23:20:58,<oop><microservices>,1,180,3,0.0,0,"<p>I am new to microservices and have been struggling to wrap my brain around it. On the surface they sound like a good idea, but from a practical standpoint, I can't break away from my centralized database background. For an example, I have this real-world Marketplace example that I cannot figure out if microservices would help or hurt. This site was working well until the PO asked for ""Private Products."" Now it is fragile and slow so I need to do a major refactor. A good time to implement microservices. I feel like many systems have this type of coupling, so that deconstructing this example would be very instructive. </p>&#xA;&#xA;<p><strong>Current State</strong> </p>&#xA;&#xA;<p>This is a b2b marketplace where users belong to companies that are buying products from each other. Currently, there exists a monolithic database: User, Company, Catalog, Product, and Order. (This is a simplification, the actual scenario is much more complicated, users have roles, orders have header/detail, products have inventories, etc.)</p>&#xA;&#xA;<ul>&#xA;<li>Users belong to Companies</li>&#xA;<li>Companies have a Catalog of their Products</li>&#xA;<li>Companies have Orders for Products from other Companies </li>&#xA;</ul>&#xA;&#xA;<p>So far so good. I could see breaking the app into microservices on the major entity boundaries. </p>&#xA;&#xA;<p><strong>New Requirement</strong></p>&#xA;&#xA;<p>Unfortunately for my architectural aspirations, the product owner wants more features. In this case: Private Products.</p>&#xA;&#xA;<ul>&#xA;<li>Products are Public or Private</li>&#xA;<li>Companies send time-bound Invitations to Products or Catalogs to Users of other Companies</li>&#xA;</ul>&#xA;&#xA;<p>This seemingly simple request all the suddenly complicated everything.</p>&#xA;&#xA;<p><strong>Use Case - User displays a list of products</strong></p>&#xA;&#xA;<p>For example, listing or searching products was once just a simple case of asking the Products to list/search themselves. It is one of the top run queries on the system. Unfortunately, now what was a simple use case just got messy.</p>&#xA;&#xA;<ul>&#xA;<li>A User should be able to see all public Products (easy)</li>&#xA;<li>A User should be able to see all their own Company's private Products (not horrible)</li>&#xA;<li>A User can see any Product that their Company has Ordered in the past regardless of privacy (Uh oh, now the product needs to know about the User Company's Order history) </li>&#xA;<li>A User can see any private Product for which they have an active Invitation (Uh oh, now the product needs to know about the User's Product or Catalog Invitations which are time dependent)</li>&#xA;</ul>&#xA;&#xA;<p><strong>Initial Monolithic Approach</strong></p>&#xA;&#xA;<p>This can be solved at the database level, but the SQL joins basically ALL of the tables together (and not just master data tables, all the transactions as well.) While it is a lot slower than before, since a DBMS is designed for big joins it seems like the appropriate tool. So I can start working on optimizing the query. However, as I said, for this and other reasons the system is feeling fragile.</p>&#xA;&#xA;<p><strong>Initial Design Thoughts... and ultimately my questions</strong></p>&#xA;&#xA;<p>So considering a Microservices architecture as a potential new direction, I began to think about how to start. Data redundancy seems necessary. Since, if I translate my major entities into services, asking to get a list of products without data redundancy would just have all of the services calling each other and a big slow mess. </p>&#xA;&#xA;<p>Starting with a the idea of carving out ""Product and Catalog"" as its own microservice. Since Catalogs are just collections of Products, they seem to belong together - I'll just call the whole thing the ""Product Service"". This service would have an API for managing both products and catalogs and, most importantly, to search and list them.</p>&#xA;&#xA;<p>As a separate service, to perform a Product search would require a lot of redundant data as it would have to subscribe to any event that affected product privacy, such as:</p>&#xA;&#xA;<ul>&#xA;<li>Listen for Orders and keep at least a summary of the relationship between purchased Products and Purchasing Companies</li>&#xA;<li>Listen to Invitations and maintain a list of <strong>active</strong> User/Product/Time relationships </li>&#xA;<li>Listen to User and Company events to maintain a User to Company relationship</li>&#xA;</ul>&#xA;&#xA;<p>I begin to worry about keeping it all synchronized. </p>&#xA;&#xA;<p>In the end, a Product Service would have a large part of the current schema replicated. So I begin to think, maybe Microservices won't work for this situation. Or am I being melodramatic and the schema will be simpler enough to be more managable and faster so it is worth it?</p>&#xA;&#xA;<p>Overall, am I thinking about this whole approach properly? Is this how microservice based designs are intended to be thought through? If not, can somebody give me a push in a different direction?</p>&#xA;"
42061684,Microservice redundancy issue in our architecture,2017-02-06 06:36:51,<microservices>,1,246,4,0.0,0,"<p>We have 12 microservices deployed in our application server. Problem is, since we have a microservice for each specific function, a lot of libraries are being repeated in each microservice instead of if they are shared in larger monolithic services or app. This causes each .ear file to be large per microservice. with this, out of memory errors start to happen more often.</p>&#xA;&#xA;<p>Is there any way to get around this? or better ways to do this?</p>&#xA;"
42691892,Microservices Per DB table,2017-03-09 09:47:19,<domain-driven-design><microservices>,3,200,2,0.0,0,"<p>I ran into the microservices architecture for e-commerce application where each table has it's own micro service basically with CRUD operations (something like rest client for each table). &#xA;Now I am thinking about combine and model them around business domains, before that I wanted to know does anyone encountered such situation and is it right architecture or not.&#xA;Any suggestions will be very helpful.&#xA;Thanks.</p>&#xA;"
42778151,Integrating with Auth0,2017-03-14 05:10:33,<publish-subscribe><microservices><cqrs><eventual-consistency>,1,38,4,0.0,0,"<p>I'm in the process of implementing a user management Microservice (MS) and wanted to find out whether what I'm doing is ok. Users are created from the UI, which interacts with an API. The API makes an RPC call to the user management MS, and publishes a CreateUserCommand to an InMem-bus. The consumer then handles the command by then creating a user in the DB, but then I need this user also registered within Auth0 - would the way to go about this be to send a different command to a persistent queue, for a subscriber to pick it up and register that user with Auth0 (persistent queue in case can't reach Auth0). Once that completes successfully, I could then publish a UserCreatedEvent? </p>&#xA;&#xA;<p>Any help with this would be much appreciated.</p>&#xA;"
38297333,Sharing data among Microservices‏,2016-07-10 23:27:59,<rest><design-patterns><enterprise><restful-architecture><microservices>,2,774,4,1.0,0,"<p>I'm seeking an answer to a design question that I didn't find an answer to in any literature on this matter. Allow me to explain the use case, my solution to it and, ask for your opinion as a subject matter expert.</p>&#xA;&#xA;<p><strong>Use Case</strong>:&#xA;We've several Microservices that all return some form of content from different business domains. We're using Spring Cloud Netflix, so a gateway service routes traffic to the content services. Some, if not all, of these services require data that is derived from the request, and is immutable. A trivial example is locale, although there are other proprietary information too.</p>&#xA;&#xA;<p><strong>Solution</strong>:&#xA;I'm currently deriving the shared data in the gateway service and persisting as JSON in a NoSQL database with a unique key. Then I'm adding the key as a request header before routing the request. I've a shared library that the content services include at build time, and includes a Spring bean that reads the key from the request header, fetches the stored data using the key and initializes itself. This makes it possible for the content services to access the shared data (by simply injecting the previously mentioned bean) without knowing the underlying mechanism.&#xA;If a content service invokes another one, it's responsible for adding the unique key as a request header.</p>&#xA;&#xA;<p><strong>Debate</strong>:&#xA;The debate I've with my colleagues is that whether using a shared datastore for this purpose is appropriate. I contend that it is bad for a service to leak it's domain specific data to others, but the data in question isn't domain specific, so there's nothing wrong with having a shared database and passing the key around. The alternative would be to pass all the shared data around which I consider redundant.</p>&#xA;&#xA;<p>What is your thought?</p>&#xA;&#xA;<p><strong>Edit</strong>: I see someone voted to close the question. Unless they can point me to a reference that discusses data sharing among Microservices, such policing is a hindrance to meaningful discussion. Not every question is a boolean yes/no answer, some require deeper thoughts.</p>&#xA;"
38352227,What is the name of this 'intermediary' pattern?,2016-07-13 12:48:52,<java><web-services><design-patterns><microservices>,1,99,5,0.0,0,"<p>I've got an intermediary java web service application application (built using Spark Java - but that is incidental) that takes an http parameter - from it generates a URL - calls the URL and then returns the result to the original caller. </p>&#xA;&#xA;<pre><code>Original Client -&gt; My Application -&gt; Http Web Service Producer&#xA;</code></pre>&#xA;&#xA;<p>This is kind of a MicroServices pattern - but I'm looking for a more specific term. I think it is a 'pipeline', 'solicitor' or a 'mediator'. </p>&#xA;&#xA;<p>My question is: <strong>What is the name of this 'intermediary' pattern?</strong></p>&#xA;"
38397672,Multiple database management,2016-07-15 13:44:30,<mongodb><haxe><microservices>,1,174,6,0.0,0,"<p>I'm currently working on a multiplayer game which will be using two databases(MONGODB). One for authentication(login) and one to contain all game-specific data.&#xA;What I've done is to separate the user and game specific data. This way i'll be able to build micro services around the user in the future.</p>&#xA;&#xA;<p>I'm a bit uncertain on how to handle/validate the game-specific database operations tho.&#xA;When i log into my game, i perform a POST request to my rest api, which validates the user and returns some data.</p>&#xA;&#xA;<p>The game itself however, is using a TCP socket connection to handle real-time gameplay and will be saving game-specific data to the database on the authoritative server(all game logic is done on the server) . How would you go about to link the data on the game-specific database to a specific user found in the authentication database?</p>&#xA;"
49579074,Cache Implementation in Microservices best practises,2018-03-30 17:54:05,<caching><microservices>,1,28,4,0.0,0,<p>I want to ask one design related question as we have multiple micro-services and we want to implement cache for them. </p>&#xA;&#xA;<p>There is a possibility of having different services accessing the same cache for setting and fetching data from this cache So what should be the best way of doing it. </p>&#xA;&#xA;<p>Assuming we have customer service which updates the cache with customer data and we have a cart cache which do needs this data to set in cart object which contains this customer data so for this kind of scenario what would be the best way of implementing this.</p>&#xA;
51224374,Microservice requests,2018-07-07 15:04:26,<microservices>,2,40,3,0.0,0,"<p>I'm trying to start a little microservice application, but I'm a little bit stuck on some technicalities.</p>&#xA;&#xA;<p>I'm trying to build an issue tracker application as an example.</p>&#xA;&#xA;<p>It has 2 database tables, issues and comments. These will also be separate microservices, for the sake of the example.</p>&#xA;&#xA;<p>It has to be a separate API that can be consumed by multiple types of clients e.g. mobile, web etc..</p>&#xA;&#xA;<p>When using a monolitic approach, all the codebase is coupled together, and when making a request to let's say the REST API, I would handle for example the '/issues/19' request&#xA;to fetch the issue with the id '19' and it's corresponding comments by means of the following pseudocode.</p>&#xA;&#xA;<pre><code>on_request_issue(id) # handler for the route '/issues/&lt;id&gt;'&#xA;    issue = IssuesModel.findById(id)&#xA;    issue.comments = CommentsModel.findByIssueId(id)&#xA;    return issue&#xA;</code></pre>&#xA;&#xA;<p>But I'm not sure on how I should approach this with microservices. Let's say that we have microservice-issues and microservice-comments.</p>&#xA;&#xA;<p>I could either let the client send a request to both '/issues/19' and '/comments/byissueid/19'. But that doesn't work nice in my point of view, since if we're having multiple things&#xA;we're sending alot of requests for one page.</p>&#xA;&#xA;<p>I could also make a request to the microservice-issues and in that one also make a request to the microservice-comments, but that looks even worse to me than the above, since from what&#xA;I've read microservices should not be coupled, and this couples them pretty hard.</p>&#xA;&#xA;<p>So then I read about API gateways, that they could/should receive a request and fan out to the other microservices but then I couldn't really figure out how to use an API gateway. Should&#xA;I write code in there for example to catch the '/issues/19' request, then fan out to both the microservice-issues and microservice-commetns, assemble the stuff and return it? &#xA;In that case, I'm feeling I'm doing the work double, won't the API gateway become a new monolith then?</p>&#xA;&#xA;<p>Thank you for your time</p>&#xA;"
49349235,"Micro-services architecture, need advise",2018-03-18 14:48:43,<microservices>,5,104,0,1.0,0,"<p>We are working on a system that is supposed to 'run' jobs on distributed systems.</p>&#xA;&#xA;<p>When jobs are accepted they need to go through a pipeline before they can be executed on the end system.</p>&#xA;&#xA;<p>We've decided to go with a micro-services architecture but there one thing that bothers me and i'm not sure what would be the best practice.</p>&#xA;&#xA;<p>When a job is accepted it will first be persisted into a database, then - each micro-service in the pipeline will do some additional work to prepare the job for execution.</p>&#xA;&#xA;<p>I want the persisted data to be updated on each such station in the pipeline to reflect the actual state of the job, or the its status in the pipeline.</p>&#xA;&#xA;<p>In addition, while a job is being executed on the end system - its status should also get updated.</p>&#xA;&#xA;<p>What would be the best practice in sense of updating the database (job's status) in each station:</p>&#xA;&#xA;<ol>&#xA;<li><p>Each such station (micro-service) in the pipeline accesses the database directly and updates the job's status</p></li>&#xA;<li><p>There is another micro-service that exposes the data (REST) and serves as DAL, each micro-service in the pipeline updates the job's status through this service</p></li>&#xA;<li><p>Other?....</p></li>&#xA;</ol>&#xA;&#xA;<p>Help/advise would be highly appreciated.</p>&#xA;&#xA;<p>Thanx a lot!!</p>&#xA;"
49353369,Microservices and messaging,2018-03-18 22:16:25,<microservices><messaging>,1,43,3,0.0,0,<p>I'm in the process of restructuring my first application to use microservices and messaging using an event driven architecture. I will have a content microservice to retrieve content from various sources and add to a message queue for processing. My query is that should the content microservice store the content in its own database as well or is that redundant as I am using messaging?  </p>&#xA;
46725906,Spring boot micro services rest API security,2017-10-13 08:43:38,<rest><security><spring-boot><oauth><microservices>,1,691,0,0.0,0,<p>Am newbie to spring boot micro services. I have 3 micro service that are</p>&#xA;&#xA;<pre><code>1. Login authentication&#xA;2. User service&#xA;3. Account service.&#xA;4. UI Service&#xA;</code></pre>&#xA;&#xA;<p>UI Service contains UI part this micro service will calls other API's. First 3 services should validate every rest api calls. I need to implement security for rest api calls that need to be global and shared across all micro services. What would be the best approach without using oauth. Because OAuth need server. Hence without this is there any way to achieve this. I googled and not getting clear view. how to resolve this</p>&#xA;
46717204,Microservices sequential data processing,2017-10-12 19:10:19,<multithreading><microservices><partitioning><seq>,1,31,3,0.0,0,"<p>Suppose I am receiving a stream of unordered sequential data in time.</p>&#xA;&#xA;<p>For example, input could be:</p>&#xA;&#xA;<pre><code>[&#xA;    {id:1, timestamp:1},&#xA;    {id:2, timestamp:1},&#xA;    {id:2, timestamp:2},&#xA;    {id:1, timestamp:2},&#xA;    {id:3, timestamp:1}&#xA;] &#xA;</code></pre>&#xA;&#xA;<p>Each entity is identified by 'id' field. There could be a large amount of entities and processing for each input could take some time. &#xA;The problem is that I need to process each of those events in order it was received for each entity. </p>&#xA;&#xA;<p>I was considering some solutions as to put messages to Kafka topic with partitions and receive parallelism?&#xA;Or create local storage of received messages and marking each processed message for each entity after successful processing (on other machine or on the same in Thread pool)?</p>&#xA;&#xA;<p>Questions:&#xA;Is it is a good solution? &#xA;How can I reach this functionality while scaling data consumers (having fixed number of services/ creating new instances)? &#xA;Maybe there is a better way to solve such kind of problem?</p>&#xA;"
46782161,User preferences with microservice architecture,2017-10-17 03:49:05,<amazon-web-services><microservices><user-preferences>,1,178,4,0.0,0,"<p>Me and my team are implementing a product based on microservices architecture(<strong><em>every microservice has it's own data storage</em></strong>). We already have a couple of services deployed on AWS and we need to add an ability to save user preferences like:</p>&#xA;&#xA;<ol>&#xA;<li>Saved filters to query data</li>&#xA;<li>UI widget settings</li>&#xA;<li>Columns order</li>&#xA;<li>etc</li>&#xA;</ol>&#xA;&#xA;<p><strong>I think that we have the following options to implement saving user-preferences in my case:</strong></p>&#xA;&#xA;<ol>&#xA;<li>Extend user profile(it is used to store companies and users, roles) service and add new items there</li>&#xA;<li>Create new microservice for keeping only user preferences</li>&#xA;<li>Use some of AWS services for that(I am still checking what is the best)</li>&#xA;</ol>&#xA;&#xA;<p><strong>What we use for security:</strong></p>&#xA;&#xA;<ul>&#xA;<li>AWS Cognito</li>&#xA;<li>SAML IDP</li>&#xA;<li>JWT tokens</li>&#xA;</ul>&#xA;&#xA;<p>We also have user-profile microservice(I mentioned earlier). It contains data received from other products like admin service.</p>&#xA;&#xA;<p>What do you think? What is the best option for my case?</p>&#xA;"
46786169,How to check the request body parameters type validation in akka http micro-services?,2017-10-17 08:52:38,<scala><akka><microservices><akka-http>,1,326,6,1.0,0,"<p>my Object is</p>&#xA;&#xA;<pre><code>case class  Request(id:Int,name:String,phone:String)&#xA;</code></pre>&#xA;&#xA;<p>my request in postman is</p>&#xA;&#xA;<pre><code>{&#xA;    ""id"":   ""1205"", **here i have changed the request body parameter type Int to String**&#xA;    ""name"":     ""sekhar"",&#xA;    ""phone"":""1234567890""&#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>how can I check the request parameter is valid or invalid when my request body field is the wrong data type</p>&#xA;&#xA;<p>I have used</p>&#xA;&#xA;<pre><code>implicit def myRejectionHandler = RejectionHandler.newBuilder()&#xA;    .handle {&#xA;      case MissingQueryParamRejection(param) =&gt;&#xA;        println("" Test1  "")&#xA;        val errorResponse = ErrorResponse(BadRequest.intValue, ""Missing Parameter"", s""The required $param was not found."")&#xA;        var json:JsValue=Json.toJson(errorResponse)&#xA;        complete(HttpResponse(BadRequest, entity = HttpEntity(ContentTypes.`application/json`, json.toString())))&#xA;    }&#xA;    .handle { case MissingFormFieldRejection(msg) =&gt;&#xA;      println("" Test2  "")&#xA;      complete(BadRequest, msg)&#xA;    }&#xA;    .handle { case MalformedQueryParamRejection(msg,error,cause) =&gt;&#xA;      println("" Test3  "")&#xA;      complete(BadRequest, msg)&#xA;    }&#xA;    .handleAll[MethodRejection] { methodRejections =&gt;&#xA;    val names = methodRejections.map(_.supported.name)&#xA;     println("" Test4  "")&#xA;    complete((MethodNotAllowed, s""Can't do that! Supported: ${names mkString "" or ""}!""))&#xA;    }&#xA;    .handleNotFound { complete((NotFound, ""Not here!"")) }&#xA;    .result()&#xA;&#xA;val routes: Route = handleRejections(myRejectionHandler) {&#xA;    //Routes &#xA;  }&#xA; Http().bindAndHandle(routes, ""localhost"", 8090)&#xA;</code></pre>&#xA;&#xA;<p>it's, again and again, takes only handleAll[MethodRejection] when being changed the query params(for the false parameter too) on that time too.</p>&#xA;"
38647186,In a microservices based architecture how would i go about database access?,2016-07-28 21:40:04,<database><hibernate><microservices>,1,714,0,0.0,0,<p>I am trying to push myself into developing a set of microservices for a personal project that will essentially:</p>&#xA;&#xA;<p>Use elastic search&#xA;Poll various data stores&#xA;place data and read data from a data store&#xA;Expose a rest api to users</p>&#xA;&#xA;<p>for the purposes of this example lets say I had a bookings MS and a Sales MS</p>&#xA;&#xA;<p>The first thing that occurred to me was how to handle data storage.</p>&#xA;&#xA;<ol>&#xA;<li>Should each MS have its own data store?</li>&#xA;<li>Should I introduce a Persistence MS which handles all data from all other micro services (seems odd to do this).</li>&#xA;<li>Should each MS share a database but handle its own transactions.</li>&#xA;</ol>&#xA;&#xA;<p>In the case where you have each service handling its own persistence will that not significantly bloat a micro service to the point where you have a lot of boilerplate code and a large overall footprint of libraries (as an example hibernate would be a required library across every project and it seems terrible to have every MS having to load the same set of libraries).</p>&#xA;&#xA;<p>So I suppose the overriding question is what is the accepted methodology for managing database connectivity across a micro service architecture.</p>&#xA;
45085790,"Spring cloud DiscoveryClient. getLocalServiceInstance() deprecated, how to use Registration?",2017-07-13 15:57:59,<java><spring><microservices><spring-cloud><auto-registration>,1,734,1,0.0,0,"<p>I have a requirement to get the current instance-id of the running microservice, the problem is that I have the requirement that if the process is not registered a ""random generated"" instance id has to be provided.</p>&#xA;&#xA;<p>I'm trying to get the service instance id from the DiscoveryClient but as the code points out the <code>getLocalServiceInstance</code> is deprecated and I can't use it.</p>&#xA;&#xA;<p>I tried to use the <code>Registration</code> as stated in the javadoc but coudn't find a way to get it initialized.</p>&#xA;&#xA;<p>Is there a conventional/specific way to get a service own registration?</p>&#xA;&#xA;<p>Btw, I cannot use a direct implementation because it is a starter that does not know what DiscoveryService implementation will be available at runtime.</p>&#xA;&#xA;<pre><code>/**&#xA; * @deprecated use the {@link org.springframework.cloud.client.serviceregistry.Registration} bean instead&#xA; *&#xA; * @return ServiceInstance with information used to register the local service&#xA; */&#xA;@Deprecated&#xA;ServiceInstance getLocalServiceInstance();&#xA;</code></pre>&#xA;"
44936115,Authorization in microservice architecture,2017-07-05 21:15:11,<scope><authorization><microservices>,1,695,8,1.0,0,"<p>currently I develop a backend based on the microservice architecture.&#xA;Unfortunately, I have a problem how to realize the authorization.</p>&#xA;&#xA;<p>So let me explaine my system - there are the following services:</p>&#xA;&#xA;<ul>&#xA;<li>OAuth 2.0 Service (issuing JWT)</li>&#xA;<li>Group Service</li>&#xA;<li>Some Ressource Services (e.g. ToDos Service)</li>&#xA;</ul>&#xA;&#xA;<p>Every user is in one or many groups.&#xA;Each resource (like a ToDo list) also belongs to a group.&#xA;That means if some user creates a todo list, that list gets stored in the name of the group.</p>&#xA;&#xA;<p>Szenario:</p>&#xA;&#xA;<ul>&#xA;<li>User A is in group A</li>&#xA;<li>User B is in group A and B</li>&#xA;<li>User C is in group C</li>&#xA;<li>User A creats a ToDo list in group A.</li>&#xA;<li>User B modifies this ToDo list (he is allowed to do this since he is also in group A)</li>&#xA;<li>User C also tries to modify this ToDo list, but he shouldn't allowed to do this since he is only in group C.</li>&#xA;</ul>&#xA;&#xA;<p>Has any body a great idea how I could realize this in a microservice architecture and keep the dependencies between the services on a minimum?</p>&#xA;&#xA;<p>Certainly, I could ask on every request the Group Service if the user is in the group to which the resource belongs to. But so I get a really hard dependency between the Resource Services and the existence of a Group Service - I like to avoid this dependency.&#xA;Another option would be to store all groups, to which the user belongs to, in the access token. But with this option the client has to ask every time the OAuth Service for a new token when the user gets a member of a new group.</p>&#xA;&#xA;<p>So is there any other option how I could realize this szenario?</p>&#xA;"
49013500,OAuth 2.0 Flows for Microservice Architectures,2018-02-27 16:31:08,<oauth-2.0><authorization><microservices><auth0>,3,248,0,0.0,0,"<p>I'm trying to understand how to best apply the OAuth 2.0 grant types to a microservice architecture I am working on. Here's the situatation...</p>&#xA;&#xA;<p>I have a Single-Page Application/Mobile App acting as a client running in a web browser (browser acting as the user agent) or mobile phone. I use the <strong>Implicit Grant</strong> defined in <a href=""https://tools.ietf.org/html/rfc6749#section-4.2"" rel=""nofollow noreferrer"">RFC 6749, section 4.1</a> to authenticate a user and acquire an access token that the app uses to access some externally exposed API.</p>&#xA;&#xA;<p>The architecture I am dealing with is a collection of microservices that call on one another. For example, consider an externally exposed API <code>serviceA</code> and internal APIs <code>serviceB</code> and <code>serviceC</code>. Let's say <code>serviceA</code> depends on <code>serviceB</code> which subsequently depends on <code>serviceC</code> (<code>A</code> --> <code>B</code> --> <code>C</code>). </p>&#xA;&#xA;<p>My question is, what is the typical authorization flow for this situation? Is it standard to use Implicit Grant for the SPA to acquire an access token and then use the <strong>Client Credentials Grant</strong> defined in <a href=""https://tools.ietf.org/html/rfc6749#section-4.4"" rel=""nofollow noreferrer"">RFC 6749, section 4.4</a> to acquire an access token for the machine to machine interaction between <code>serviceB</code> and <code>serviceC</code>?</p>&#xA;"
48956086,Patterns to segregate Models and DbContext on ASP.NET Core microservices,2018-02-23 20:55:05,<design-patterns><asp.net-core><.net-core><microservices><ef-core-2.0>,1,79,3,0.0,0,"<p>I'm trying to make my services to deploy individually without depending on each other.</p>&#xA;&#xA;<p>All services will be using the same SQL database using EF Core (same DbContext).</p>&#xA;&#xA;<p>I'm using a separate project (MyServices.Data) that has all my models and the DbContext, but I'm really dependent on this and if there is any change on this Data project, all services needs to be redeployed.</p>&#xA;&#xA;<p>Is there any pattern/approach to this situation so I can have my project not dependant on it?</p>&#xA;"
36719045,kafka + storm topology vs microservices,2016-04-19 12:53:41,<java><apache-kafka><apache-storm><microservices>,2,724,1,1.0,0,"<p>what's the benefit of using storm topology when one can use microservices that connect to kafka directly. the microservice approach seems to offer much better solution for:</p>&#xA;&#xA;<ul>&#xA;<li>tools (every possible library, IoC container etc)</li>&#xA;<li>continuous deployment (existing tools and best practices)</li>&#xA;</ul>&#xA;&#xA;<p>while storm topology seems to use plain java with need of static functions. </p>&#xA;&#xA;<p>so what are the benefits of using storm topology instead of microservices?</p>&#xA;"
36775802,Sharing huge data between microservices,2016-04-21 16:42:08,<microservices>,2,2005,1,0.0,0,"<p>I am designing an review analysis platform in microservices architecture. </p>&#xA;&#xA;<p>Application is works like below;</p>&#xA;&#xA;<ul>&#xA;<li>all product reviews retrieved from ecommerce-site-a ( site-a ) as an excel file </li>&#xA;<li>reviews are uploaded to system with excel </li>&#xA;<li>Analysis agent can list all reviews, edit some of them, delete or approve</li>&#xA;<li>Analysis agent can export all reviews for site-a</li>&#xA;<li>Automated regexp based checks are applied for each review on upload and editing. </li>&#xA;</ul>&#xA;&#xA;<p>I have 3 microservices.</p>&#xA;&#xA;<ul>&#xA;<li>Reviews: Responsible for Review Crud operations plus operations similar to approve/reject..</li>&#xA;<li>Validations: Responsible for defining and applying validation rules on review.</li>&#xA;<li>Export/Import: Export service exports huge files given site name (like site-a)</li>&#xA;</ul>&#xA;&#xA;<p><strong>The problem is</strong> at some point, validation service requires to get all reviews for site-a, apply validation rules and generate errors if is there any. I know sharing database schema's and entities breaks micro-services architecture.</p>&#xA;&#xA;<p>One possible solution is</p>&#xA;&#xA;<ul>&#xA;<li>Whenever validation service requires reviews for a site, it requests gateway, gateway redirects request to Reviews service and response taken. </li>&#xA;</ul>&#xA;&#xA;<p>Two <strong>possible drawbacks</strong> of this approach is</p>&#xA;&#xA;<ul>&#xA;<li>validation service <strong>knows</strong> about gateway? Is it brings a dependency?</li>&#xA;<li>in case I have 1b reviews for a site, getting all reviews via rest request may be a problem. ( or not, I can make paginated requests from validation service to gateway..)  </li>&#xA;</ul>&#xA;&#xA;<p>So what is the best practice for sharing huge data between micro-services without </p>&#xA;&#xA;<ul>&#xA;<li>sharing entity</li>&#xA;<li>and dublicating data</li>&#xA;</ul>&#xA;&#xA;<p>I read lot about using messaging queues but I think in my case it is not good to use messaging queue to share gigabytes of data.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>edit 1: Instead of sharing entity, using data stores with rest API can be a solution? Assume I am using mongodb, instead of sharing my entity object between microservices, I can use rest interface of mongo (<a href=""http://restheart.org/"" rel=""nofollow"">http://restheart.org/</a>) and query data whenever possible.  </p>&#xA;"
36694873,Token/stateless auth in Silex application with a Microservice architecture?,2016-04-18 13:05:31,<php><session><authentication><silex><microservices>,1,710,2,0.0,0,"<p>I would like to use Silex as a base framework for couple of services. It would be used by different clients and apis (mobile, web etc.) so I'm generally trying to avoid cookies/session and 'do it' using headers.</p>&#xA;&#xA;<p>Setup/flow of what I'm trying to achieve:</p>&#xA;&#xA;<ol>&#xA;<li><p>user logins in his mobile app/on webpage producing request to authservice.domain.com, gets back new token as a response which is as well registered in token store</p></li>&#xA;<li><p>when user access from web or mobile app products.domain.com the token is read from the headers and checked in store</p></li>&#xA;</ol>&#xA;&#xA;<p>Everything looks beautiful, but somehow I cannot make Silex add headers to requests following the login step, I'm able to add it to response, but not to request (i tried using before/after middleware so 1st auth, then add token in $app->after/before)... btw. im not sure if I understand it right, but if a user press a refresh page button when setting headers this way won't the custom header get lost? if that's the case is it possible to keep token persisted in headers without cookies/sessions after all?</p>&#xA;&#xA;<p>Here's example code I'm running after getting token, it gets sets on response (and i can see it in chrome), but it won't get set on request - I tried as well using with before middleware</p>&#xA;&#xA;<pre><code>    $this-&gt;after(function(Request $request, Response $response) {&#xA;        $response-&gt;headers-&gt;set(""X-token"",""2"");&#xA;        $request-&gt;headers-&gt;set(""X-token"",""2"");&#xA;    });&#xA;</code></pre>&#xA;&#xA;<p>Any suggestions on how I can achieve this? So... stateless auth using  headers over multiple services in plain (Silex : )) php without keeping token in cookies or (api gateway) sessions? </p>&#xA;"
44535853,Security considerations for API Gateway clustering?,2017-06-14 05:06:37,<api><security><microservices><api-gateway>,1,63,0,2.0,0,"<p><a href=""https://i.stack.imgur.com/lWDTz.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/lWDTz.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<ol>&#xA;<li>Clients that communicate against a single point of entry via an API Gateway over HTTPS against a RESTful API</li>&#xA;<li>API Gateway: API Keys for tracking and analytics, oAuth for API platform authentication</li>&#xA;<li>User Micro service provides user authentication and authorization, generates JWT that is signed and encrypted (JWS,JWE)</li>&#xA;<li>Other micro services determine permissions based on claims inside JWT</li>&#xA;<li>Micro services communicate internally via PUB/SUB using JWT in the message and other info. Each micro service could be scaled out with multiple instances (cluster with a load balancer).</li>&#xA;</ol>&#xA;&#xA;<p><strong>Question</strong>: <em>Can I cluster the the API Gateway and have the load balancer in front of it.  What do I need to consider with respect to managing authentication?  ie: sharing of API Keys across the API Gateway cluster?</em>  </p>&#xA;&#xA;<p>Extra notes, I'm planning on terminating SSL at the gateway and the use of bcrypt for passwords in the db.</p>&#xA;&#xA;<p>Any feedback would be great, thank you.</p>&#xA;"
44585239,Splitting monolith to microservices database issues,2017-06-16 09:08:05,<database><oracle><join><microservices>,1,227,6,0.0,0,"<p>I am splitting monolith application to microservices and I was able to split it to three microservices, for easier explanation suppose these are:</p>&#xA;&#xA;<ul>&#xA;<li>Users (CRUD)</li>&#xA;<li>Messages (CRUD)</li>&#xA;<li>Other things (CRUD)</li>&#xA;</ul>&#xA;&#xA;<p>All of these are distinct bounded contexts and I'm using database table for microservice. So in DB i have:</p>&#xA;&#xA;<pre><code>USERS table&#xA;id&#xA;surname&#xA;lastname&#xA;...&#xA;&#xA;OTHER_THINGS table&#xA;id&#xA;col1&#xA;col2&#xA;...&#xA;&#xA;MESSAGES table&#xA;id&#xA;title&#xA;created_time&#xA;USER_ID&#xA;OTHER_THING_ID&#xA;...&#xA;</code></pre>&#xA;&#xA;<p>Now my web page needs searching/filtering of messages by all of the specified columns of all of these tables. For example:</p>&#xA;&#xA;<p>Web page user can enter:</p>&#xA;&#xA;<ul>&#xA;<li>surname of USER, </li>&#xA;<li>col2 of OTHER_THINGS </li>&#xA;<li>title of messages </li>&#xA;</ul>&#xA;&#xA;<p>And I should return only filtered rows.</p>&#xA;&#xA;<p>With monolith I have used simple database JOINS, but in this situation I can't find the best option. Can you suggest me possible options and which ones are better?</p>&#xA;"
37715757,Trade-offs of microservices and modularity architectural design?,2016-06-09 02:09:10,<design><osgi><polymorphic-associations><microservices><modularity>,1,124,3,0.0,0,"<p><a href=""https://en.wikipedia.org/wiki/Microservices"" rel=""nofollow"">Microservices</a> and <a href=""https://en.wikipedia.org/wiki/Modular_programming"" rel=""nofollow"">Modular Programming</a> has proved to be a proper choice when design a software system. Benefits of it includes reusability, distributability, readability, etc.</p>&#xA;&#xA;<p>We are a MOOC site using OSGI as modularity implementation:</p>&#xA;&#xA;<ul>&#xA;<li>Each feature have its own database, service, and standalone web application</li>&#xA;<li>Direct access to database of other feature is prohibited</li>&#xA;</ul>&#xA;&#xA;<p>Take 3 features as a example:</p>&#xA;&#xA;<pre><code>     course               project         Q&amp;A(question&amp;answer)&#xA;&#xA;+---------------+    +---------------+    +---------------+&#xA;|     web       |    |     web       |    |     web       |&#xA;|               |    |               |    |               |&#xA;+---------------+    +---------------+    +---------------+&#xA;|     service   |    |     service   |    |     service   |&#xA;|               |    |               |    |               |&#xA;+---------------+    +---------------+    +---------------+&#xA;|     dao       |    |     dao       |    |     dao       |&#xA;|               |    |               |    |               |&#xA;+---------------+    +---------------+    +---------------+&#xA;|     Database  |    |     Database  |    |     Database  |&#xA;|               |    |               |    |               |&#xA;+---------------+    +---------------+    +---------------+&#xA;</code></pre>&#xA;&#xA;<p>Requirements:</p>&#xA;&#xA;<ol>&#xA;<li>Every course/project has Q&amp;A module, user that participated-in can ask question about this course/project here.</li>&#xA;<li>A standalone global(or common) Q&amp;A entry, listing questions that aggregated from all courses/projects, and user can ask context-independent(aka, not related to any course/project) question here.</li>&#xA;</ol>&#xA;&#xA;<p>I do not know if this design or architecture(<strong>completely isolation from top to bottom of every feature</strong>) is good or not, but I'm facing some inconveniences indeed:</p>&#xA;&#xA;<ol>&#xA;<li><p>modular web application</p>&#xA;&#xA;<p>Q&amp;A feature is either a standalone feature and part of course/project.  Currently I'm think both embed Q&amp;A module as web component of standalone course-webapp/project-webapp, and standalone qa-webapp itself, but I have no idea what's the best way to reuse controllers to avoid duplicated code on web layer</p></li>&#xA;<li><p>rational database <a href=""https://en.wikipedia.org/wiki/Polymorphic_association"" rel=""nofollow"">Polymorphic Association</a> problem</p>&#xA;&#xA;<p>A question maybe belong to course/project, or context-independent, and id of course/project came from another database, polymorphic association is inevitable. Currently I'm using a extra column post_to_type on table question to tackle with this.</p></li>&#xA;<li><p>Let me say course/project can be private or public. questions listed under global Q&amp;A entry only include questions that belong to public course/project, not private. But again, since each feature have its own database and direct access to database of other feature is prohibited, I do not have any idea what's the elegant and efficient way to deal with this.</p></li>&#xA;</ol>&#xA;&#xA;<p>Is something wrong with our modular design when using OSGI, or its just me thinking so uncomfortable with this? and what's the best practices to design a microservices / modular architecture, specifically in object-oriented language like Java?</p>&#xA;&#xA;<p>Thanks!</p>&#xA;"
48190148,What is the difference between SOA and Microservices,2018-01-10 14:56:32,<web><microservices><distributed-computing><soa>,1,344,3,0.0,0,"<p>Ok, as far as I've understood both in SOA and in Microservices modules should be independant and reusable. But what really differs SOA and Microservices ?</p>&#xA;"
48374452,Dao as a Seperate Module in Monolithic Considering Extendable to microservice in future,2018-01-22 03:54:23,<java><spring><microservices>,1,114,3,0.0,0,"<p>I am actually creating one project where we are having 2 or more database. I will use Spring Boot. I would like to know:</p>&#xA;&#xA;<ol>&#xA;<li><p>Why do we have Client of the Gateways while code as we already have REST endpoint in server (May be i am wrong )?</p></li>&#xA;<li><p>My project currently will be monolithic but I want to make it possible to change to a microservice architecture in the future. Should I have the DAO as separate module which will be dependency for other module considering I can have more than one database (RDBMS and NoSQL)?</p></li>&#xA;</ol>&#xA;&#xA;<p>Hope I am asking work question, but I am confused right now, while starting the project.</p>&#xA;&#xA;<p>Thanks in advance</p>&#xA;"
37403682,A real world project using microservices architecture,2016-05-24 03:01:00,<node.js><architecture><microservices>,1,483,5,0.0,0,"<p>Anyone knows an open source project that is on microservices architecture? I need a more real app that has addressed cross-cutting concerns,etc not just an educational sample.</p>&#xA;&#xA;<p>Please introduce if you know any. Especially if it's on Node.js or C#.net stack.</p>&#xA;&#xA;<p>Thanks</p>&#xA;"
46434569,How can I make my .NET Core microservice do a recursive health check?,2017-09-26 19:42:53,<asp.net-core><microservices><health-monitoring>,1,586,0,0.0,0,"<p><a href=""https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/implement-resilient-applications/monitor-app-health"" rel=""nofollow noreferrer"">As described</a> I can do:</p>&#xA;&#xA;<pre><code>checks.AddUrlCheck(Configuration[""OrderingUrl""])&#xA;</code></pre>&#xA;&#xA;<p>to make my health check dependant on the health of other Microservices. However,I do not just want to do an url check. I want to do a full health check on the other Microservice (so it will also check the database dependencies etc of the other Microservice). This could be something like,</p>&#xA;&#xA;<p><code>checks.AddFullMicroserviceIncludingDatabaseAndUrlCheck(Configuration[""OrderingUrl""])</code> (hypothically).</p>&#xA;&#xA;<p>How can I do such a recursive health check in my .NET Core microservice?</p>&#xA;"
50400384,"In the microservices architecture, why they say is bad to share REST Client libraries?",2018-05-17 20:57:09,<java><spring><microservices>,3,60,3,0.0,0,"<p>We have 15 services build with Java Spring, they talk each other using REST .</p>&#xA;&#xA;<p>Each time we add a new service to the pool we create from scratch all the code, including rest client code that will talk to other Services and the POJO classes used to map the resource(s) being requested.</p>&#xA;&#xA;<p>We end up copy and pasting from the source code of other services into the new service.</p>&#xA;&#xA;<p>I think it would be better to put all these POJO's and rest client code into a library for all the services to consume it, it would save us a lot of work coding, but ""they"" we should not do that with microservices.</p>&#xA;&#xA;<p>So, why is that?&#xA;We end up copy and pasting the exactly same code over and over again, I don't see the difference.</p>&#xA;"
50427036,Certificate Discovery Service,2018-05-19 15:54:30,<rest><ssl><ssl-certificate><microservices><keystore>,1,32,4,0.0,0,"<p><br/>&#xA;I'm designing a microservice architecture and I've already setted up the https protection by using SSL certificates generated with <a href=""https://letsencrypt.org/"" rel=""nofollow noreferrer"">Let's Encrypt and certbot</a>.</p>&#xA;&#xA;<p>The provided certificates are periodically regenerated and then I've to re-import the new certificates into the keystores of all my services.</p>&#xA;&#xA;<p>In order to avoid this, I'm trying to implement a set of <strong>REST APIs</strong> that may allow the services to <strong>programmatically and automatically retrieve the new certificates</strong> and import them into their own keystore or simply use it programmatically. </p>&#xA;&#xA;<p>As the title says: a sort of <em>""Certificate discovery service""</em> or, if you prefer, a <em>""Remote certificate repository""</em>.</p>&#xA;&#xA;<p>I know that there is the java.security.* package that allows me to deal with this kind of things, but I've two questions for all of you:</p>&#xA;&#xA;<ol>&#xA;<li>Do you think that, from a architectural point of view, this is the best approach to face my problem?</li>&#xA;<li>Which king of Serialization/Deserialization process do you recommend? Is already there any library/framework/tool that does something similar that I can exploit?</li>&#xA;</ol>&#xA;&#xA;<p>Thank you.&#xA;Bye Bye</p>&#xA;"
50401105,How to implement TLS between microservices,2018-05-17 22:01:19,<ssl><microservices><pki>,2,309,5,1.0,0,"<p>Can someone please comment on, vet, critique, or otherwise blast holes in the microservices security design I’m considering?</p>&#xA;&#xA;<p>Let’s say I have three microservices, each of which talks to the other two via REST endpoints. Each microservice contains a keystore. In this keystore is the containing microservice’s private/public keypair, signed by a trusted certificate authority. Also in this keystore is the other two microservices’ public key certificates, exported from the source microservice’s signed/trusted keypair.</p>&#xA;&#xA;<p>This implementation works, but something doesn’t quite smell right about it.</p>&#xA;&#xA;<p>Namely, every time I introduce a new microservice I must add a) each existing microservice’s public key certificate to its keystore, and b) the new microservice’s public key certificate to every other microservice (the assumption being the new microservice must communicate bi-directionally, and securely, with each existing microservice).</p>&#xA;&#xA;<p>Now, repeat the above pattern for a second keypair, this one used to sign/verify authentication tokens supplied in REST calls.</p>&#xA;&#xA;<p>I am wondering if, instead of the above, it is a) advisable and b) safe to share a single trusted public key certificate between all microservices? Something completely different?</p>&#xA;&#xA;<p>Please be polite. I am by no means an expert it this area.</p>&#xA;&#xA;<p><strong>EDIT:</strong>&#xA;It occurred to me, after reading replies/comments to my original post, that I omitted detail that might have made the problem more clear, and therefore the commenters better able to address it:</p>&#xA;&#xA;<ol>&#xA;<li><p>The microservices in question exist within a private intranet, and will only ever be accessible by clients (browsers or other microservices) within that intranet.</p></li>&#xA;<li><p>There is in fact a trusted CA—namely, the company that owns this intranet—and it is that CA that signs the microservices’ keypairs.</p></li>&#xA;</ol>&#xA;&#xA;<p>The resolution to this problem, it seems, is implied in @Andreas first comment, in which he wrote, ""As long as the CA that issued them is trusted, they will be trusted too.”</p>&#xA;&#xA;<p>As long as each new microservice is deployed with a) its own keypairs, signed by the CA (one for signing and the other for encryption), and b) the CA’s certificate, I can deploy new microservices with reasonable assurance they will communicate securely with all other microservices (reasonable because of other potential vulnerabilities I am not even aware of).</p>&#xA;&#xA;<p>Somehow I got it into my head that I would have to create a brand new certificate for each microservice’s keypair, and include these in the other microservices' keystores (repeat for every new microservice). Instead all I need is one certificate, that of the CA that signs the keypairs, in each microservice’s keystore.</p>&#xA;"
43892712,Merge Microservice Frontends Together,2017-05-10 12:35:58,<microservices>,1,186,6,0.0,0,"<p>I want to merge serveral frontend parts of different microservices together to an whole website. My idea behind this was to have a <strong>frontend</strong>, <strong>backend</strong> and <strong>database</strong> part in each microservice.</p>&#xA;&#xA;<p>I already familiar with microservices but I never used them to create a website, especially the frontend part.&#xA;Are there any articles about that or something like tutorials or maybe someone at stackoverflow can explain me more in depth how or with which ""tool"" I could put the microservices together.</p>&#xA;"
34376576,Best architecture to share large files among microservices,2015-12-19 23:42:44,<nfs><microservices><data-sharing>,1,1629,0,0.0,0,"<p>I am about to start re-designing an old monolithic software with a microservices-oriented architecture (educational purposes). To give a bit of context, the old software runs on a powerful server that performs the following operations:</p>&#xA;&#xA;<ol>&#xA;<li>Receives batch data (binary file) from a producer.</li>&#xA;<li>Accumulates batch data from each producer.</li>&#xA;<li>Periodically, execute a batch operation over each producer's accumulated data, and store the result (another binary file).</li>&#xA;</ol>&#xA;&#xA;<p>Now, I want to create a separated microservice for this batch operation.  I would like to have this microservice executed in dozens of machines in paralell, so that I can process a big amount of producers.</p>&#xA;&#xA;<p>Each microservice instance will receive a binary file with each producer's data and output another binary file. The problem is that these files can be big (e.g. each producer may produce 20Mb of accumulated data). I came across several ways of dealing with this but I am not convinced by any of them:</p>&#xA;&#xA;<ol>&#xA;<li>Send the binary data among microservices using HTTP calls. I did not try it but it does not seem reasonable.</li>&#xA;<li>Store all the data in a central data repository from where each microservice can download it. Maybe I could use some sort of NFS, but I am not sure if that's a good option. Also, doesn't this go against the microservices philosophy?</li>&#xA;<li>Have a copy of all the data near each microservice. I am afraid I'll eventually run into consistency problems.</li>&#xA;</ol>&#xA;&#xA;<p>What do you believe is the best option (if any)? Thanks!</p>&#xA;"
47348422,Throw Exception through multiple services,2017-11-17 10:24:01,<spring><rest><spring-boot><microservices>,1,65,4,0.0,0,<p>I have a little microservice architecture with 3 depending services. Each service represents a seperate Spring Boot project. If an exception occurs on the lowest level of the architecture I would like to throw it through all other services up to the highest/user endpoint service.</p>&#xA;&#xA;<p>Each service API returns a <strong>HttpEntity(Response Entity)</strong> including a specific object. I found a lot of possible solutions like <strong>ResponseEntityExceptionHandlers</strong> but all examples shown for a single service architecture without multiple depending services.</p>&#xA;&#xA;<p>Are there any best practices how to throw an Exception through multiple services with Spring Boot?</p>&#xA;
43306842,.NET Microservices authorization,2017-04-09 12:46:57,<.net><authorization><microservices>,1,190,4,0.0,0,"<p>I am about to start a project that consists of several microservices and I was researching how can I implement authorization of each microservice.&#xA;My architecture is the following:&#xA;A web project that consists of an asp.net core site with angular 2. Each module (menu item and its submenus) will be communicating with a microservice (each microservice will have a database).&#xA;Each microservice will have its own permissions. e.g MS1 will have CRUD Products, MS2 will have CRUD Orders etc..&#xA;My questions are:</p>&#xA;&#xA;<ol>&#xA;<li>As I mentioned above each microservice will have its own database (e.g MS1 will hold the products database, MS1 the order database etc..). What about the permissions? Where these are better to be stored?</li>&#xA;<li>A microservice should not share code with other microservices but I was thinking that the code that does the actual auth checking ( IsAlllowed(PermissionType) ) would be repeated in each microservice. This will cause code redundancy.</li>&#xA;</ol>&#xA;"
48473966,Authentication/Authorization mechanism for microservices,2018-01-27 08:21:12,<authentication><authorization><microservices>,2,707,0,0.0,0,<p>I have project with many micro services each one doing its job. One of them responsible for authentication and authorization. But its not clear how other services should check users permissions. Is there any mechanism to deal with this task?</p>&#xA;
48604664,How to share database connection between in spring cloud,2018-02-04 04:20:22,<spring><microservices>,3,389,3,0.0,0,<p>How can I share database connection aong in spring cloud module microservices. If there are many microservices how can i use same db connection or should i use db connection per microservices?</p>&#xA;
46092604,event-driven microservices id generation,2017-09-07 09:21:30,<java><microservices>,2,203,3,0.0,0,"<p>I'm a newbie with microservices. I'm trying to create a microservices architecture where there is an API gateway that should just receive the request and create an event accordingly. Then the event will be intercepted by a microservice that stores the needed data into a database. </p>&#xA;&#xA;<p>Maybe I'm making a mistake with the design but I expect that after a client calls the API gateway the request proceeds asynchronously and the data consistency won't be guaranteed. </p>&#xA;&#xA;<p>So how the client knows if the resource has been created and its id?</p>&#xA;&#xA;<p>Should the client listen to the events as well?</p>&#xA;&#xA;<p>Is this the right architecture or am I going through the wrong path?</p>&#xA;&#xA;<p>Thank you in advance for your comments!</p>&#xA;&#xA;<p>Note: I'm not using any structured framework. I like them but this is mostly an experiment and I'd like keep everything simple. Anyway I'm opened if your suggestion involve spring or whatever java framework. </p>&#xA;&#xA;<p>(Edit)</p>&#xA;&#xA;<p>Another interesting point. Let's give that the API response is asynchronous, if the client has to insert an aggregated data made by two resources (identified by their own id), how this can be achieved through an event-driven architecture?</p>&#xA;"
46190467,CQRS + Microservices Handling event rollback,2017-09-13 06:37:37,<domain-driven-design><microservices><cqrs><event-store>,3,223,3,1.0,0,"<p>We are using microservices, cqrs, event store using nodejs cqrs-domain, everything works like a charm and the typical flow goes like:</p>&#xA;&#xA;<ol>&#xA;<li>REST->2. Service->3. Command validation->4. Command->5. aggregate->6. event->7. eventstore(transactional Data)->8. returns aggregate with aggregate ID-> 9. store in microservice local DB(essentially the read DB)-> 10. Publish Event to the Queue</li>&#xA;</ol>&#xA;&#xA;<p>The problem with the flow above is that since the transactional data save i.e. persistence to the event store and storage to the microservice's read data happen in a different transaction context if there is any failure at step 9 how should i handle the event which has already been propagated to the event store and the aggregate which has already been updated?</p>&#xA;&#xA;<p>Any suggestions would be highly appreciated.</p>&#xA;"
46171136,"All my microservices have their own db's, should I create common microservice to handle connections?",2017-09-12 08:08:00,<database><architecture><microservices>,1,95,4,1.0,0,"<p>I have a number of microservices that maintain their own databases (mongodb, elastic, mysql) and each of the microservices I have to set-up a new connection constantly. </p>&#xA;&#xA;<p>I was considering would it be wise if I created another microservice, that could handle these connections for the microservices, before they start up.</p>&#xA;&#xA;<p>Example:&#xA;My API Gateway microservice gets a request for search, it then calls search microservice, which before the search starts, calls the database setup miscroservice and returns an established connection back to it, based on what microservice called it (in this case - the search microservice).</p>&#xA;&#xA;<p>Would it be better, if I just found out what connection is needed inside the API Gateway? Or should I just leave the logic separately in each microservice.</p>&#xA;"
48699765,UI with microservices,2018-02-09 06:12:15,<angular><web-services><web-applications><frontend><microservices>,2,1456,0,0.0,0,<p>I have fornt end Web application written in JSF with Richfaces. Its a kind of dashboard application. We are trying to move this in Angular 2 with Spring Boot rest api. &#xA;I want to write microservices where each functionality would be independent. There are total 10 functionality so i will write 10 different rest services and each one would have its own build process. But i am confused with fornt end part. Should i create separate artifacts or separate build for each UI as well ? Or should i bundle in each respective rest api? how should i take care of front end part in microservices?</p>&#xA;
46021905,"microservices, server-sent events, and browser limitations",2017-09-03 09:15:10,<rest><microservices><server-sent-events>,1,110,3,0.0,0,"<p>In a micro-service oriented architecture, where each micro-service offers an SSE endpoint to stream events to the client, an HTTP connection is opened and kept alive between the client and the service. Unfortunately, this approach is almost unpractical when the client runs within a Web Browser because Web Browsers have a limitation on the number of HTTP connections that can be opened simultaneously on the same server (by domain name if I'm not wrong).</p>&#xA;&#xA;<p>It's a pity because SSE is a great technology for streaming events.</p>&#xA;&#xA;<p>What's the best approach for streaming events in a micro-service oriented architecture then, when the client runs in a browser?</p>&#xA;"
45964527,Microservice passing entity id guid or unique code,2017-08-30 15:35:26,<rest><wcf><domain-driven-design><microservices>,1,169,3,0.0,0,"<p>We have two different microservices Customer service and Order service. Customer service store information about customer i.e. Name, DOB, etc. The Order service will mange the order that a customer has place i.e order number, cost etc. Which is the best way to passing customer unique reference/ ID to order services.</p>&#xA;&#xA;<p>Solution 1:&#xA;Customer ID is a GUID uniquely in Customer service. This will be passed to the Order service</p>&#xA;&#xA;<p>Solution 2:&#xA;Generate a business/human friendly unique code in Customer service and pass it to Order service</p>&#xA;&#xA;<p>Solution 3:&#xA;Something else?</p>&#xA;"
40467382,how to use role authorization for micro services architecture?,2016-11-07 14:17:51,<ruby-on-rails><microservices><rails-api>,3,205,0,0.0,0,<p>I wrote an API in rails which is of micro services architecture.&#xA;In my API i need to implement Role authorization to authorize each and every user using their roles.&#xA;Is there any gem that fits into micro services architecture or should I write my own logic to authorize users.&#xA;i was using gem authorization gem but it does provide much capability that fits into micro services architecture.(rolify)&#xA;Is there any other that suits micro services architecture?</p>&#xA;&#xA;<p>Thanks in Advance.</p>&#xA;
40469391,"Wait for condition in Enzyme and Jest (eventual consistency, assert with timeout)",2016-11-07 16:00:53,<reactjs><microservices><jestjs><enzyme>,1,431,4,0.0,0,"<p>I have a simple test:</p>&#xA;&#xA;<pre><code>import React from 'react';&#xA;import GenericButton from 'components/buttons/GenericButton';&#xA;import { shallow } from 'enzyme';&#xA;import { shallowToJson } from 'enzyme-to-json';&#xA;&#xA;describe('Generic Button', () =&gt; {&#xA;    test('Button action called when clicked', () =&gt; {&#xA;        var clicked = false;&#xA;        const component = shallow(&#xA;            &lt;GenericButton action={() =&gt; {&#xA;                clicked = true;&#xA;            }}&#xA;            id=""testComponent""/&gt;&#xA;        );&#xA;&#xA;        component.find('testComponent').first().simulate('click');&#xA;        expect(clicked).toBeTruthy();&#xA;    });&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>However this will fail as the action is done eventually,</p>&#xA;&#xA;<p>If i set the assertion to happen eventually (using setTimeout for example) it will work</p>&#xA;&#xA;<p>however it would be better if i do something of the following before the assert (found this on examples using jasmine)</p>&#xA;&#xA;<pre><code>        waitsFor(() =&gt; {&#xA;            return clicked;&#xA;        }, ""the value to change"", 1000);&#xA;</code></pre>&#xA;&#xA;<p>What is the equivalent call for enzyme/jest?</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>Edit: Content of component</p>&#xA;&#xA;<pre><code>render() {&#xA;    return &lt;Button id={this.props.id}&#xA;                   key={this.props.id}&#xA;                   onClick={() =&gt; this.props.action()}&#xA;                   bsStyle={this.props.style}&gt;&#xA;               {this.props.text}&#xA;           &lt;/Button&gt;;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>(Button is a 3rd party library component)</p>&#xA;"
29731394,dependency management on micro services architecture,2015-04-19 14:46:29,<git><dependencies><microservices>,2,836,0,0.0,0,"<p>I build an app based on the micro services architecture, i have now two services with some common code to both.</p>&#xA;&#xA;<p>What is the conventional way to do that? (different projects, modules etc)&#xA;I would also like a refernece on how to handle them in a git repository (for all? for each?)</p>&#xA;"
29610354,Discovery pattern for REST API endpoint,2015-04-13 16:27:09,<java><node.js><rest><microservices>,1,674,3,0.0,0,"<p>I m actually studying Microservice architecture pattern and it seems that the API Gateway pattern uses the Discovery pattern, but with REST API endpoints.</p>&#xA;&#xA;<p>Can anybody explain me how it works for example if my API Gateway is NodeJS based and my REST APIs are Java written ?</p>&#xA;&#xA;<p>I dont really know how can I implement this pattern and I dont find any code or schema to help me understand a bit more.</p>&#xA;&#xA;<p>Thanks for advance</p>&#xA;"
41880524,Microservices based architecture and individual cache for each node,2017-01-26 18:35:24,<java><hibernate><caching><architecture><microservices>,1,764,0,0.0,0,"<p>Is it considered bad practice to use separated, local cache for each node in distributed microservice application? I've heard that in monolithic application it's OK to use local EHCache as 2nd level cache provider for Hibernate, but in distributed environment it's common practice to use distributed caches, such as Memcached, Redis or Hazelcast. What are the consequences of using separated cache for each node?</p>&#xA;"
51122354,Coupling in microservices architecture,2018-07-01 10:11:20,<microservices><coupling>,1,33,3,0.0,0,"<p>When working on an application in microservices architecture I stumbled upon issues concerning coupling between services.</p>&#xA;&#xA;<p>This a typical application for ordering products. It seams reasonable to have a service that will operate as a product catalog. Our JavaScript client can ask this service for available products and show them in browser. When user clicks on a product we have to create an order. We would like to manage orders in another service. So an order is created - it means that user X ordered product Y. On the technical level we are simply persisting user id and product id in a database.</p>&#xA;&#xA;<p>To sum up we have:</p>&#xA;&#xA;<h3>Products service</h3>&#xA;&#xA;<p>Product class:<br/>&#xA;Product ID, Product Name </p>&#xA;&#xA;<h3>Orders service</h3>&#xA;&#xA;<p>Order class:<br/>&#xA;Order ID, Product ID,  User ID,   Order date  </p>&#xA;&#xA;<p>Now let's imagine following scenario - in JavaScript client we would like to list all products that user have ordered. Orders service provides a list of products ids for a given user. But user cares about product name, not the id. Unfortunately Orders service doesn't know anything about products names.</p>&#xA;&#xA;<p>We could tackle this in couple of ways:</p>&#xA;&#xA;<ul>&#xA;<li><p>Simply assume that the client is responsible for getting the information it needs. So after it calls Orders service and gets a list of products ids, it performs another call to Products service, passing products ids and getting corresponding products names in response. Then the client assembles both responses into something useful. This approach keeps our services clean, without leaking of domain knowledge from one service to another. But it requires more work on the client side.</p></li>&#xA;<li><p>Orders service when asked for ordered products makes a call on the backend to the Products service. It retrieves product names, assembles a response that contains orderDate and  productName and sends that to client. All that's left for client to do is to present the data. Downside of this approach is that Orders service now gains more knowledge about products than neccessary.</p></li>&#xA;<li><p>Duplicate information about product name in Orders service. When an order is created, we pass not only product id but also product name. That means that Order class will look like this:&#xA;Order class:<br/>&#xA;Order ID, Product ID, Product name, User ID, Order date<br/>&#xA;Now we can easly provide full information about order without additional call to Products service. Also this time Orders service has too much knowledge about products. What's beneficial tough is that Orders service can provide relevant data even if Products service is down.</p></li>&#xA;</ul>&#xA;&#xA;<p>Could any of these approaches be considered best practice? Or are there different solutions?</p>&#xA;"
51120978,Is REST a good fit for microservices?,2018-07-01 06:33:36,<rest><microservices><synchronous>,2,48,3,0.0,0,"<p>I am exploring micorservices architecture through books, blogs etc. </p>&#xA;&#xA;<p>What I have seen is that mostly people implement microservices using REST. Isn't it contradictory?</p>&#xA;&#xA;<p>Microservices are supposed to decouple services to achieve scalability, but REST communication protocol is synchronous. </p>&#xA;&#xA;<p>So how can these two go together?</p>&#xA;"
42462663,Microservice depends on other one to do anything,2017-02-25 23:02:54,<dependencies><microservices><relationships>,1,316,3,0.0,0,"<p>At the moment I deal with micro-services and ran into a few questions (regarding relations between services), I have a hard time to find a good answer/best practices for. It would be really great if you could give me a hint or an advice how you would handle this.</p>&#xA;&#xA;<p>Because these question are not directed to a specific project, I try to make it as clear as possible with the following example:</p>&#xA;&#xA;<p>Let‘s assume you want to build some kind of Youtube channel observer, that logs different kinds of channel‘s (meta-)data (videos, hourly views/sub count, currently subscribed to), that are imported in a specific time interval.</p>&#xA;&#xA;<p>So there are two major features the app has to offer, which should form a microservice each:</p>&#xA;&#xA;<ul>&#xA;<li>Add/remove channels to be watched (=> manager service)</li>&#xA;<li>import information (=> import service)</li>&#xA;</ul>&#xA;&#xA;<p>Both services provide an API to communicate with each other.</p>&#xA;&#xA;<p>The manager service is connected to a database which contains the channels that need to be watched, with their basic information (name, contact, ...) and the channels these observed channels are currently subscribed to, whereas the import service has a database containing all the other more time-series oriented information (videos, hourly views/sub count).</p>&#xA;&#xA;<p>To add a channel only the channel url has to specified. All the other information (name, contact, ...) are added by the import service (but can also be modified by the user).</p>&#xA;&#xA;<p>All in all the import service is totally useless without the information of the manager service, but also the manager service can only show the user specified channel information (worst case: only channel url) if no import service is available. In total: they depend heavily on each other.</p>&#xA;&#xA;<p>So much for the general architecture. </p>&#xA;&#xA;<p>The problem I have here is, that the import service depends on the data in the manager service database to such a great degree and also modifies it:</p>&#xA;&#xA;<ol>&#xA;<li>Would it be a good idea to share the manager service database between these two services or should it only be accessible by the provided API?</li>&#xA;<li>No matter if database is shared or not: both services need model classes for the channel. Is it fine to share those? </li>&#xA;<li>Is this architecture even a good idea at all (if we assume that there are also other services that need the basic channel information)? </li>&#xA;</ol>&#xA;"
39416301,Microservices - API Gateway Layer,2016-09-09 16:48:40,<spring-boot><cloudfoundry><microservices><pivotal-cloud-foundry>,1,1395,1,0.0,0,"<p>I have read few details of use of api gateway in microservices architecture. I have read that it basically helps with security , transformation , throttling etc. Is orchestration also one of it responsibilities? When I read about microservices , I saw that it should have dumb pipes and smart endpoints and services must be choreographed and not orchestrated. So my assumption is that orchestration is not a responsibility  of api gateway.</p>&#xA;"
50128046,How should I design my Spring Microservice?,2018-05-02 06:02:52,<spring><spring-boot><microservices>,3,78,0,0.0,0,"<p>I am trying to create a <code>Microservice architecture</code> for a hobby project and I am confused about some decisions. Can you please help me as I never worked using Microservice before?</p>&#xA;&#xA;<ol>&#xA;<li>One of my requirements is that my <code>AngularJS</code> GUI will need to show some drop-down or List of values (example: a list of countries). This can be fetched using a <code>Microservice</code> REST call, but where should the values come from? Can I fetch these from my <code>Config Server</code>? or should it come from <code>Database</code>? If the latter, then should each of the Microservice have their own Database for lookup value or can it be a common one?</li>&#xA;<li>How would server-side validation work in this case? I mean, there will certainly be a Microservice call the GUI will make for validation but should the validation service be a common Microservice for all Use Cases/Screens or should it be one per GUI page or should the <code>CRUD</code> Microservice be reused for validation as well?</li>&#xA;<li>How do I deal with a use-case where the back-end is not a Database but a Web-service call? Will I need some local <code>DB</code> still to maintain some state in between these calls (especially to take care of scenario where the Web-service call fails) and finally pass on the status to GUI?</li>&#xA;</ol>&#xA;"
50289914,Deal with enumeration in Microservices architecture,2018-05-11 10:06:16,<architecture><microservices><enumeration>,2,41,3,1.0,0,"<p>I recently faced a problem when I designed the microservices architecture of our new system. &#xA;To give more context on that, let's suppose that we have two different services. </p>&#xA;&#xA;<ul>&#xA;<li><p>A service is responsible to make payments and the other one </p></li>&#xA;<li><p>B service is responsible to keep track of the orders. </p></li>&#xA;</ul>&#xA;&#xA;<p>We have a use case that we need to update an order state from the service A. </p>&#xA;&#xA;<p>We have these states in an enumeration list inside the service B. </p>&#xA;&#xA;<p>How can I avoid the sharing of this enumeration between two services? &#xA;I need to have decoupled services.</p>&#xA;&#xA;<p>Please feel free to ask for clarifications. </p>&#xA;"
45559979,Access Token/Authorization Between Microservices,2017-08-08 05:30:47,<spring-security><oauth-2.0><microservices><spring-cloud><spring-security-oauth2>,3,670,0,0.0,0,"<p>I'm creating an online store REST API that will mainly be used by a mobile app. The plan is for a microservices architecture using the Spring Cloud framework and Spring Cloud OAuth for security.</p>&#xA;&#xA;<p>My question is really on best practices for communication between microservices: Should I have each service register for their own token, or should they just pass the user's token around?</p>&#xA;&#xA;<p>For example, I have 3 services: user-service, account-service, order-service.&#xA;I've been able to implement two procedures for creating an order: One passes the user's token around, and in the other each service gets their own token. I use Feign for both approaches.</p>&#xA;&#xA;<p>So for option 1: order-service -> GET account-service/account/current</p>&#xA;&#xA;<p>order-service calls the account-service which returns the account based on a userId in the token. Then the order-service creates an order for the account.</p>&#xA;&#xA;<p>Or for option 2: order-service -> GET account-service/account/user-id/{userId}</p>&#xA;&#xA;<p>order-service gets the userId from the sent token, calls the account-service with it's own token, then creates the order with the retrieved account.</p>&#xA;&#xA;<p>I'm really not sure which option is best to use. One better separates information but then requires two Feign Clients. However the other doesn't require the 2 clients and it becomes easier to block off end certain endpoints to outside clients, however it requires extra endpoints to be created and almost every service to go digging into the Authentication object.</p>&#xA;&#xA;<p>What are all your thoughts? Has anyone implemented their system in one way or another way entirely? Or perhaps I've got the completely wrong idea.</p>&#xA;&#xA;<p>Any help is appreciated.</p>&#xA;"
45533748,version management in microservices,2017-08-06 15:47:08,<version-control><cloud><microservices><service-discovery>,2,1982,0,1.0,0,"<p>Suppose that I have a UserService in my <strong>Microservice Architecture</strong> deployed on the cloud. There is a <strong>Service Discovery</strong> for routing the requests to different host of UserService. </p>&#xA;&#xA;<p>If I have two different versions of UserService. Lets say <em>user-service-1.0</em> and <em>user-service-2.0</em> and part of clients should still use older version, then how this can be managed in Microservice Architecture. </p>&#xA;"
51463258,Call some different restful services from front-end,2018-07-22 08:20:05,<domain-driven-design><microservices><dbcontext><restful-architecture>,1,56,3,0.0,0,"<p>Imagine I have an angular project as a front-end which communicates with some other projects which are restful services.</p>&#xA;&#xA;<p>In some pages I need to fetch some data from different restful services, &#xA;Is that okay to request any restful service individually in angular?&#xA;Or call one restful service which itself call other restful services in back-end?</p>&#xA;&#xA;<p>Or I have to call one restful service but add other entities to this DbContext which I need here just to query?</p>&#xA;"
46575898,What the hell is microservice?,2017-10-04 23:59:02,<architecture><microservices>,2,913,3,0.0,0,"<p>Microservice for this, microservice for that, but explain to a simple person what is microservice? I'm a simple programmer with a little almost none theoretical background. But I don't need a term microservice to do what I do. Could someone explain me in easy-peasant words what microservice is? Amazon AWS = microservice?</p>&#xA;&#xA;<p>I read this: <a href=""https://en.wikipedia.org/wiki/Microservices"" rel=""nofollow noreferrer"">https://en.wikipedia.org/wiki/Microservices</a> but apparently I'm too stupid to understand what is this.</p>&#xA;"
45789168,What is the difference between an API and Microservice?,2017-08-21 04:08:14,<api><microservices>,2,1331,0,1.0,0,"<p>I create my API rest with Django, but I don't understand how convert an API to micro services, I don't understand the real difference between these.&#xA;I see an API like a micro service, but I don't know convert an entire API in micro service, I need create micro web servers? </p>&#xA;&#xA;<p>Please, I can't understand a micro services, and I need understand this.</p>&#xA;"
45762128,Microservice architectural clarification,2017-08-18 17:36:48,<c#><microservices>,1,75,3,0.0,0,"<p>I have a microservice architectured application. Where i have a CompanyService, an OrderService and a TransactionSevice. A user logs in and he can load all orders for his company. So the order has a CompanyId. Then it loads all Transactions for that order, so the transaction has an OrderId. I am going through some security thoughts. How can i make sure that the user only loads or saves transactions for the orders that belong to his company. I mean the TransactionService should not need to know about the Company (CompanyId). Is it something i should check just before saving? Eg check that the orderid belongs to the company or is there some other pattern?</p>&#xA;&#xA;<p>Thanks</p>&#xA;"
33291874,"Microservices: Worker roles, APIs or both?",2015-10-22 22:32:19,<microservices>,1,976,1,0.0,1,"<p>I have seen mixed examples of Microservices implemented as worker roles processing requests off a queue and/or as APIs (REST). </p>&#xA;&#xA;<p>Supporting asynchronous scenarios, a queue can be utilized, with a simple dumb queue listener forwarding the request to a Microservice REST API, where as synchronous scenarios would  call the REST API directly. </p>&#xA;&#xA;<p>The term Microservice is vaguely defined I think; do people consider them APIs (e.g. RESTful services) or as any abstract service processing requests, however that request was provided ?</p>&#xA;"
32838312,Architecture for microservices,2015-09-29 07:37:32,<node.js><express><microservices>,2,2619,0,0.0,1,"<p>I've recently started to work with node.js and I have to build an architecture that should use multiple express.js services. Some of these services will have to be located on one server, anothers - on other server machines. I want to build a base service (like API Gateway), but I don't know what the proper way to communicate between this Gateway and microservices, or between two microservices.</p>&#xA;&#xA;<p>Currently I'm working with a solution based on this:</p>&#xA;&#xA;<pre><code># inside Gateway server I call another service:&#xA;http.get('http://127.0.0.1:5001/users', (service_res) -&gt;&#xA;  data = ''&#xA;  service_res.on 'data', (chunk) -&gt;&#xA;    data += chunk&#xA;&#xA;  service_res.on 'end', -&gt;&#xA;    # some logic on data&#xA;&#xA;).end() &#xA;</code></pre>&#xA;&#xA;<p>I have a strong feeling that this approach is not right. What the proper way to build communication logic between API Gateway and microservices?</p>&#xA;"
32831192,microservices and domain logic joins,2015-09-28 20:24:19,<join><architecture><microservices>,3,160,0,1.0,1,"<p>Microservices are deployed hosting their own database.</p>&#xA;&#xA;<p>What strategies do you employ when business requirements necessitate joins across data in multiple services?</p>&#xA;&#xA;<p>Example problem:  You are implementing a movie review site.  You have a movie microservice that holds the movie DB.  You also have a review microservice that manages reviews in its own separate DB.  Reviews are linked to movies via a GUID; but as these are implemented as separate data stores, not a key constraint.</p>&#xA;&#xA;<p>You would like to have available, accurate to the last minute, a report that tells you the total number of reviews for each review level grouped by the first letter of the movie having a review word count > 25 words.  You currently host 5 million reviews for 40,000 movies.</p>&#xA;&#xA;<p>E.G.   Reviews with more than 25 words:</p>&#xA;&#xA;<ul>&#xA;<li>A  [8457 ""1 star""] [16615 ""2 star""] [...</li>&#xA;<li>B  [98445 ""1 star""] [80210 ""2 star""] [...</li>&#xA;<li>...</li>&#xA;</ul>&#xA;&#xA;<p>Having chosen a microservice architecture for your project, what strategies would you now employ to implement this feature? </p>&#xA;"
49171571,Search queries in microservice architecture,2018-03-08 11:04:16,<architecture><microservices>,2,137,1,2.0,1,"<p>Assuming I have a microservice architecture where I have a Book microservice holding all book details and a Author microservice holding all author details, e.g.</p>&#xA;&#xA;<pre><code>Book Service&#xA;GET /     get all books&#xA;GET /id   get book details, including author_ids&#xA;POST /    create new book&#xA;etc.&#xA;&#xA;Author Service&#xA;GET /     get all authors&#xA;GET /id   get author details, including book_ids&#xA;POST /    create new author&#xA;etc.&#xA;</code></pre>&#xA;&#xA;<p>The real services are much more enterprise grade, I just choose Books and Authors with their own data storage option as a easy understandable example. </p>&#xA;&#xA;<p>Assuming, there will be millions of calls to the services and I have to uphold specific availability and throughput of systems. How can I efficiently search for authors where name starts with 'A' and all books written by the authors where book title starts with 'B'?</p>&#xA;&#xA;<p>I see following options, which all are not perfect:</p>&#xA;&#xA;<ol>&#xA;<li><p>I create a search endpoint in Author service, fetch all authors matching the search criteria, follow each book_id and filter for the books. -> This requires a lot of calls on the Book service.</p></li>&#xA;<li><p>Same as 1. but I create a search endpoint in Book service, fetch all books matching the search criteria, follow each author_id and filter for the authors. -> This requires a lot of calls on the Author service. In worst case, same load as in 1.</p></li>&#xA;<li><p>I create a new microservice Search. Search will have its own database which is optimized for searches. Search will return me the books and authors and can give me the search result with one call. -> This requires Search to frequently sync with Book and Author service.</p></li>&#xA;<li><p>I merge Book and Author into one service which defeats the purpose of mircroservices?</p></li>&#xA;</ol>&#xA;&#xA;<p>Maybe someone with more microservice experience can help me out how to best architect this.</p>&#xA;"
35639882,JWT Authentication within a Micro Service architecture,2016-02-25 22:42:00,<php><node.js><rest><authentication><microservices>,2,682,2,0.0,1,"<p><strong>Question</strong></p>&#xA;&#xA;<p>Question how is it possible to create an authentication service within a micro-service application and have other services check against that token (JWT) and retrieve a user?</p>&#xA;&#xA;<p><strong>Possible Solution</strong></p>&#xA;&#xA;<p>My current thinking is based around the auth service inserting <code>{ token, user }</code> into Redis once a user is authenticated. All other service can check against the user's <code>Authorization: Bearer kdI8$dj$nD&amp;...</code> header token within Redis. </p>&#xA;&#xA;<ul>&#xA;<li>If <code>token</code> is present in Redis, user is authenticated.</li>&#xA;<li>If <code>token</code> is not present in Redis, user is not authenticated.</li>&#xA;</ul>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/7fsl7.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/7fsl7.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<ol>&#xA;<li>User sends <code>{ username, password }</code> to auth service</li>&#xA;<li>Auth service authenticates credentials and retrieves <code>{ token, user }</code></li>&#xA;<li>Auth service inserts <code>{ token, user }</code> into Redis</li>&#xA;<li>User makes request to <code>Service-1</code> with <code>{ token }</code></li>&#xA;<li><code>Service-1</code> loooks for <code>{ token }</code> in Redis and retrieves <code>{ token, user }</code></li>&#xA;<li><code>Service-1</code> does its thing and sends back <code>{ data }</code></li>&#xA;</ol>&#xA;&#xA;<p>Are there any possible security, logic or architectural problems with this approach? </p>&#xA;"
39721791,Can you reference other aggregates in a factory when implementing domain driven design?,2016-09-27 10:03:52,<java><domain-driven-design><microservices>,3,46,0,0.0,1,"<p>I have two aggregates, <code>Employee</code> and <code>Company</code>.  An <code>Employee</code> stores a reference to the <code>Company</code> via it's <code>UUID</code>.</p>&#xA;&#xA;<p>If I want to create an employee, I need to provide it with the company ID:</p>&#xA;&#xA;<pre><code>new Employee(name, companyId)&#xA;</code></pre>&#xA;&#xA;<p>What I can't get my head around is how to get the <code>id</code> of the <code>Company</code> if the client provides only the company name.  In other words, I see this happening:</p>&#xA;&#xA;<pre><code>Employee buildEmployee(String name, String companyName) {&#xA;    Company company = companyRepository.findByName()&#xA;    return new Employeee(name, company.getGUID())&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Something feels wrong to me, as now I've introduced a dependency on the <code>Company</code> aggregate in order to create an <code>Employee</code>.  Even worse would be that if these were two were separate microservices, as I'd have to make a rest call to get the company name.</p>&#xA;&#xA;<p>Is there a way to avoid this coupling, or are my entities modelled incorrectly?</p>&#xA;"
39791667,Context mapping - relations,2016-09-30 12:34:52,<domain-driven-design><microservices><bounded-contexts>,2,264,3,0.0,1,"<p>Is it considered a bad idea that 2 bounded contexts can have upstream communication between them?</p>&#xA;&#xA;<p>Example for, order BC will publish event, and inventory BC will subscribe for that event and in the same time, inventory BC can publish events and order BC will subscribe</p>&#xA;"
34586306,Is it possible to implement microservices with oData.net,2016-01-04 07:14:16,<c#><.net><architecture><odata><microservices>,2,799,0,1.0,1,"<p>I've been reading about the <a href=""http://microservices.io/patterns/microservices.html"" rel=""nofollow"">Microservice Architecure</a> and with the limited valuable information available on internet, I believe, I have a fair understanding of it from the theory point of view. I understand that on a high level this architecture suggests to move away from <a href=""http://microservices.io/patterns/monolithic.html"" rel=""nofollow"">monoliths</a> and have small, independent services. However, all the examples that I see on the internet are suggesting to write loosely coupled windows services (daemons in case of non MS implementations) connected to an <a href=""https://en.wikipedia.org/wiki/Enterprise_service_bus"" rel=""nofollow"">ESB</a>. I understand that writing small, loosely coupled web services that adhere to <a href=""https://en.wikipedia.org/wiki/Single_responsibility_principle"" rel=""nofollow"">SRP</a> also fits the bill of micro services.</p>&#xA;&#xA;<p>That said, oData.Net services, where all oData controllers (micro services?) are deployed as a monolith, is a clear violation of the Microservices Architecure pattern. Is it a correct statement to make that oData.net is not designed to work as micro services? If your answer is no then please explain with help of a an example. Also, help me understand, how to have the API gateway pattern in the mix.</p>&#xA;"
47860278,Best practice to share domain model between two microservices,2017-12-17 22:59:00,<microservices>,1,376,3,0.0,1,"<p>Are there any best practices or guidelines on how to share the domain model between two micro-services?</p>&#xA;&#xA;<p>I have a micro-service (1) which provides end points to interact with a resource (e.g, Order) all CRUD and the other micro-service (2) which performs a specific non CRUD task on the resource (Order). The micro-service (2) almost needs all the order attributes to perform its operation. In this case, does it make sense to create a common shared lib of the domain model and share between the two services? I could technically combine 1 and 2 together but the micro-service (2) needs to support scalability as it is quite memory and CPU intensive.</p>&#xA;"
33798965,Microservices advice concern to share state between two services,2015-11-19 08:45:43,<java><design><redis><datasource><microservices>,2,179,4,0.0,1,"<p>I am following the microservice architecture where we got two independed services</p>&#xA;&#xA;<p>(UserService, OtherService)</p>&#xA;&#xA;<p>UserService writes to it's own datasource (mysql and Redis)</p>&#xA;&#xA;<p>Clients writing updates to UserService</p>&#xA;&#xA;<p>In other hand Client's getting data from OtherService which need some user-state from UserService.</p>&#xA;&#xA;<p>Latency and throughput of OtherService are very important.</p>&#xA;&#xA;<p>few options: </p>&#xA;&#xA;<ol>&#xA;<li><p>UserService will update OtherService when state changes (than I break the domain responsibility of OtherService since it shouldnt maintenance users states</p></li>&#xA;<li><p>OtherService will ask UserService (via api) for the user states (adding lots of latency which is critical for me. I could cache but still.. not sure thats the right way)</p></li>&#xA;<li><p>having shared datastore while UserService write and OtherService reads.. breaking also the microservice principle when sharing same datasource</p></li>&#xA;</ol>&#xA;&#xA;<p>What do you guys think would be right to do?&#xA;Thank you,&#xA;ray.</p>&#xA;"
51593335,best managing microservice dependencies,2018-07-30 11:50:02,<microservices>,3,28,0,0.0,1,"<p>I need some advise on how to best manage microservices and their dependencies.</p>&#xA;&#xA;<p>Assuming I have a microservice ""pages"" that manages article pages with operations to create/delete/edit pages.</p>&#xA;&#xA;<p>Assume I have built on top a microservice ""books"" that manages a collection of pages, with operations to add/delete/edit pages that calls the downstream endpoints of pages service.</p>&#xA;&#xA;<p>If I want to build another microservice that needs to edit a certain page in a book, would it be best to call the edit pages endpoint of books or pages directly?</p>&#xA;"
41624628,How do you develop a microservice in isolation when it depends on other microservices?,2017-01-12 23:03:45,<microservices>,2,196,1,2.0,1,"<p>We are evaluating a move to microservices.  Each microservice would be its own project developed in isolation.  During planning, we have determined that some of the microservices will communicate with other via REST calls, pub/sub, messaging (ie. a order service needs product information from product service).</p>&#xA;&#xA;<p>If a microservice depends on retrieving data from another microservice, how can it be run in isolation during development?  For example, what happens when your order service requests product details, but there is nothing to answer that request?</p>&#xA;"
42918707,What are the disadvantages of using Kerberos authentication for secure micro-service to micro-service communication?,2017-03-21 04:53:18,<kerberos><microservices>,1,404,4,0.0,1,"<p>Sam Newman's ""Building Microservices"" book has described several methods that can be used to perform secure service to service communication. Such as</p>&#xA;&#xA;<ol>&#xA;<li>HTTPS Basic Authentication</li>&#xA;<li>Client Certificates</li>&#xA;<li>HMAC API Keys</li>&#xA;</ol>&#xA;&#xA;<p>I think Kerberos protocol can also be used for service to service authentication. But I found less references of using Kerberos protocol. Are there any disadvantages of using kerberos protocol in microservice architecture than other methods? </p>&#xA;"
36265833,Microservices & Versioning,2016-03-28 15:50:24,<cloud><versioning><microservices><semantic-versioning><continuous-delivery>,3,353,0,0.0,1,"<p>I'm building a cloud-native application using microservices. Eventually I have arrived at the point where I must implement proper versioning for my microservices. In most places where I've looked everyone is talking about semantic versioning these days (in general, not just for microservices).</p>&#xA;&#xA;<p>One of the principals of a microservices architecture is to <em>never deliver a breaking changeset</em>. On the other hand, semantic versioning says that one should increase the major version number when a non-backwards compatible (read ""breaking"") changeset is delivered. How are these compatible?</p>&#xA;&#xA;<p>It seems to me that semantic versioning <em>might be</em> overkill for a microservices architecture. If all public APIs are versioned (example /api/v3/getSomething) then do I really need full semantic versioning? I'm considering a scheme whereby I use a single number to identify the API version currently available (v1, v2, v3 etc.) together with a build number (or perhaps date/timestamp) that identifies the continuous integration pipeline that produced the build. Note that v3 would also still support v2 API calls until everyone using the service has moved to using v3, so v3 is the ""target version"" in a sense. So my microservice foo would look like ""foo-v3-20160503142209.jar""</p>&#xA;&#xA;<p>Are there any obvious pitfalls to this? The way I see it, clients will be guaranteed that the API is compatible if I enforce <em>never delivering breaking changeset</em> (if it changes, it is a new API version). And clients can be sure of all latest bug fixes by using the latest build number/timestamp.</p>&#xA;"
50634072,Observer pattern in microservice,2018-05-31 23:14:13,<java><design-patterns><microservices><observer-pattern>,1,118,6,0.0,1,"<p>Currently I am reading the book called: Head First Pattern Design, there is one design pattern called: Observer pattern, like this: <a href=""https://www.tutorialspoint.com/design_pattern/observer_pattern.htm"" rel=""nofollow noreferrer"">https://www.tutorialspoint.com/design_pattern/observer_pattern.htm</a></p>&#xA;&#xA;<p>While I was reading that design pattern, I was feeling that currently we often use queuing system to publish and subscribe tasks between each microservices. Got a feeling that the Observer pattern is not quite often be used currently.  <strong>Please correct me if I am not right, if could provide some example about using observer pattern in mircoservice will be excellent!</strong></p>&#xA;"
38099204,Session management using json web tokens in microservices,2016-06-29 12:13:43,<json><session><token><jwt><microservices>,1,808,0,0.0,1,"<p>I am trying to figure out how I will manage sessions using json web tokens in a microservice architecture. </p>&#xA;&#xA;<p>Looking at the design in this <a href=""http://nordicapis.com/how-to-control-user-identity-within-microservices/"" rel=""nofollow"">article</a> what I currently have in mind is that the client will send a request that first goes through a firewall. This request will contain an opaque/reference token which the firewall sends to an authorization server.  The authorization server responds with a value token containing all the session information for the user.  The firewall then passes the request along with the value token to the API, and the value token will then get propagated to all the different microservices required to fulfill the request. </p>&#xA;&#xA;<p>I have 2 questions:</p>&#xA;&#xA;<ol>&#xA;<li>How should updates to the session information in the value token be handled? To elaborate, when the session info in a token gets updated, it needs to be updated in the authorization server.  Should each service that changes the token talk to the authorization server? </li>&#xA;<li>Should all the microservices use this single token to store their session info? Or would it be better for each service to have a personalized token? If it's the latter, please explain how to adjust the design.</li>&#xA;</ol>&#xA;"
38172510,How to handle network calls in Microservices architecture,2016-07-03 17:25:50,<networking><architecture><rx-java><haproxy><microservices>,1,889,3,0.0,1,"<p>We are using Micro services architecture where top services are used for exposing REST API's to end user and backend services does the work of querying database.</p>&#xA;&#xA;<p>When we get <strong>1 user request we make ~30k requests to backend service</strong>. We are using RxJava for top service so all 30K requests gets executed in parallel.&#xA;We are using haproxy to distribute the load between backend services.&#xA;However when we get 3-5 user requests we are getting network connection Exceptions, No Route to Host Exception, Socket connection Exception.</p>&#xA;&#xA;<p>What are the best practices for this kind of use case?</p>&#xA;"
49606124,Neo4J In Microservices Architecture,2018-04-02 06:05:19,<java><spring><neo4j><microservices><spring-data-neo4j-5>,4,176,0,0.0,1,"<p>To keep in line with DDD and Bounded Contexts, its well known that when you create your microservices you should keep separation of concerns.</p>&#xA;&#xA;<p>One of the main benefits of Neo4J is keeping your ""connected"" data in Neo4J so relationships between them are efficiently queried.</p>&#xA;&#xA;<p>These two opposing forces seem to make an microservice architecture decision difficult when choosing to use Neo4J.</p>&#xA;&#xA;<p>Do you have multiple microservices connect to Neo4J db and persist their own domain accordingly?</p>&#xA;&#xA;<p>OR</p>&#xA;&#xA;<p>Do you have one microservice with a db connection to Neo4J that controls persistance and querying?</p>&#xA;&#xA;<p>Both dont seem quite right...</p>&#xA;"
49469599,Authentication and authorisation in microservice architecture,2018-03-24 20:28:44,<authentication><jwt><graphql><microservices><go-micro>,1,322,2,2.0,1,"<p>I have multiple services:</p>&#xA;&#xA;<ul>&#xA;<li>User</li>&#xA;<li>Post</li>&#xA;<li>Comment</li>&#xA;<li>Authentication</li>&#xA;<li>GraphQL endpoint</li>&#xA;</ul>&#xA;&#xA;<p>And lets say they are connected together like this:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/GAyiV.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/GAyiV.png"" alt=""example 1""></a></p>&#xA;&#xA;<p>All services are communicating through gRPC on a closed nettwork and the Authorization is done using jwt tokens</p>&#xA;&#xA;<p>Approach 1:&#xA;The graphql service is responsible for user authentication and making sure that the user is authorised to run the specified procedure. There is no user authentication between the services, but there is TLS authentication. There is no authorisation checks done by the services.</p>&#xA;&#xA;<p>Approach 2:&#xA;Each individual service makes sure that the user is authorised to run a specific procedure. An example could be voting on a post where you wold need to be signed in and have over 15 in reputation. Here it would be the Post service responsibility to check whether the user is signed in or not (authenticated) and whether it's authorised to vote. This will result in large overhead since every procedure call needs to check user authentication and authorisation through the Auth service. </p>&#xA;&#xA;<p>Is there a better approach that still preserves the security of approach 2, but creates a small overhead like approach 1?</p>&#xA;&#xA;<p><strong>-----Update-----</strong></p>&#xA;&#xA;<p>Approach 3:&#xA;Same as approach 2, but user authentication is only done in the GraphQL service using the Auth service. Authorisation is done by checking metadata passed arround. And there is TLS authentication between the services. </p>&#xA;"
49252691,Microservice relationship/dependency strategy,2018-03-13 09:37:06,<architecture><microservices>,2,60,3,0.0,1,"<p>I'd like some feedback on couple different solutions to handling data dependencies and relations across micro services.</p>&#xA;&#xA;<p>Consider these services:&#xA;<a href=""https://i.stack.imgur.com/Y7Qx8.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Y7Qx8.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Briefly explained, there is a bank service and an account service. The account service holds the accounts and are always connected to a bank using a bankId.</p>&#xA;&#xA;<p>The dilemma is how to handle and validate this relationship and bankId and the pros and cons that comes with each decision.</p>&#xA;&#xA;<p><strong>Option 1:</strong></p>&#xA;&#xA;<p>Ignore validating completely. POST/PATCH against Accounts will never validate if the given BankId is an existing ID.</p>&#xA;&#xA;<p>Pros</p>&#xA;&#xA;<ul>&#xA;<li>Services don't know about each other and there are no hard dependencies between them, if one service goes down, the other doesn't stop working. (Which is a BIG one)</li>&#xA;</ul>&#xA;&#xA;<p>Cons</p>&#xA;&#xA;<ul>&#xA;<li>If the BankId is incorrect, accounts are ""lost"" and can't be accessed.</li>&#xA;<li>The reporting service and/or any reader has to account for missing or incorrect banks and present whatever data it has without crashing.</li>&#xA;</ul>&#xA;&#xA;<p>Reflection</p>&#xA;&#xA;<p>The services are completely decoupled which will benefit performance, up time and complexity. All readers and applications need to be ""reactive"" and able to handle when cross service relationships are ""broken"".</p>&#xA;&#xA;<p><strong>Option 2:</strong></p>&#xA;&#xA;<p>Always validate using synchronous REST-call. POST/PATCH against Accounts will fail if BankId does not exist or if in anyway BankService can't respond or is broken.</p>&#xA;&#xA;<p>Pros</p>&#xA;&#xA;<ul>&#xA;<li>100% data integrity.</li>&#xA;<li>Readers don't need to handle and expect broken relationships.</li>&#xA;</ul>&#xA;&#xA;<p>Cons</p>&#xA;&#xA;<ul>&#xA;<li>Services are tightly dependent, you could argue that they are no longer proper micro services and might as well be a single service.</li>&#xA;<li>Performance impacted negatively</li>&#xA;<li>AccountService POST/PATCH won't work if BankService is down, GET will still work.</li>&#xA;</ul>&#xA;&#xA;<p>Reflection</p>&#xA;&#xA;<p>Services are tightly dependent which is really bad, this is more like the ""old ways"" and generally I feel like it's the wrong way to do it. Merging the services in this case is even worse, if you start fixing problems by merging you'd probably keep doing it and soon end up with massive services and you've failed with the whole micro service principle. Sure, reads will still work but that's a far fetched excuse.</p>&#xA;&#xA;<p><strong>Option 3:</strong></p>&#xA;&#xA;<p>Keep a readonly copy of BankEntity in AccountService. AccountService keeps this updated via the event bus. Validate against this on POST/PATCH.</p>&#xA;&#xA;<p>Pros</p>&#xA;&#xA;<ul>&#xA;<li>100% data integrity.</li>&#xA;<li>Readers don't need to handle and expect broken relationships.</li>&#xA;<li>No measurable negative performance impact</li>&#xA;</ul>&#xA;&#xA;<p>Cons</p>&#xA;&#xA;<ul>&#xA;<li>Complexity increased</li>&#xA;<li>Due to the asynchronous nature of events we cannot assume that the readonly copy of Banks are 100% updated. POST/PATCH on Account in rapid succession after creating a BankEntity might fail.</li>&#xA;<li>AccountService gets more knowledge of other services, even though it's a loose dependency</li>&#xA;</ul>&#xA;&#xA;<p>Reflection</p>&#xA;&#xA;<p>This is the most complex way, readers won't need to handle broken relationships and the performance / up time-issues are resolved, however, instead you would have to handle the fact that the readonly copy of Banks might not be updated yet and try again later. Comparing this to Option 1 means you'd still have to deal with it in some way, and since this will be more complex across the board I'd say its not the most favourable one.</p>&#xA;&#xA;<p><strong>End Thoughts</strong></p>&#xA;&#xA;<p>The general goal that would be nice to achieve is that the services do not synchronously talk to each other and that data integrity is a good as possible.</p>&#xA;&#xA;<p>However, in a micro service architecture I'm under the impression that relationship integrity simply might be one of those things you accept to lose going to this way.</p>&#xA;&#xA;<p>Our decision is leaning towards Option 1, actually just ignoring it, and anytime where you need to use it, you have to expect and handle that it might not be correct. This seems like it is the most ""micro services"" solution, the services don't really know about each other, the only ones that do are applications and reporting services that need to do cross-service operations.</p>&#xA;&#xA;<p>Any of the services need to take full responsibility that they, at any given time, has all the data they need to fully function themselves. Let's say for arguments sake that AccountEntity NEEDED a location for whatever reason to be a usable and complete domain entity, you can't expect to rely on BankId, you'd have to store Location on AccountEntity and maybe if it changes, you'd get an event and you can update it.</p>&#xA;&#xA;<p><strong>TL;DR</strong>&#xA;What are your experiences, opinions and thoughts on this? What would you do? Which strategy would you go for?</p>&#xA;"
44927532,How to get newly created resource to client with CQRS and event sourcing based microservices,2017-07-05 13:23:43,<microservices><cqrs><event-sourcing>,1,275,4,0.0,1,"<p>I'm experimenting with microservices, event sourcing and CQRS. However, I'm a little bit confused about how I go from issuing a command to performing a query to return the new state, specifically with regard to interactions with a web API gateway.</p>&#xA;&#xA;<p>As an example, the simple application I am attempting to write (which probably doesn't actually need any of these; it is just something to aid my learning) creates a random-graph and then performs some long-running calculations on the graph. I've modelled this as two separate services: the <code>GraphService</code> and the <code>ComputationService</code>. The imagined process flow is as follows:</p>&#xA;&#xA;<ol>&#xA;<li>User requests new random graph.</li>&#xA;<li>API gateway constructs <code>CreateGraph</code> command and sends it to the&#xA;<code>graph service</code>.</li>&#xA;<li><code>GraphService command handler</code> creates a graph and publishes a&#xA;<code>GraphCreated</code> event.</li>&#xA;<li><code>GraphService event handler</code> subscribes to topic for graph events,&#xA;processes <code>GraphCreated</code> event and stores graph in persistent read&#xA;storage.</li>&#xA;<li><strong>Client somehow gets the newly created graph.</strong></li>&#xA;<li><code>ComputationService event handler</code> subscribes to topic for graph&#xA;events, processes <code>GraphCreated</code> event and begins potentially&#xA;long-running computation, e.g. calculate diameter.</li>&#xA;<li><code>ComputationService</code> publishes <code>DiameterComputed</code> event.</li>&#xA;<li><code>GraphService</code> event handler subscribes to topic for computation&#xA;events, processed <code>DiameterComputed</code> event and updates the graph in&#xA;persistent read storage.</li>&#xA;<li>Client somehow gets updated - easier than getting the new graph, since already have an ID and can poll for changes / websockets / SSE, etc.</li>&#xA;</ol>&#xA;&#xA;<p>That seems relatively simple. However, my confusion lies in how to go about informing the API gateway, and thus the web client, of the new graph (as highlighted in bold above). In a typical CRUD process, the result of the <code>POST request</code> to create a new graph would be to return the URL of the new resource, for instance. However, with CQRS, commands should return nothing or an exception.</p>&#xA;&#xA;<p>How do I pass information back to the client of the service (in this case the API gateway) about the ID of the new graph so that it can perform a query to get the representation of the new resource and send it to the user? Or at least get an ID so that the web client can ask the API gateway, etc?</p>&#xA;&#xA;<p>As I see it at the moment, after sending a command, everyone is just left hanging. There needs to be some sort of subscription model that can be interrogated for the status of the graph creation. I considered having the API gateway generate a request ID which gets embedded with the <code>CreateGraph</code> command, but this then couples the service to the API.</p>&#xA;&#xA;<p>I'm obviously missing something, but have no idea what. None of the examples I've looked at or discussions I've read address this issue and assume that the ID of whatever resource is already known. I couldn't find any discussions here addressing this issue, but if I've just missed them, please point me there rather than duplicating questions. Any pointers would be hugely welcomed.</p>&#xA;"
48838101,How to perform validation across services in microservices,2018-02-17 05:13:31,<domain-driven-design><microservices>,3,316,1,0.0,1,"<p>Suppose there are two microservices: Order and Intentory. There is an API in order service that takes ProductId, Qty etc and place the order.</p>&#xA;&#xA;<p>Ideally order should only be allowed to place if inventory exists in inventory service. People recommend to have Saga pattern or any other distributed transactions. That is fine and eventually consistency will be utilized.</p>&#xA;&#xA;<p>But what if somebody wants to abuse the system. He can push order with productid which are either invalid (or which are out of inventory). System will be taking all these orders and place these orders in queue and Inventory service will be handling these invalid order.</p>&#xA;&#xA;<p>Shouldn't this be handled upfront (in order service) rather than pushing these invalid orders to the next level (specially where productId is invalid)</p>&#xA;&#xA;<p>What are the recommendations to handle these scenarios?</p>&#xA;"
36812791,Doing compex reports with microservices,2016-04-23 15:36:11,<report><microservices>,1,1655,0,0.0,1,"<p>I'm starting a new project and am interested in architecting it as microservices. I'm trying to wrap my head around it:</p>&#xA;&#xA;<p>Say that I have an order service and a product service. Now I want to make a report service that gives me all orders that contain a product from a certain product category. </p>&#xA;&#xA;<p>Since order's dont know about products that means that I would need to fetch all orders, loop them and fetch products for each order and then return those how match. </p>&#xA;&#xA;<p>Is this assumption correct or is there any more efficient way of doing this with microservices?</p>&#xA;"
36660279,Microservice grouping of modules,2016-04-16 04:55:50,<soa><microservices>,1,116,4,1.0,1,"<p>I'm developing an Employee Management System and following a microservice-style architecture. Initially, I have created the ERD and designed several master maintenance tables like Department, Project, Position etc...</p>&#xA;&#xA;<p>My question is do I have to create a single service for each of these tables? or should I create a single service called master maintenance for all these tables?</p>&#xA;&#xA;<p>Please help me to decide. Thank you in advance.</p>&#xA;"
36716838,Microservice architecturs and layers,2016-04-19 11:18:52,<architecture><microservices>,1,483,5,1.0,1,"<p>Let's discuss the architecture of a microservice environment. We are having a discussion internally at our company and I'd like some feedback. What I'm having serious thoughts about are an orchestration layer (code duplication, more moving parts changing an api).</p>&#xA;&#xA;<h2>Option one - with orchestration layer:</h2>&#xA;&#xA;<p>webapp -> orchestration -> service -> persistance</p>&#xA;&#xA;<p>api -> api gw -> orchestration -> service -> persistance</p>&#xA;&#xA;<p>In this case services are not allowed to talk to each other. Aggregated services in orchestration layer</p>&#xA;&#xA;<h2>Option one - without orchestration layer:</h2>&#xA;&#xA;<p>webapp -> service -> persistance</p>&#xA;&#xA;<p>api -> api gw -> service -> persistance</p>&#xA;&#xA;<p>Here services are allowed to talk to each other, aggregated services exist here.</p>&#xA;&#xA;<h3>Specific questions:</h3>&#xA;&#xA;<ul>&#xA;<li>Where does billing belong?</li>&#xA;<li>Which solution do you prefer? Pros/cons.</li>&#xA;<li>Other suggestions?</li>&#xA;</ul>&#xA;"
37699062,API vs Event in Microservice approach,2016-06-08 09:50:34,<soa><cqrs><microservices><event-sourcing><eda>,1,721,0,1.0,1,"<p>What about <a href=""http://martinfowler.com/articles/microservices.html#SmartEndpointsAndDumbPipes"" rel=""nofollow"">Smart endpoints and dumb pipes</a> in terms of different type of requests?</p>&#xA;&#xA;<p>After reading that I was thinking that it's enough to subscribe for some events and deal with that. But now I've realised that sometimes you should have opened API (maybe not for the end customers, but for the API Gateway etc). Is this ok? Or you should ""eventize"" (transform into event) any request which coming to Microservices cloud?</p>&#xA;&#xA;<p>So, for instance, you have Invoice and Order services.&#xA;It's clear that when order created you might use an event which might be consumed by Invoice service to create an invoice. It's clear that for receiving list of last user's orders you may use CQRS on Order service side or even just make new service LastOrders which will keep just projection of required data. But should this request transformed into event or LastOrders should provide API for that and listen for events to update it's own DB? </p>&#xA;"
48271493,Relation of Microservices and DDD CQRS and ES,2018-01-15 22:21:43,<domain-driven-design><microservices>,3,206,2,0.0,1,"<p>For the last couple of weeks I've been starting and trying to understand DDD CQRS, ES and Microservices. &#xA;I think I've understood them individually but not as a single unit so this is why I have some misunderstandings that I hope to clarify.</p>&#xA;&#xA;<p>So first what is the relation between Microservices and DDD, can you do one without the other?&#xA;And secondly, does Bounded Contexts translate in the end into a microservice ?</p>&#xA;"
46451544,C++ MicroServices with desktop application,2017-09-27 15:16:38,<c++><microservices><desktop>,1,807,7,1.0,1,<p>I got a desktop application and it's getting bigger and bigger. And i wonder if i can make something like microservices with desktop application? I want to application for now stays desktop. Application it's written in C++.&#xA;I can exclude some of the modules with some preparations.&#xA;But is it possible and if anybody have idea how to start with this?</p>&#xA;
43910795,Microservices async operation HTTP response,2017-05-11 08:53:19,<http><asynchronous><architecture><microservices><event-driven>,1,182,9,1.0,1,"<p>We're building a microservice app where clients can create <em>projects</em>. The following diagram shows the technical flow of this process:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/UWDMy.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/UWDMy.png"" alt=""Create Project Flow""></a></p>&#xA;&#xA;<p>My question: <strong>what HTTP response should the API gateway return to the client (step 1.)?</strong> </p>&#xA;&#xA;<p>My initial idea was to give back a 202, but the problem there is that I don't know the <code>Location</code> yet (<code>/projects/{id}</code>), because the id of the <em>project</em> will be created at the Project Management Service.</p>&#xA;"
50041559,How to share common Data over several Microservices,2018-04-26 11:15:02,<domain-driven-design><microservices>,2,87,5,1.0,1,"<p>I'm writing a Bachelors-Thesis about Microservices.</p>&#xA;&#xA;<p>I'm trying to split a monolith into Microservices and now I ran into a problem that there are some tables in a Database, that are relevant for more than one Microservice.&#xA;There is no chance to split this data into domain specific views.</p>&#xA;&#xA;<p>My approach is that I will create a new Database Schema with that specific tables and let all Microservices read from it.&#xA;That would be a shared kernel approach which is not recommended by the experts of Microservices.</p>&#xA;&#xA;<p>Do you have any experience or recommendations about this problem?</p>&#xA;&#xA;<p>Do you have any recommendations about books which are about similar problems?</p>&#xA;"
42353292,Does Service Discovery microservice break idea of loose coupling?,2017-02-20 20:02:25,<microservices><service-discovery>,4,120,0,1.0,1,"<p>As a mechanism to connect microservices together and make them work it is usually suggested to use APIs and Service Discovery. But they usually work as their own microservices, but these ones should apparently be ""hard-coded"" into others, as every microservice is supposed to register with them and query for other microservices' locations. Doesn't this break the idea of loose coupling, since a loss of a discovery service implies others being unable to communicate?</p>&#xA;"
48743223,Sharing domain model classes (Aggregates) across two microservices,2018-02-12 09:34:50,<domain-driven-design><microservices>,1,138,3,0.0,1,"<p>Based on my limited knowledge, microservice can be designed at bounded context level or Aggregate level.</p>&#xA;&#xA;<p>If microservices are created at aggregate level, they might need to refer to an aggregate created in other microservices (as they share the same bounded context).</p>&#xA;&#xA;<p>Should we create the same aggregate multiple times in each microservice (if required)? Or there can never be a case, where we need to use one aggregate into other?</p>&#xA;"
48792602,Persistence layer as microservices?,2018-02-14 17:04:40,<spring-boot><microservices><netflix-eureka>,3,251,3,0.0,1,"<p>I'm a beginner in microservice architecture and I have read in a lot of blog that in a microservice architecture, it is mandatory that each micro service has its own database. In my case it may cost very expensive. </p>&#xA;&#xA;<p>My question is, is it possible to make the persistence layer as micro service in itself ? Which would have the function of allowing other microservices to have read/write access to the database.&#xA;Thanks</p>&#xA;"
41086281,MICROSERVICES - communication between them,2016-12-11 12:41:57,<java><rest><microservices>,2,712,4,0.0,1,"<p>I've got one question concerning microservices architecture. I am designing a system based on microservices. I've read few articles and I think I understand the idea. However, I don't how microservices should communicate with each other while they have separate business responsibilities....&#xA;What I mean is that if I have a system for booking train tickets, I would divide backend application into modules: </p>&#xA;&#xA;<ul>&#xA;<li>Client (login,logout,registration) </li>&#xA;<li>Reservations (booking a train seat for user,getting all reservations for user) </li>&#xA;<li>ConnectionsDetails&#xA;(searching for connections,getting connection details) </li>&#xA;<li>Trains&#xA;(information about trains- seats number,class etc.)</li>&#xA;</ul>&#xA;&#xA;<p>Now, I can only think that if user search for connections module ConnectionsDetails communicate with Trains module and ask about particular train details. But how could other microservices communicate? If user wants to login - she/he asks directly Client module, if she/he wants to get all her reservations - asks Reservation module DIRECTLY etc... </p>&#xA;&#xA;<p>So my question is, how should modules communicate if they do different things? I'm sorry if my question is trivial or stupid, I'm just starting with microservices.</p>&#xA;&#xA;<p>EDIT:&#xA;I didn't mean what tools could I use for communication. My question is about logic. In the example I showed, why one microservice could ask another microservice about sth if client can directly ask the another one? As I said earlier, how they should communicate(about what should they ask each other exactly) if they do separate things?</p>&#xA;"
40447582,API Gateway handling Webservices in a Microservice Architecture,2016-11-06 08:58:30,<web-services><rest><architecture><microservices>,2,257,0,2.0,1,"<p>I have an architectural question. We are transforming an old Monolith to a Microservice Architecture. Therefore we have in plan to identify the bounded contexts and make Microservices out of these. </p>&#xA;&#xA;<p>To keep up with our public API we will have an API Gateway which routes the stuff properly. The internal communication will be done via REST (at the first shot). Unfortunatelly our existing public API is about WebServices most of the time.</p>&#xA;&#xA;<p>If we do transformation from Webservices to REST communication we already need to know stuff of the Domain Objects. Isn't that already a violation of the Microservice Design. In the end that means adding a field in the Microservice A implies also touching the API Gateway. Which I do not like.</p>&#xA;&#xA;<p>Am I wrong here? What is your opinion on this?</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/9ZGGo.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/9ZGGo.png"" alt=""enter image description here""></a></p>&#xA;"
41739975,What are the reason to decouple databases on microservices?,2017-01-19 10:51:46,<database><microservices><nosql>,1,435,3,0.0,1,"<p>Here I my current findings on this subject, are these correct or is there an aspect missing?</p>&#xA;&#xA;<p>There are two major principles for microservices: </p>&#xA;&#xA;<ul>&#xA;<li><strong>strong cohesion</strong> -> related code is gouped together, e.g. a class does on well defined job this is strong/hingh cohesion. </li>&#xA;<li><strong>loose coupling</strong> -> interconnect components in a system so that those  components, depend on each other as less as practicable. Coupling refers to the degree of direct knowledge that one element has of another. So a change to one service should not require a change to another.</li>&#xA;</ul>&#xA;&#xA;<p>With a shared database (as in not decoupled) architecture both these principles are not covered. This due to the following facts:</p>&#xA;&#xA;<ul>&#xA;<li>There is a fixed link between the users and the specific technology&#xA;choice as well as to the actual database implementation.</li>&#xA;<li>Businiess/application logic might be spread among multiple users.</li>&#xA;<li>Shared information which needs to be edited can trigger a change of&#xA;the behavior in multiple places.</li>&#xA;<li>Due to the more monolithic architecture which goes with shared&#xA;databases a failure can effect many serveries since they are all tied&#xA;together, even a compelte system failure can happen due to the&#xA;coupeling.</li>&#xA;</ul>&#xA;&#xA;<p>To avoid the above mentioned issues: decoupled databases can be used with microservices instead of shared databases. So each microservice should have its own database. This will also ease scaling of the system, provide much much more system availability, since ""only"" the one, really effected service will fail. </p>&#xA;&#xA;<p><strong>UPDATE</strong>: &#xA;One other benefit of microservices would be that it can improve the flexibility and speed of development. Since correctly decomposed microservices, can be developed and deployed e independently and in parallel with the other services.</p>&#xA;"
42528718,CQRS + Microservices: How to handle relations / validation?,2017-03-01 10:06:11,<validation><relationship><one-to-many><microservices><cqrs>,3,462,0,0.0,1,"<p><strong>Scenario:</strong></p>&#xA;&#xA;<ul>&#xA;<li>I have 2 Microservices (which both use CQRS + Event Sourcing internally)</li>&#xA;<li>Microservice 1 manages Contacts (= Aggregate Root)</li>&#xA;<li>Microservice 2 manages Invoices (= Aggregate Root)</li>&#xA;</ul>&#xA;&#xA;<p>The recipient of an invoice must be a valid contact. </p>&#xA;&#xA;<p><strong>CreateInvoiceCommand:</strong></p>&#xA;&#xA;<pre><code>{&#xA;  ""content"": ""my invoice content"",&#xA;  ""recipient"": ""42""&#xA;}&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p>I now read lot's of times, that the write side (= the command handler) shouldn't call the read side.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>Taking this into account, the Invoices Microservice must listen to all <code>ContactCreated</code> and <code>ContactDeleted</code> events in order to know if the given recipient id is valid.</p>&#xA;&#xA;<p>Then I'd have thousands of Contacts within the Invoices Microservice, even if I know that only a few of them will ever receive an Invoice.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>Is there any best practice to handle those scenarios?</p>&#xA;"
39435028,How to use micro-services into core application/framework?,2016-09-11 10:16:13,<rest><microservices>,1,120,5,0.0,1,"<p>For example I have two micro-services, how can I use those services in my core application?</p>&#xA;&#xA;<p>I know the communication will be through REST API. </p>&#xA;&#xA;<p>My question is, should I create those services as sub-modules?</p>&#xA;&#xA;<p>If my question seems not clear to you then assume I am not clear about micro-services. Thus better explanation will be very helpful.</p>&#xA;&#xA;<p>Thanks.</p>&#xA;"
47162798,Decomposition into microservices,2017-11-07 16:25:12,<design><architecture><microservices><bounded-contexts>,3,86,0,2.0,1,"<p>I have a question regarding decomposition into microservices. Suppose we have 2 microservices: <strong>User</strong> and <strong>Product</strong>. Suppose we now have a requirement to add categories to the system. More specifically, a product has one or more categories (e.g the product red miniature ferrari belongs to categories toys and cars) and a user can have categories which she likes (e.g. toys and shoes). Now when we retrieve the full list of products we want them to be sorted such that the products that fall in the preferred user categories are at the top. </p>&#xA;&#xA;<p>Basically be have a concept that is shared between microservices (in this case category). How to best model this in a microarchitecture environment? I see two solutions:</p>&#xA;&#xA;<p><strong>Solution 1:</strong></p>&#xA;&#xA;<ul>&#xA;<li>Make a separate “categories"" microservice which manages CRUD of categories</li>&#xA;<li>In the product service have an API call to link category ids to a product</li>&#xA;<li>In the user service have an API call to link category ids to a user</li>&#xA;<li>In the product service we have an API call to fetch products ordered on preference. To make this work the product service needs to call the user service to get the user categories (or listen to events emitted by user services)</li>&#xA;</ul>&#xA;&#xA;<p><strong>Solution 2:</strong> </p>&#xA;&#xA;<ul>&#xA;<li><p>Make a separate “categories” microservice which manages CRUD of categories</p></li>&#xA;<li><p>The categories service also has an API call to link product ids to categories</p></li>&#xA;<li><p>The categories service also has an API call to link user ids to categories</p></li>&#xA;<li><p>In the product service we have an API call to fetch products ordered on preference (to make this work product service needs to call the categories service to get user and product categories (or listen to events)</p></li>&#xA;</ul>&#xA;&#xA;<p>What are the advantages/disadvantage to both solutions? </p>&#xA;"
47265946,Microservice Project Structure Using Spring boot and Spring Cloud,2017-11-13 13:53:05,<spring-boot><microservices>,3,1693,0,1.0,1,"<p>I am trying to convert a normal monolithic web application into microservices structure using spring boot and spring cloud. I am actually trying to create Angular 2 front-end application and calls these my developed microservices in the cloud. And I am already started to break the modules into independent process's structure for microservice architecture.</p>&#xA;&#xA;<ul>&#xA;<li>Here my doubt is that , When designing the flow of control and microservice structure architecture, Can I use only one single spring boot project using different controller for this entire web application back end process.? Somewhere I found that when I am reading develop all microservices using 2 different spring boot project. Actually I am new to spring and spring cloud. I have lot of confusions in my task. Can any one help to clarify that is possible to create all services in single project by using different modules ???</li>&#xA;</ul>&#xA;"
37801454,Is there a way to implement SSO in front of the microservices?,2016-06-14 01:10:36,<go><single-sign-on><cas><microservices><beego>,1,1127,5,1.0,1,"<p>Recently I have a project to implement <a href=""https://en.wikipedia.org/wiki/Single_sign-on"" rel=""nofollow noreferrer"">SSO(Single-Sign-On)</a> for multiple web applications based on <a href=""http://beego.me/"" rel=""nofollow noreferrer"">Beego Framework</a>. The most popular SSO project is <a href=""https://en.wikipedia.org/wiki/Central_Authentication_Service"" rel=""nofollow noreferrer"">CAS</a>, which needs a CAS Server in the center, and a CAS Client before each web application. Unfortunately, it seems that there's not any offical CAS clients written in Golang, except <a href=""https://github.com/go-cas/cas"" rel=""nofollow noreferrer"">go-cas/cas</a>, and <a href=""https://github.com/adanteng/cas"" rel=""nofollow noreferrer"">adanteng/cas</a>, which supports Beego.</p>&#xA;&#xA;<p>But the workflow of CAS is a little bit complicated: too many redirections, too many tickets transmitted among the CAS, web apps, and the user browser. I can't figure out why people deploy the Authentication Services in the center of all the web apps, rather than the front, like the following diagram:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/aqOmDm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/aqOmDm.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>In this diagram, all the requests are forced to be processed in the Authenticate Service first, if authenticated successfully, then generate a session ID, saved in the cookies and Redis which is shared by other microservices. There's not any redirections or tickets at all, only requests transmittion.</p>&#xA;&#xA;<p>So is this diagram possible, or some critical problems I ignored?</p>&#xA;&#xA;<h1>Update 0</h1>&#xA;&#xA;<p>The session-sharing way is indeed not scalable and modular as <a href=""https://stackoverflow.com/users/1357978/nadh"">Nadh</a> counsels. How about transmitting user information, like name, email, etc., in the headers of requests between the auth service and downstream services, like the creative work of Heipei at <a href=""https://heipei.github.io/2015/09/23/nginx-sso-Simple-offline-SSO-for-nginx/"" rel=""nofollow noreferrer"">nginx-sso</a>? Is it possible to make it work as an SSO Gateway as Sam Newman sharing in the book <a href=""http://samnewman.io/books/building_microservices/"" rel=""nofollow noreferrer"">Building Microservices</a>?</p>&#xA;&#xA;<h1>Update 1</h1>&#xA;&#xA;<p>A more detailed diagram is shown as follows, in order to describe my childish idea a little bit clearly, hoping that there is not much misunderstanding from Heipei and Sam Newman. </p>&#xA;&#xA;<p>Rather than handling so many redirections and handshakes, all the requests are processed in the authentication service firstly, which writes user info from MySQL, into the Redis as the session provider, and the HTTP header to transmit to the downstream services, if the request is authenticated successfully.</p>&#xA;&#xA;<p>In this way, the user info is transmitted via HTTP header instead of the above shared-Redis as <a href=""https://stackoverflow.com/users/1357978/nadh"">Nadh</a> warning, and Redis can be depolyed with the auth service, or shared among auth instances only.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/BeMFF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/BeMFF.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<h1>Update 2</h1>&#xA;&#xA;<p>It seems that Cookie and Session are old-school techs. The cross-domain problem of cookie, and the sharing problem of session are the primary barrier to the scalability and flexibility of the modern web applications. Fortunately, JSON Web Token comes to be the best Single Sign-on solution for multiple lightweight services nowadays, by moving the user info(maybe id is enough) storage from the server side to the client side, and transmitted only if necessary.</p>&#xA;"
50139640,Architecture of microservices from a business approach or technical?,2018-05-02 16:43:36,<rest><docker><cloud><microservices>,3,50,0,1.0,1,"<p>Our team is trying to decouple a <strong>monolithic</strong> spring mvc administrative application <em>(create, update, delete)</em> and we want to adopt an architecture based on <strong>microservices</strong>. </p>&#xA;&#xA;<p>After a bit of research, it seems the best is create microservices <strong><em>according to the problem</em></strong> that a specific part of the software solves, for example, Managing Clients. </p>&#xA;&#xA;<p>The problem comes when we read some definitions, like the following from <strong><a href=""https://en.wikipedia.org/wiki/Monolithic_application"" rel=""nofollow noreferrer"">Wikipedia</a></strong>:</p>&#xA;&#xA;<blockquote>&#xA;  <p>In software engineering, a monolithic application describes a&#xA;  single-tiered software application in which the user interface and&#xA;  data access code are combined into a single program from a single&#xA;  platform.</p>&#xA;</blockquote>&#xA;&#xA;<p>Based on that definition, <em>my application is not monolithic</em>, because it is perfectly separated in layers, but it is not found in a micro-services architecture either, which is confusing to me since in the web everything is about <strong>Monolithic vs. Microservices</strong>.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/EIfHO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/EIfHO.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><strong>So, should the microservices architecture be designed based on the business problem it solves?</strong> </p>&#xA;&#xA;<p><strong>Should the microservices architecture be designed based on to the way in which the application is organized in layers?</strong></p>&#xA;&#xA;<p>Thanks.</p>&#xA;"
43584079,How to split an existing webApi project?,2017-04-24 09:13:47,<.net><asp.net-web-api><architecture><microservices>,1,68,4,0.0,1,"<p>I have an existing legacy .Net webApi project with ~20 controllers and ~10 methods each.&#xA;The traffic is 15 requests per sec.&#xA;I'm wondering if it's a smart thing to do to take microServices approach and split it into few hosted projects.</p>&#xA;&#xA;<p>Since i don't have access to the clients (android, ios, WebSite and third parties) i will have to keep the existing API URL working (<a href=""http://domainName/API"" rel=""nofollow noreferrer"">http://domainName/API</a>).</p>&#xA;&#xA;<p>My quick and dirty architecture is:&#xA;1) Build new hosted API process <a href=""http://domainName/API1"" rel=""nofollow noreferrer"">http://domainName/API1</a>, <a href=""http://domainName/API2"" rel=""nofollow noreferrer"">http://domainName/API2</a>, <a href=""http://domainName/API3"" rel=""nofollow noreferrer"">http://domainName/API3</a>...&#xA;2) Ask kindly from the clients to use the new URLs&#xA;3) <a href=""http://domainName/API"" rel=""nofollow noreferrer"">http://domainName/API</a> will act as router to the new processes for background competitively </p>&#xA;&#xA;<p>Ideas ? Is there any existing pattern for that?  </p>&#xA;"
43661844,Microservice - What does changing service without changing code really mean?,2017-04-27 15:21:00,<java><spring-boot><cloudfoundry><microservices>,2,113,7,0.0,1,"<p>I am trying to understand ""changing database without changing code"". Currently working with micro services using springboot, java, thymeleaf and cloud foundry.</p>&#xA;&#xA;<p>I have a spring boot application and attached a database as a service using cloud foundry.</p>&#xA;&#xA;<p>My problem is I am seeing that the purpose of micro service is allowing the ease to change services without changing code.</p>&#xA;&#xA;<p><strong>Here is where I got stuck</strong></p>&#xA;&#xA;<p>In java I have a sql script, ""select * from ORDER where Status = 'ACCEPTED';""</p>&#xA;&#xA;<p>Images <a href=""http://microservices.io/patterns/data/database-per-service.html"" rel=""nofollow noreferrer"">source</a></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/WDQmC.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/WDQmC.png"" alt=""Table sample""></a></p>&#xA;&#xA;<p>My database would be attached as a service on cloud foundry using CUPS &#xA;""jdbc:oracle:thin:username/password//host:port/servicename""</p>&#xA;&#xA;<p>So let say I want to change this database to CUSTOMER table(take it as a different database). This will throw an error because CUSTOMER table will not have ""select * from ORDER where Status = 'ACCEPTED';""</p>&#xA;&#xA;<p>I've changed database, but wouldn't I still have to go back to my code and change the sql script?</p>&#xA;&#xA;<p><strong>My Attempt to resolve this issue</strong></p>&#xA;&#xA;<ol>&#xA;<li><p>So instead of hard coding my sql script in java ""select * from ORDER where Status = 'ACCEPTED';""</p></li>&#xA;<li><p>I created a system environment variable and set it as sqlScript with value of select * from ORDER where Status = 'ACCEPTED'</p></li>&#xA;<li><p>Then in java I called the env variable String sqlScript= System.getenv(""sqlScript"");  </p></li>&#xA;<li><p>So now instead of going back into java to change sql script, user can change it through environment variables.</p></li>&#xA;</ol>&#xA;&#xA;<p>this is a very dirty method to go around my issue, what would be a better alternative?</p>&#xA;&#xA;<p>I know my logic of understanding is really wrong. Please guide me to the right path.</p>&#xA;"
47630168,Inter-service communication with Spring Boot and OAuth2,2017-12-04 09:30:19,<spring><oauth-2.0><microservices>,2,691,0,1.0,1,"<p>I am working on a micro-service architecture using Spring Boot. We have implemented OAuth2 in a Auth Server. </p>&#xA;&#xA;<p>My question is - If two microservices want to communicate what should be the best way?</p>&#xA;&#xA;<p>As of now, I have discovered below options:</p>&#xA;&#xA;<ol>&#xA;<li><p>If each microservice is verifying the token then we can pass the same token. But the problem is - in between same token can be expired.</p></li>&#xA;<li><p>If we use client_credentials grant then there we are having two issues: one is, we need to send the username in next microservice. Another one is, we need to request two times - first for getting the access token, next for actual call.</p></li>&#xA;<li><p>If we do the token verification in API gateway only (not in microservices) then from the API gateway we need to send the username in every microservices. And microservices implementation needs to be changed to accept that param/header.</p></li>&#xA;</ol>&#xA;&#xA;<p>Please suggest which option should I pick and if there is any better option please let me know.</p>&#xA;&#xA;<p>Thanks in advance.</p>&#xA;"
45390260,What things should I consider to split my Monolithic nodeJs app to Microservice architecture?,2017-07-29 14:16:27,<node.js><microservices>,1,461,3,1.0,1,"<p>I'm trying to build Restful API's using NodeJs for a e-commerce application with a minimal functionality like User Accounts, Products, Inventory System, Cart/ Orders, Payments, Wallet/Credit, Delivery Management, Notifications etc.</p>&#xA;&#xA;<p>I wanted to implement this using a microservice architecture.</p>&#xA;&#xA;<p>I do not want to use a any framework, I want to explore and learn myself. </p>&#xA;&#xA;<p>How should I start?</p>&#xA;&#xA;<p>1) On what parameters should I choose a microservice architecture.</p>&#xA;&#xA;<p>2) How should I use the common ""terms"" like user model, or (products, inventory and orders).</p>&#xA;&#xA;<p>3) Should I build full monolithic App first and then take out the heavy parts out of it, one by one?</p>&#xA;&#xA;<p>A basic guideline that can put me in direction will be very helpful. I'll really appreciate and thank for helping on this subject.</p>&#xA;"
45275679,Sharing code in Microservices,2017-07-24 08:28:19,<java-ee><architecture><jax-rs><microservices>,1,301,8,0.0,1,"<p>We have two services. However, in the past, these two services were one service, but have been split due to differing traffic requirements.</p>&#xA;&#xA;<p>The services are consumed by two kinds of clients; other services and UI clients (web, desktop and mobile).</p>&#xA;&#xA;<p>Consumers of service 1: Services, </p>&#xA;&#xA;<ol>&#xA;<li>Use a very limited number of exposed endpoints (<code>addInput</code>, <code>removeInput</code>).</li>&#xA;<li>Generates high traffic.</li>&#xA;</ol>&#xA;&#xA;<p>Consumers of service 2: UI clients,</p>&#xA;&#xA;<ol>&#xA;<li>Using a large number of exposed endpoints</li>&#xA;<li>Generating less traffic.</li>&#xA;</ol>&#xA;&#xA;<p>Currently, they are sharing code but as far as I can figure out micro-services should not share base code. Therefore we believe something is wrong using this approach.</p>&#xA;&#xA;<p>what are the key issues to understand in order to solve this kind of micro-services architecture issues?</p>&#xA;"
40737349,Right place to do the service composition in API world?,2016-11-22 08:49:46,<microservices><aws-api-gateway><apigee><kong>,3,515,0,0.0,1,"<p>I am working in an environment where API is becoming a by default standard and we have a lot of micro services available... but still not able to meet the requirement of my customers...</p>&#xA;&#xA;<p>My customer demands a mix and match of data which I need to offer by writing new compositions and further host them as services.... </p>&#xA;&#xA;<p>1) What is the right platform to do this composition, gateways or host them on a dedicated paas instances?</p>&#xA;&#xA;<p>2) The moment I start going for composition, I end up paying for http overhead compared to get data directly from database</p>&#xA;&#xA;<p>Any help will be helpful</p>&#xA;"
45751211,Automated tests on contracts between microservices?,2017-08-18 07:45:16,<c#><api><integration-testing><microservices><contract>,2,258,4,0.0,1,"<p>Say we have a CreditCardService microservice that depends on a ThreeDSecureService microservice, communicating using JSON.</p>&#xA;&#xA;<p>Minor changes in the API (or even implementation) of the ThreeDSecureService could silently break the CreditCardService (and other potential clients). So, we would like automated tests.</p>&#xA;&#xA;<p>I see two flawed approaches, and am wondering how to improve.</p>&#xA;&#xA;<ol>&#xA;<li>Integration testing in ThreeDSecureService.Tests.</li>&#xA;</ol>&#xA;&#xA;<p>The accompanying test project of ThreeDSecureService could have an integration test with a fixed JSON input. Faking out any dependencies, it could run an otherwise complete call for that input, confirming that the service swallows the input.</p>&#xA;&#xA;<p>The problem here is that if someone fails to realize how their changes could break clients, they are almost as likely to 'fix' the tests to match their changes.</p>&#xA;&#xA;<ol start=""2"">&#xA;<li>Integration testing in CreditCardService.Tests.</li>&#xA;</ol>&#xA;&#xA;<p>The <em>client</em> is the one that actually wants to test assertions about ThreeDSecureService's expected input. However, that would require the client solution to include the ThreeDSecureService project, as well as any projects it depends on. This would negate many of the advantages we get from using microservices!</p>&#xA;&#xA;<p><strong>How do we make assertions from the client (safeguarding the dependency) without breaking the loose coupling we get from using microservices?</strong></p>&#xA;"
45673863,Communication between Spring microservices,2017-08-14 11:49:01,<java><spring><api><spring-mvc><microservices>,2,664,4,0.0,1,"<p>I am still learning microservices and I am asking myself, how do we secure our rest-points? I use the famous framework Spring Boot which extends from Spring. What is the best or most used pattern to secure the endpoints of a rest API?</p>&#xA;&#xA;<p>When I use Spring Security with oAuth2, I always need to send the credentials in the body of the request. Is there an approach without the credentials and which is easier to implement? Like API-Tokens?</p>&#xA;&#xA;<p>I always prefer practical tutorials.</p>&#xA;"
45642575,microservices or SOA: how to respond one specific request,2017-08-11 19:32:36,<architecture><soa><microservices>,2,137,5,0.0,1,"<p>I am interested in microservices and SOA. I read some tutorials. This is my understanding SOA. The API gateway receives lots of requests (requestA, requestB, ...) and put requests in messaging queues. Micro-services will consume the events in the messaging queues and do some processing. My question is after processing, how the response can be returned to requests (responseA to requestA, responseB to requestB).</p>&#xA;&#xA;<p>I am not sure whether my understanding is right or wrong and whether messaging is used in every architecture. </p>&#xA;&#xA;<p>Anyone can give me more details/examples how to decouple/connect the API gateways and the microservices. How to respond to requests? should the connection between API gateways and clients kept alive?</p>&#xA;&#xA;<p>Sorry if my question is not clear. I am confused and have no idea how to understand each concept.</p>&#xA;&#xA;<p>Any comment welcomed. Thanks</p>&#xA;"
50889657,Microservice synchronous communication - service to service or message broker,2018-06-16 16:26:32,<spring><spring-boot><apache-kafka><microservices>,2,53,0,2.0,1,"<p>I am developing a series of microservices using Spring Boot and Kafka. For asynchronous communication, I am using Kafka which is working well. </p>&#xA;&#xA;<p>I have a use case where I require synchronous communication between two microservices (a user registers a profile via the user profile service which needs to create an auth account in the auth microservice). </p>&#xA;&#xA;<p>Should I just call the auth service directly (service to service communication) or should I use Kafka?</p>&#xA;&#xA;<p>Any examples or best practise advice would be appreciated. </p>&#xA;"
50759872,Should I ignore the guidance and avoid putting validation in the command objects?,2018-06-08 11:41:08,<c#><domain-driven-design><microservices>,1,95,12,0.0,1,"<p>I am using CQRS.  Everywhere I read tells me to put validation logic in the command objects.  For example, see this link: <a href=""https://lostechies.com/jimmybogard/2016/04/29/validation-inside-or-outside-entities/"" rel=""nofollow noreferrer"">https://lostechies.com/jimmybogard/2016/04/29/validation-inside-or-outside-entities/</a></p>&#xA;&#xA;<p>Please see the command below (taken from the link):</p>&#xA;&#xA;<pre><code>public class ChangeNameCommand { &#xA;   [Required] &#xA;   public string FirstName { get; set; } &#xA;   [Required] &#xA;   public string LastName { get; set; } &#xA; } &#xA;</code></pre>&#xA;&#xA;<p>and the Business Object below (also taken from the link - note that I have changed the the parameter passed to the Customer constructor from a class to an interface):</p>&#xA;&#xA;<pre><code>public class Customer &#xA;{ &#xA;   public string FirstName { get; private set; } &#xA;   public string LastName { get; private set; } &#xA;&#xA;   public void ChangeName(IChangeNameCommand command) { &#xA;     FirstName = command.FirstName; &#xA;     LastName = command.LastName; &#xA;   } &#xA; } &#xA;</code></pre>&#xA;&#xA;<p>In my case the commands are stored in one class library and the business objects in others (because the commands are shared by multiple microservice type projects).  If I follow the guidance (and put the validation in the commands) then I believe there is nothing to stop a developer doing this:</p>&#xA;&#xA;<pre><code>public class ChangeNameCommandWithoutValidation : IChangeNameCommand { &#xA;   public string FirstName { get; set; } &#xA;   public string LastName { get; set; } &#xA; } &#xA;</code></pre>&#xA;&#xA;<p>and then passing the command (without the validation) to the domain object.  In this case I believe the Domain Object has no control what is passed to it?</p>&#xA;&#xA;<p>Therefore should I be going against all of the guidance I can find and do the validation in the domain object? I believe I should do this because the commands are in a separate class library to the domain objects.  Have I understood this correctly?</p>&#xA;&#xA;<p>I believe this question is also relevant when passing an event to the customer domain object (when using event sourcing).</p>&#xA;"
30053782,"Microservice architecture, authentication and other services",2015-05-05 13:02:18,<java><web-services><api><amqp><microservices>,1,648,0,0.0,2,"<p>I m studying the micro-services architecture, and I m have a question.</p>&#xA;&#xA;<p>Admitting that I have multiple services on different host like following :</p>&#xA;&#xA;<ul>&#xA;<li>Authentication service on <a href=""http://80.80.80.80:9000/"" rel=""nofollow"">http://80.80.80.80:9000/</a></li>&#xA;<li>Billing service on <a href=""http://90.90.90.90:1234/"" rel=""nofollow"">http://90.90.90.90:1234/</a></li>&#xA;<li>Planning service on <a href=""http://70.70.70.70:7412/"" rel=""nofollow"">http://70.70.70.70:7412/</a></li>&#xA;</ul>&#xA;&#xA;<p>My question is, when a user request on the gateway, he sends an access token (stateless, oauth2.0, whatever), then the gateway asks the authentication service, and if the user exists and has permissions, he access the ressources on another service.</p>&#xA;&#xA;<p>That's okay, but what if I try to call directly the BillingService from his host ? You can tell me that the port is closed, and I agree with that.</p>&#xA;&#xA;<p>But does it mean that they are port allowed only from a certain host to another ? Meaning that the billing service on port 1234 is allowed only from the gateway machine ?</p>&#xA;&#xA;<p>Am I missing something ?</p>&#xA;&#xA;<p>Thanks for advance</p>&#xA;"
30649582,Normalized or Denormalized Data in Microservices and Service Composition,2015-06-04 16:43:12,<domain-driven-design><soa><composition><microservices>,3,660,2,1.0,2,"<p>So our development team has been working towards Microservices for the past 6-8 months and have picked up a lot of steam. </p>&#xA;&#xA;<p>We have experienced several <code>gotcha</code> moments in that time, and are humble enough to know that we are in for many more as we move closer to moving our platform to production.</p>&#xA;&#xA;<p>One area that I can't quite put my finger on is how we are to treat our data between our service boundaries. I hear a lot of statements form large companies that have successfully implemented Microservices, but I can never seem to get straight advice and reasoning.</p>&#xA;&#xA;<p><strong>Specifically, given two service domains  <code>User</code> and <code>Contacts</code>,and assuming that a <code>User</code> has a <code>Contact</code> object associated with it, what are the options for each of these two service domains in regards to managing their own data?</strong></p>&#xA;&#xA;<p><strong>Should the <code>User</code> have a <code>ContactID</code> stored with it, or should it store the entire <code>Contact</code> object?</strong></p>&#xA;&#xA;<p>I have seen many reliable service oriented development teams (Netflix,Amazon,Nike,etc) make statements such as the following:</p>&#xA;&#xA;<p><strong>""Normalization is the root of all evil...""</strong></p>&#xA;&#xA;<p><strong>""Break all that is shared...""</strong></p>&#xA;&#xA;<p><strong>""Share nothing...""</strong></p>&#xA;"
32996097,Single Sign On + Microservices,2015-10-07 15:17:12,<java><spring><oauth-2.0><microservices>,1,654,0,2.0,2,"<p>I have a couple web apps which I will try to convert in microservices (In the future maybe I will have more). Before this, I would like to create a microservice for authentication and authorization which permits SSO.</p>&#xA;&#xA;<p>I read a lot about <a href=""http://jasig.github.io/cas/4.1.x/index.html"" rel=""nofollow"">CAS</a> but I have the feeling that seems an old solution and I don't know if it is a good idea for microservices' architecture.</p>&#xA;&#xA;<p>On the other hand I have been researching about Oauth2, I know it is only for authorizations (but you need to be authenticated for that) so.. maybe it could be a good option. Also I have found a good guide for implement <a href=""https://spring.io/guides/tutorials/spring-security-and-angular-js/#_sso_with_oauth2_angular_js_and_spring_security_part_v"" rel=""nofollow"">Oauth2 SSO with Spring</a>. However Oauth2 is for third-party so.. neither know if it is the best solution.</p>&#xA;&#xA;<p>As you see, I'm a bit confused . Other terms and tecnologies are in my head like SAML, OpenId... But I don't know which choose.</p>&#xA;"
33308154,Blue green deployment on microservices - how to route 10% of traffic to one one instance and remaining 90% of traffic to other instance,2015-10-23 17:25:00,<cloud><ibm-cloud><cloudfoundry><microservices>,3,188,0,0.0,2,<p>I have two instances of the same microservice in Bluemix(cloud Foundry). I want to route 90% of the traffic to one service and remaining 10% of the traffic to other service. Can you tell me how to do this in Bluemix</p>&#xA;
36877722,Microservices per DB table?,2016-04-26 23:41:28,<microservices>,1,631,4,0.0,2,"<ul>&#xA;<li>Person</li>&#xA;<li>NativeCountry</li>&#xA;<li>SpokenLanguages</li>&#xA;</ul>&#xA;&#xA;<p>Had a query about MIcroservice granularity. Will try to explain my query with an example.</p>&#xA;&#xA;<p>Assume I have above 3 tables in database, with Many to one relationship between Person -> NativeCountry table. One to Many relationship between person -> LanguagesSpoken in database.</p>&#xA;&#xA;<p>Front end Application is suppose do CRUD operation on person entity and will also have capability to retrieve people based on nativecountry or spokenlanguage.</p>&#xA;&#xA;<p>Does it makes sense to develop 3 independent microservices for each of the entities and then use Aggregator Microservice at upper layer to build combined data for UX layer or I should think of combining those to build just single microservice?</p>&#xA;"
40296598,Micro-services approach: Isolation and decoupling,2016-10-28 01:27:44,<design><architecture><microservices>,1,163,3,0.0,2,"<p>I've to add a service to my Micro-services architecture and&#xA;my new services needs to compute data he's responsable of. These computations occurs at a relatively high frequency.</p>&#xA;&#xA;<p>In order to compute things, my new service needs to retrieve additional infos from another service (lets say from the same bounded context)</p>&#xA;&#xA;<p>The issue here is that all these calls on every computation might cause some performance issues.</p>&#xA;&#xA;<p>What do you think is the best approach to take here?&#xA;Is it a good idea to let my new service save a kind of snapshot of the additional infos it needs (asynchronous synchronisation with the other service) so that it doesn't have to perform all those calls every time it needs to compute. </p>&#xA;"
38964840,Text search for microservice architectures,2016-08-16 00:17:58,<elasticsearch><architecture><microservices>,1,1133,0,1.0,2,"<p>I am investigating into implementing text search on a microservice based system. We will have to search for data that span across more than one microservice. </p>&#xA;&#xA;<p>E.g. say we have two services for managing Organisations and managing Contacts. We should be able to search for organisations by contact details in one search operation.</p>&#xA;&#xA;<p>Our preferred search solution is Elasticsearch. We already have a working solution based on embedded objects (and/or parent-child) where when a parent domain is updated the indexing payload is enriched with the dependent object data, which is held in a cache (we avoid making calls to the service managing child directly for this purpose). </p>&#xA;&#xA;<p>I am wondering if there is a better solution. Is there a microservice pattern applicable to such scenarios?</p>&#xA;"
39134238,Client authentication in microservices using JWT and OpenID Connect,2016-08-24 22:57:09,<api><authentication><jwt><microservices>,1,994,0,1.0,2,"<p>I've some questions regarding authentication in a microservices architecture. I've right now a monolithic application and my goal is to split the application in small microservices.</p>&#xA;&#xA;<p>My bigest problem is for authentication (for now). After reading a LOT a documentation, It seems that the best solution is to use OpenID Connect to authenticate an user to retrieve a JWT that can by passed with the request to the microservices. </p>&#xA;&#xA;<p>Also, to avoid having multiple endpoints, you can deploy and API Gateway to have only one endpoint for the end user. Ok, so now I've two questions with this architecture.</p>&#xA;&#xA;<p>The standard flow for authentication will be :</p>&#xA;&#xA;<p>An user contact my identity server in OpenID Connect with the implicit flow and get the id_token (JWT) and also the access_token. The user can now contact my API with this access_token. The API Gateway will valide the access_token with the identity server and also retrieve the JWT to add it to the sub request to the microservice API. </p>&#xA;&#xA;<p>1/ How the API Gateway can get the JWT from the access_token? From what I red from the documentation (<a href=""http://openid.net/specs/openid-connect-core-1_0.html"" rel=""nofollow"">http://openid.net/specs/openid-connect-core-1_0.html</a>), It can contact the ""/userinfo"" endpoint but It will get just the JSON format not the JWT...</p>&#xA;&#xA;<p>2/ I want to allow authenticated calls between my microservices. So each microservice needs to be able to generate a JWT to contact other microservices directly. My first thought was to contact the identity server. But with the OAuth2 Client Credentials flow, I don't retrieve a id_token or a JWT. Just a classic OAuth2 access token without JWT. My second thought was that the microservice can directly sign its own JWT with a certificate issued by the same PKI as the one used by the identity server. That mean that a JWT can be sign by several certificats but from the same private PKI. When a microservice receives a JWT, It needs to be able to identify witch certificat was used to sign the JWT. I don't find anything on the RFC regarding this problem. I can add my own private claim in the token to have the certificate but after several days of browsing the web without seeing this kind of solution, I'm wondering if I'm not on the wrong path... To sum up, how can i perfom ""User to service"" authentication AND alors ""service to service"" authentication in JWT?</p>&#xA;&#xA;<p>Thank you very much!</p>&#xA;"
38966184,Should business logic be contained in individual services in a micro service ecosystem?,2016-08-16 03:26:29,<architecture><microservices>,2,1341,2,0.0,2,<p>Let's say I just have 2 services <strong>Billing</strong> and <strong>Orders</strong> and one API gateway which may fan out requests to these services for billing or creating orders. </p>&#xA;&#xA;<p>Given this new order scenario:</p>&#xA;&#xA;<ol>&#xA;<li>user creates an order (request -> Rest API)</li>&#xA;<li>User validation has to be done</li>&#xA;<li>Order entity has to be created</li>&#xA;<li>Billing entity has to be created </li>&#xA;<li>Notification has to be done to notify the user</li>&#xA;</ol>&#xA;&#xA;<p>Where should my application logic sit ? and should the calls to these services be done synchronously (within the rest api) ? or each service should be responsible for calling another ? eg:</p>&#xA;&#xA;<p>New user order request -> Rest API -> calls order service to create order -> (if successful) Rest API -> (if successful) calls the billing service</p>&#xA;&#xA;<p><strong>Or</strong></p>&#xA;&#xA;<p>New user order request -> Rest API -> calls order service to create order -> returns the response. Then order service takes of things from there on asynchronously ?</p>&#xA;&#xA;<p>Thanks!</p>&#xA;
30237292,Is the Microservices architectural Pattern similar to EJB 1.0?,2015-05-14 12:22:28,<ejb><components><microservices>,2,1834,0,0.0,2,"<p>What we see with microservices is an isolated component, communicating over a protocol over the wire to a parent consumer of that component. </p>&#xA;&#xA;<p>We see a very similar pattern with EJB 1.0. </p>&#xA;&#xA;<p>My question is: <strong>Is the Microservices architectural Pattern similar to EJB 1.0?</strong></p>&#xA;"
34973165,How to share communication models between Akka microservices?,2016-01-24 07:12:41,<scala><akka><microservices>,1,327,0,2.0,2,"<p>We are using Akka as our microservice platform. We are not going to support non-JVM platforms for now, so we use direct messaging between Akka actors as communication platform.</p>&#xA;&#xA;<p>This way, our communication units are just <strong>case classes</strong>. Do we have to repeat ourselves and define the case classes for each microservice or we can put all message classes into a single project and share it between microservice projects?</p>&#xA;&#xA;<p>I know that sharing models between microservices is not recommended but as we use Akka communication protocol, I'm not sure if creating the same communication case class in multiple projects is correct. What if a microservice change it's model and the others don't? How can we handle versioning and upgrade to new versions of the communication models without breaking the whole system.</p>&#xA;"
50651256,microservices - is it one service per CRUD,2018-06-01 21:34:29,<node.js><amazon-web-services><aws-lambda><microservices>,4,76,0,1.0,2,"<p>Very new to microservices...  </p>&#xA;&#xA;<p>If I have an API that deals with CRUD for customers and orders, does this translate to 2 microservices one for customers and one for orders?</p>&#xA;&#xA;<p><strong>Customer API</strong></p>&#xA;&#xA;<pre><code>CreateCustomer&#xA;ReadCustomer&#xA;UpdateCustomer&#xA;DeleteCustomer&#xA;</code></pre>&#xA;&#xA;<p><strong>Order API</strong></p>&#xA;&#xA;<pre><code>CreateOrder&#xA;ReadOrder&#xA;UpdateOrder&#xA;DeleteOrder&#xA;</code></pre>&#xA;"
50672490,What's the right way to gather data from different microservices?,2018-06-04 01:37:39,<node.js><design><architecture><microservices>,2,64,1,2.0,2,"<p>I'm having a problem understanding how basic communication between microservices should be made and I haven't been able to find a good solution or standard way to do this in the other questions. Let's use this basic example.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/pOCGv.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pOCGv.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>I have an invoice service that return <strong>invoices</strong>, every invoice will contain information(ids) about the user and the products. If I have a view in which I need to render the invoices for a specific user, I just make a simple request.</p>&#xA;&#xA;<pre><code>let url = ""http://my-domain.com/api/v2/invoices""&#xA;let params = {userId:1}&#xA;request(url,params,(e,r)=&gt;{&#xA;  const results = r // An array of 1000 invoices for the user 1&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Now, for this specific <strong>view</strong> I will need to make another request to get all the details for each product on each invoice.</p>&#xA;&#xA;<pre><code>results.map((invoice)=&gt;{&#xA;   invoice.items.map((itemId)=&gt;{&#xA;      const url=`http://my-domain.com/api/v2/products/${itemId}`&#xA;      request(url,(e,r)=&gt;{&#xA;       const product = r&#xA;       //Do something else.....&#xA;      });&#xA;   });&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>I know the code example is not perfect but you can see that this will generate a huge number of requests(at least 1000) to the product service and just for 1 user, now imagine if I have 1000 users making this kind of requests.</p>&#xA;&#xA;<p>What is the right way to get the information off all the products without having to make this number of requests in order to avoid performance issues?.</p>&#xA;&#xA;<p>I found some workarounds for this kind of scenarios such as:</p>&#xA;&#xA;<ol>&#xA;<li>Create an API endpoint that accepts a list of IDs in order to make a single request.</li>&#xA;<li>Duplicate the information from the Product service within the invoice service and find a way to keep them in sync.</li>&#xA;</ol>&#xA;&#xA;<p>In a microservices architecture are these the right ways to deal with this kind of issues? For me, they look like simple workarounds.</p>&#xA;&#xA;<p><strong><em>Edit #1: Based on Remus Rusanu response.</em></strong></p>&#xA;&#xA;<p>As per Remus recommendation, I decided to isolate my services and describe them a little bit better.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/BHosb.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/BHosb.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>As shown in the image above the microservices are now isolated(in specific the Billing-service) and they now are the owners of the data. By using this structure I ensure that Billing-service is able to work even if there are async jobs or even if the other two services are down.</p>&#xA;&#xA;<p>If I need to create a new invoice, I can call the other two microservices(Users, Inventory) synchronously and then update the data on the ""cache"" tables(Users, Inventory) in my billing service.</p>&#xA;&#xA;<p>Is it also good to assume these ""cache"" tables are read-only? I assume they are since only the user/inventory services should be able to modify this information to preserve isolation and authority over the information.</p>&#xA;"
38178535,How to share the web API controllers with microservice,2016-07-04 06:55:40,<c#><asp.net-web-api><microservices><asp.net5>,1,1301,0,0.0,2,<p>We have an existing Web API that is built using ASP.Net 5 framework. We plan to develop new micro services now. We are trying to re-use the code of existing API as far as possible. Our old API (monolithic) or our new micro services will be deployed based on customer need.</p>&#xA;&#xA;<p>We are finding it tough to share the Controllers between monolithic API and micro services. Thought of using 'add as link file' but that is not working in case of controller files. Any other ways to share the controllers?</p>&#xA;
40081965,Where lookup tables should be placed in a microservices architecture?,2016-10-17 08:45:02,<microservices><lookup-tables>,1,268,3,1.0,2,"<p>In a microservices architecture, each microservice has its own database and tables should not be duplicated in different databases.&#xA;But there are tables, like lookup tables (called also reference tables), that are needed by multiple microservices.&#xA;Should we put lookup tables in each microservice database, or is it better to create a new microservice with a database holding all the lookup tables ?</p>&#xA;"
46803321,Is it wrong to use sessions in Microservices?,2017-10-18 05:23:31,<java><spring-boot><spring-security><microservices><spring-session>,1,1139,1,1.0,2,"<p>I have read that, session is against the concept of RESTfulness.</p>&#xA;&#xA;<p><a href=""https://stackoverflow.com/q/6068113/1358676"">Do sessions really violate RESTfulness?</a></p>&#xA;&#xA;<p><a href=""https://stackoverflow.com/questions/32741333/session-management-in-microservices/32743085#32743085"">Session Management in microservices</a></p>&#xA;&#xA;<p><a href=""https://stackoverflow.com/questions/319530/restful-authentication"">RESTful Authentication</a></p>&#xA;&#xA;<p>Since Microservices inevitably use <code>REST</code>, does the same apply here as well? If so, then why do we have Spring session? It even lists 'Spring Session allows providing session ids in headers to work with <code>RESTful</code> APIs' as one of its features.</p>&#xA;"
38508387,"What is SOA, Microservices, REST and Web Services ""in plain English""?",2016-07-21 15:30:49,<web-services><rest><soa><microservices>,2,1920,0,1.0,2,"<p>Could somebody explain SOA, Microservices, REST and Web Services in simple terms. It is really fascinating and confusing me. Any help would be appreciated.</p>&#xA;"
45111662,Microservices with common users table,2017-07-14 21:11:33,<architecture><soa><microservices>,3,244,0,1.0,2,<p>Is it possible to design a microservice based  architecture on which each microservice have separate independent database and a common users table?</p>&#xA;
45007694,Microservices - Database compatibility in between old and new versions,2017-07-10 08:56:19,<database><rest><architecture><microservices>,1,175,3,1.0,2,"<p>I am trying to dive into Microservice architecture to start coding some of small pieces of logic for my company.</p>&#xA;&#xA;<p>I know one of microservices concerns is about the database handling (each microservice must have its separated db schmema). So I am looking for pieces of advice or experiences about to move out from an old to new microservice version.</p>&#xA;&#xA;<p>So lets say I have a REST API endpoint <code>ms/v1/whatEver</code> which is running today on prod. After a week we decide to go live with the next version of it. So that we create a <code>ms/v2/whatEver</code> which has some new columns and data types in the entities envolved in this service. Thus in order to not force all clients to migrate immediately we want to keep both versions up and running till users move in progressively to <code>v2</code>.</p>&#xA;&#xA;<p>A couple of scenarios come up in to my mind if we have both version up and running (which actually is my main doubt and the reason of this post):</p>&#xA;&#xA;<ol>&#xA;<li><p>Should they read/write in the same DB instance, hence <code>v1</code> implementation must be adapted to match with the new schema structure of <code>v2</code>?</p></li>&#xA;<li><p>Should they read/write in a separate DB instance. So in any manner both DBs have to be synchronised till the day we decide to turn off <code>v1</code> to guarantee we do not miss any data (eventual consistency)? So my question here is how to accomplish that (throughout framework, queue messaging, or something..)</p></li>&#xA;<li><p>Or, code forwarding every <code>v1</code> request (inside of it) to <code>v2</code> which is going to be the owner of the already migrated new schema (unique DB instance)?</p></li>&#xA;</ol>&#xA;&#xA;<p>I have been reading a couple of books like <a href=""https://developers.redhat.com/promotions/migrating-to-microservice-databases/"" rel=""nofollow noreferrer"">Migrating to Microservices Databases - Red Hat</a> but they are written in concept terms but nothing specific with technologies or best things to do whit this. So that my post. </p>&#xA;&#xA;<p>I really appreciate your opinions.&#xA;Thanks</p>&#xA;"
48961000,Why shared libraries between microservices are bad?,2018-02-24 08:43:10,<interface><architecture><shared-libraries><microservices><distributed-computing>,1,967,0,0.0,2,"<p>Sam Newman states in his book <em>Building Microservices</em></p>&#xA;&#xA;<blockquote>&#xA;  <p>The evils of too much coupling between services are far worse than the problems caused by code duplication</p>&#xA;</blockquote>&#xA;&#xA;<p>I just don't understand how the shared code between the services is evil. Does the author mean the <em>service boundaries themselves</em> are poorly designed if a need for a shared library emerges, or does he really mean I should duplicate the code in the case of common business logic dependency? I don't see what that solves.</p>&#xA;&#xA;<p>Let's say I have a shared library of entities common to two services. The common domain objects for two services may smell, but another service is the GUI to tweak the state of those entities, another is an interface for other services to poll the state for their purpose. Same domain, different function.</p>&#xA;&#xA;<p>Now, if the shared knowledge changes, I would have to rebuild and deploy both services regardless of the common code being an external dependency or duplicated across the services. Generally, same concerns all the cases for two services depending of the same article of the business logic. In this case, I see only harm of duplication of the code, reducing the cohesion of the system.</p>&#xA;&#xA;<p>Of course, <em>diverging</em> from the shared knowledge may cause headaches in the case of shared library, but even this could be solved with inheritance, composition and clever use of abstractions.</p>&#xA;&#xA;<p>So, what does Sam mean by saying code duplication is better than too much coupling via shared libraries? </p>&#xA;"
37615250,Repository within domain objects,2016-06-03 13:07:27,<domain-driven-design><microservices>,2,285,3,0.0,2,"<p>I have seen lot of discussions regarding this topic but i couldn't get a convincing answer. The general advice is not to have repository inside a domain object.  What about an aggregate root? Isnt it right to give the root the responsibility to manipulate the composed objects? &#xA;For example, i have a microservice which takes care of invoices. Invoice is an aggregate root which has the different products. There is no requirement for this service to give details about individual products. I have 2 tables, one to store invoice details and other to store products of those invoices. I have two repositories corresponding to the tables. I have injected product repository inside the invoice domain object. Is it wrong to do so? </p>&#xA;"
37634349,How can I handle large files processing via messaging queries in Microservices environment?,2016-06-04 19:45:51,<java><jms><ipc><microservices>,1,733,3,0.0,2,"<p>Many people suggest that the good way for organizing IPC (ImicroservicesC) is asynchronous communication via queries like Kafka and JMS. </p>&#xA;&#xA;<p>But what if I need to pass large data files between services?</p>&#xA;&#xA;<p>Suppose I have a Video Microservice and a Publisher Microservice. The first one receives videos from the user, verifies and sends them to Publisher for converting and publishing. It's oblivious video can be a very large file and it can overload messaging system (Kafka is not suitable for big messages at all). Of course, I can share one database for them and send video_id via Kafka, but it couples these services and its not a real microservices architecture anymore.</p>&#xA;&#xA;<p>Do you have similar situations in practice? How do you handle it?</p>&#xA;&#xA;<p>Thanks</p>&#xA;"
44886715,Should the Auth Server be combined with the User Service in a microservices architecture?,2017-07-03 13:23:23,<spring><authentication><oauth-2.0><microservices>,2,592,0,0.0,2,"<p>I am currently building a microservices based application in spring boot with the following services</p>&#xA;&#xA;<ul>&#xA;<li>Auth server (Distributes access tokens)</li>&#xA;<li>User service (User info like username, password, email, etc.)</li>&#xA;<li>Various other unrelated services</li>&#xA;</ul>&#xA;&#xA;<p>When a user sends their credentials to the auth server, the auth server should verify that they are correct and then return an access token. </p>&#xA;&#xA;<p>My question is, should I combine the auth server with the user service so looking up credentials is a simple database call, or should I keep them as separate applications and have them both point to the same shared database? Is there a better alternative?</p>&#xA;"
48209566,What to do when the queue is down?,2018-01-11 14:37:13,<architecture><queue><message-queue><microservices><amazon-sqs>,5,142,2,0.0,2,"<p>I have 2 microservices, <code>A</code> and <code>B</code>. When <code>A</code> receives a request from a user, it gets processed (store some things in the database) and a message is sent to a queue that is read by <code>B</code>.</p>&#xA;&#xA;<p>If the queue is down, my initial thought is to make the entire request fall over, rollback, and show an error to the user asking to try again later. Is it a bad practice?</p>&#xA;&#xA;<p>Would it be a better practice to store the messages in <code>A</code>'s database marked as <code>NOT_SENT</code> and have a job to send it later when the queue is up again? Or is it over-engineering?</p>&#xA;&#xA;<p>EDIT: the request to <code>A</code> needs to be synchronous, so the user knows its outcome, but they <strong>don't</strong> need to know yet the results of <code>B</code> processing the message, so it can be asynchronous.</p>&#xA;"
48294450,"Microservices, CQRS: Eventual consistency vs Strong consistency(Read after Write consistency)",2018-01-17 05:57:17,<microservices><cqrs><eventual-consistency>,3,910,4,1.0,2,<p>Using CQRS and Event store the choreography between microservices delivers an Eventual consistency where in the changes in one microservice take a bit to propagate to the other downstream systems(essentially other microservices) which are related.&#xA;What are the options if the data is so critical that both the microservices should have a strong consistency for the data? One option that i can think of is a write through Cache like a data grid but that would be very fragile specially in a distributed system.</p>&#xA;
40880443,Can micro services be applied to the front-end with JS?,2016-11-30 04:40:09,<javascript><angularjs><reactjs><frontend><microservices>,1,524,3,0.0,2,"<p>I have a project which requires various developers to build components / modules for an app at any given time.</p>&#xA;&#xA;<p>However, each component can be written in a different framework or library e.g. <code>URI/app1</code> is a search component written in React, and <code>URI/app2</code> is a results component written in AngularJS. </p>&#xA;&#xA;<p>I'm trying to find a way so that given a <code>URI</code> if <code>URI/subdomain</code> is served I can serve a module which is fully encapsulated (technology wise) from other sub paths &amp; the URI.</p>&#xA;&#xA;<p>Does something along these lines exist? Is there a methodology or approach which will allow an app to holistically serve sub-modules (not fragments of a single page, but rather full pages under a unique path) and remain isolated to other front-end code, but still allow data to be passed across the technologies used, so that a developer could essentially come in and create a component / page / module under a subpath using the technology of their choice and have it be accepted cohesively across the existing app written in potentially varying technologies?</p>&#xA;"
50455134,Can Software Architects predict of how microservice architectures will mature over time?,2018-05-21 19:05:24,<architecture><microservices><soa><software-design>,1,81,4,1.0,2,"<p>In March 2014 ( just over four years ago at the time of this question ), James Lewis and Martin Fowler wrote: </p>&#xA;&#xA;<blockquote>&#xA;  <p>Many people believe that [decay of modularity over time] is less likely with microservices, since the service boundaries are explicit and hard to patch around. Yet until we see enough systems with enough age, we can't truly assess how microservice architectures mature.</p>&#xA;</blockquote>&#xA;&#xA;<p>Now that many MSAs have been built by a variety of businesses, do we have a general understanding of the maturation of these architectures? What do we know about what works as time goes forward? What do we know about what does not work?</p>&#xA;"
34406896,How to share code between micro services?,2015-12-22 00:57:07,<architecture><microservices>,2,1258,3,1.0,2,"<p>For example, I have a project which has 4 micro services: client-web, admin-web, client-api, admin-api.</p>&#xA;&#xA;<p>These four micro services should share one DB code,  should I make the DB code as a submodule of git and use it in each micro service?</p>&#xA;&#xA;<p>does it against micro service principle? </p>&#xA;"
47380189,Microservices governance vs SOA,2017-11-19 18:04:35,<architecture><domain-driven-design><microservices><soa>,2,475,5,2.0,2,"<p>I was working in SOA goverened projects for the last 10 years and now we switch to a Microservices architecture ones.</p>&#xA;&#xA;<p>The good thing in SOA was that we had a Canonical Data Model where which was built with some effort indeed but at the end all systems ended up speaking the same 'language' and communication was centralized via a Service Bus.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/QNcwq.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/QNcwq.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>In a Microservice architecture teams are independent and as there is no service bus wonder how all this intergration points will work.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/37mGm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/37mGm.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>1) Is there a way to enfore some contracts like there is WSDL in SOA (for SOAP) ?</p>&#xA;&#xA;<p>2) If team developing service B is autonoumous and deploys a new service it has to keep the old version as well no ? In SOA this problem was solved that on the service bus we kept v1 and a we did a transformation to v2.It was trasparent for consumers that service B has a new version.</p>&#xA;&#xA;<p>3) What type of govenrnance you would put in place in case the number of microservices is quite high like in the below picture knowing the teams have to be as much as possible autonoumous ('agile')?</p>&#xA;&#xA;<p>I am not looking fot the best answer , I am interested in different opinions as there is no magic solution here.</p>&#xA;&#xA;<p>Thanks. </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/k2mB3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/k2mB3.png"" alt=""enter image description here""></a></p>&#xA;"
43418403,Microservices and coupling,2017-04-14 19:57:55,<spring-mvc><microservices><coupling>,2,324,3,0.0,2,"<p>I am trying to use some kind of microservice architecture. I am trying to use HTTP and JSON as a communication medium (I know better than to call it ReST). </p>&#xA;&#xA;<p>So, I'm using spring-mvc and I wanted to use a class as a <code>ResponseBody</code> on the called and as a <code>RequestBody</code> on the callee. So it so happens that I can duplicate and mirror the class on both the projects, or create a jar and include it in both.</p>&#xA;&#xA;<p>I see coupling in both cases, the first one is duplicate coupling and the other is (I'm sure it has a name) coupling. </p>&#xA;&#xA;<p>And the <code>Request</code> and <code>Response</code> models are not what the projects have in common. I am using event-driven architecture for both and the events are somewhat similar (kinda exactly the same). </p>&#xA;&#xA;<p>What should I do?</p>&#xA;"
48505946,Single Database backed Micro-server architecture?,2018-01-29 16:35:32,<architecture><microservices>,2,121,3,0.0,2,"<p>In an application I am planning to build, I am trying to decide an architecture for our server. One idea I had was to spawn multiple servers at different addresses like <code>orders.example.com</code>, <code>settings.example.com</code> etc, i.e. , one server process per component of the system, which will be backed by a single database cluster.</p>&#xA;&#xA;<p>I am wondering if this is a good idea, and what are the caveats of it, if anyone has ever used it ?</p>&#xA;"
48731168,How to apply a microservices architecture to a voting application?,2018-02-11 11:50:05,<node.js><microservices>,2,66,4,2.0,2,"<p>I am developing the FreeCodeCamp full stack voting application and would like to apply a microservices architecture. The user stories of the voting application are as follows:</p>&#xA;&#xA;<ul>&#xA;<li>As an authenticated user, I can keep my polls and come back later to access them.</li>&#xA;<li>As an authenticated user, I can share my polls with my friends.</li>&#xA;<li>As an authenticated user, I can see the aggregate results of my polls.</li>&#xA;<li>As an authenticated user, I can delete polls that I decide I don't want anymore.</li>&#xA;<li>As an authenticated user, I can create a poll with any number of possible items.</li>&#xA;<li>As an unauthenticated or authenticated user, I can see and vote on everyone's polls.</li>&#xA;</ul>&#xA;&#xA;<p>I am conceptualizing an architecture and come up with this:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/hn6Pe.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/hn6Pe.jpg"" alt=""Concept Architecture Voting App""></a></p>&#xA;&#xA;<p>The application is composed of 6 microservices:&#xA;1. UI&#xA;2. Aggregator&#xA;3. Authorization (login, logout)&#xA;4. Social Media (sharing)&#xA;5. Polls (with db)&#xA;6. Users (with db)</p>&#xA;&#xA;<p>Curious how a developer having built microservices would break down these user stories into microservices. Thank you!</p>&#xA;"
41039545,How to manage common frontend components on microservices,2016-12-08 12:27:36,<architecture><frontend><single-page-application><microservices><orchestration>,1,438,3,2.0,2,"<p>How to manage frontend on microservices, especially when you have common components? I found a few solutions on the internet but all of them have some drawbacks and none of them is a good fit for us.</p>&#xA;&#xA;<p>Let me clearify my problem. We have over 5 groups of people working on different microservices in a large single project. And almost all of them has some common,shared components on frontend. And these components are huge as they are already a different project but totally shared. Now how to manage these shared components or should we duplicate them?</p>&#xA;&#xA;<p>First solution I found is to make those components shared and maintain from a single point like node packages and npm install when needed from different groups. But at this point the microservice approach is broken since everybody will be dependent to these components and no one will be able to maintain as soon as they need, not good. And very hard to maintain since in the future different groups may different needs from the component.</p>&#xA;&#xA;<p>Second is to duplicate the components according to each project and develop within the microservice group but this time it becomes very frankenstein and the common concepts that we should obey are hard to catch. It's a really enterprise project that all components should match in terms of behaivor and look to the other components reoccured in the project. </p>&#xA;&#xA;<p>So we need a frontend solution for microservices that should be suitable for an enterprise project which is needed to obey same rules(like font size,color,actions etc..) at different points as it is monolithly written, but maintainable by different groups at the same time.</p>&#xA;&#xA;<p>How can we balance that or can we?</p>&#xA;&#xA;<p>Thanks to @kayess: Shortly how to apply shared kernel on microservices as the teams will not be dependent to each other?</p>&#xA;"
39457873,How to include CorrelationId in microservice architecture?,2016-09-12 19:57:35,<microservices><asp.net-core-webapi>,1,777,4,1.0,2,"<p>I am creating a microservices architecture using ASP.NET Core web api. All the services are decoupled from each other, and may be deployed in different environments. Every service has its own logging. When requests flows through these services it could fail in any of the service, We need a way of tracing a series of events back to the source, even if it means traversing multiple services.<br>&#xA;So to handle this issue, the service that originates the request creates a CorrelationId and pass it to the next service. The 2nd service pass it to 3rd service and so on. If exception occurs the corresponding service will log the exception message along with CorrelationId.</p>&#xA;&#xA;<p>I wanted to know what would be a best place for the caller of the service to pass the correlationid? </p>&#xA;&#xA;<p>Should the caller pass correlationid in HttpHeader or should it pass it as a part method parameter something like below</p>&#xA;&#xA;<p><em>This is the service that is getting called</em></p>&#xA;&#xA;<pre><code> public class RequestDTO&#xA; {&#xA;    public string CorrelationId {get;set;}&#xA;    public string SomeOtherData {get;set;}&#xA; }&#xA;&#xA; public Service2Controller:Controller&#xA; {&#xA;    public Task&lt;in&gt; DoSomething(RequestDTO request)&#xA;    {&#xA;         // add the correlationid in current request Items collection&#xA;         // So global exception handling can access it and log it &#xA;         // along with the exception&#xA;&#xA;         HttpContext.Items.Add(""CorrelationId"", request.CorrelationId);&#xA;    }&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>in the approach above if there is an exception before this method is invoked, the CorrelationId will not be available for global exception handler for logging.</p>&#xA;&#xA;<p>Any suggestions? or alternate approach</p>&#xA;"
47145930,Microservices versioning best practices,2017-11-06 21:16:16,<architecture><versioning><microservices>,2,885,0,1.0,2,"<p>I read the Susan Fowler's book ""production ready microservices"" and in two places (until now) I found </p>&#xA;&#xA;<ul>&#xA;<li>(page 26) ""Avoid Versioning Microservices and Endpoints"", </li>&#xA;<li>""versioning microservices can easily become an organizational nightmare"" (page 27),</li>&#xA;<li>In microservice ecosystems, the versioning of microservices is discouraged(page 58)</li>&#xA;</ul>&#xA;&#xA;<p>Anyway, I used all types of versioning for all kind of different projects: git tag, deb package versioning, python packages versioning, http api versions and I never had very big problems to manage the project's versions. Beside of this I knew exactly to what version to roll out in case of some failures or bugs from customers.</p>&#xA;&#xA;<p>Anybody have any clue why in this book the microservice versioning is so blamed and what advises would you have regarding the topic?</p>&#xA;"
43664192,Do we create difference projects when implementing micro services architecture in spring,2017-04-27 17:19:09,<java><spring><spring-mvc><spring-boot><microservices>,1,99,5,0.0,2,"<p>I am confused with microservice architecture. I am not able to understand how to implement the microservice architecture in spring. In spring we use <code>@RestController</code> for Rest API. Let's say we have two rest controller like below</p>&#xA;&#xA;<pre><code>@RestController&#xA;@RequestMapping(""/user"")&#xA;public class UserService {&#xA;// this class will hanlder operations related to user&#xA;}&#xA;&#xA;@RestController&#xA;@RequestMapping(""/role"")&#xA;public class RoleService {&#xA;// this class will hanlder operations related to role&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Both rest controllers belong to one single project. Can we say our above structure is microservices? Or we have to create two projects one is <code>UserServiceProject</code> and another one is <code>RoleServiceProject</code>. In <code>UserServiceProject</code> we create Rest Controller for rest API of User operations. In <code>RoleServiceProject</code> we create Rest Controller for rest API of Role Operations. </p>&#xA;&#xA;<p>As microservices architecture says each service should be independently deployable. From this definition can we say that if we have 2 services we need to create two projects so that both projects can be independently deployable. </p>&#xA;&#xA;<p>Please also note both services share the same database and also there is a relationship between User and Role.</p>&#xA;"
43633659,What to use for microservices inter-communications .NET,2017-04-26 12:03:03,<.net><design-patterns><microservices>,1,875,11,0.0,2,"<p>Doing some research on splitting our monolith into micro-services and trying to understand/determine the best way for communications between services, or if I should even be communicating between services?</p>&#xA;&#xA;<p>Should each micro-service be a web service that only serves Http or should I be using a service bus to pass work requests around?</p>&#xA;"
45412334,API gateway and microservice authentication,2017-07-31 09:40:46,<microservices><api-gateway>,1,470,0,3.0,2,"<p>How API Gateway and Micro services works.</p>&#xA;&#xA;<p>Could anyone explain the basic flow of Micro service architecture with Gateway. I couldn't find the proper answer.</p>&#xA;&#xA;<p>Say we have auth server and customer micro service running on separate instances and in front of all the services we have an API gateway.</p>&#xA;&#xA;<p>My question is.</p>&#xA;&#xA;<p>when user try to log in using username and password, the API gateway call <strong>auth server</strong> and return the <strong>access token</strong> to user.</p>&#xA;&#xA;<p>Then user trying to access the specific url (/customers - customer micro service) that is running on separate instance.&#xA;what API Gateway do ?</p>&#xA;&#xA;<ol>&#xA;<li>validate the token with auth server and get the user id and pass the request to <strong>customer service with the user id</strong> ?</li>&#xA;</ol>&#xA;&#xA;<p>OR </p>&#xA;&#xA;<ol start=""2"">&#xA;<li>validate the token and pass the request to customer microservice <strong>with the access token</strong> ? and customer microservice responsible is to the check the user id (Make an HTTP call to auth server) ? </li>&#xA;</ol>&#xA;"
45544777,"NodeJS Microservices, combining data",2017-08-07 10:29:38,<javascript><node.js><redis><microservices>,1,147,13,1.0,2,"<p>I'm building a NodeJS platform that consist of several core 'parts' (users, messages and trading signals).</p>&#xA;&#xA;<p>So my idea is to create microservices for each of them, and it works pretty well.. But I can't get my head around how to 'join' data between the microservices (I'm a frontender originally.....)</p>&#xA;&#xA;<p>For example, I have 3 microservices.. Each with its own MongoDB, on its own machine complete isolated.. Imagine the common situation where the messages is retrieved from a single microservice, the message has a 'user_id' and I need to get the username and profilePicture to be combined in the retrieved message object..?</p>&#xA;&#xA;<p>I read a lot about using Redis, but it seems like a 'messaging' service to me, not much of a 'combine' service.. Can anyone help me through the darkness??</p>&#xA;&#xA;<p>Thanks!!</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/jQphv.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jQphv.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>I know its a very general question... But I just can't get a grip of what the 'best practice' is when combining data of multiple micro services..</p>&#xA;"
46581254,Microservices and service granularity,2017-10-05 08:37:47,<domain-driven-design><microservices>,3,110,4,1.0,2,"<p>I have never worked with microservices architecture before and there is something important that it is still not clear in what I am reading.</p>&#xA;&#xA;<p>In a microservice architecture a service is a single endpoint or a single module with several endpoints?</p>&#xA;&#xA;<p>Are the endpoints that are fine grained or the granularity is at a higher level? I thought at the beginning that the endpoints were fine grained and this is why there was the risk of making the API too chatty. </p>&#xA;&#xA;<p>I am now finding articles that say that in microservices architecture a service is associated to ""bounded context"". It seems to me that a bounded context needs more than a single endpoint in an API.</p>&#xA;"
50835738,Monolith to Microservices (What tasks are involved?),2018-06-13 11:09:31,<architecture><microservices>,3,100,1,1.0,2,"<p>I am curious of what tasks are involved in the transistion of a monolith site into microservices. What do you have to do to make it work, i.e. redirecting. To put this into practise what tasks are involved in the transistion of the following website? </p>&#xA;&#xA;<p><a href=""http://www.wehkamp.nl/"" rel=""nofollow noreferrer"">http://www.wehkamp.nl/</a></p>&#xA;&#xA;<p>In short, I understand what the transistion does but not what has to be done to make the transistion.</p>&#xA;"
34158847,Inter-microservices Communication using REST & PUB/SUB,2015-12-08 14:49:01,<rest><server><publish-subscribe><microservices>,3,925,0,1.0,3,"<p>This is still a theory in my mind.</p>&#xA;&#xA;<p>I'm rebuilding my backend by splitting things into microservices. The microservices I'm imagining for starting off are:<br/>&#xA;- Order (stores order details and status of each order)<br/>&#xA;- Customer (stores customer details, addresses, orders booked)<br/>&#xA;- Service Provider (stores service provider details, status &amp; location of each service provider, order(s) currently being processed by the service provider, etc.)<br/>&#xA;- Payment (stores payment info for each order)<br/>&#xA;- Channel (communicates with customers via email / SMS / mobile push)<br/></p>&#xA;&#xA;<p>I hope to be able to use PUB/SUB to create a message with corresponding data, which can be used by any other microservice subscribing to that message.</p>&#xA;&#xA;<p>First off, I understand the concept that each microservice should have complete code &amp; data isolation (thus, on different instances / VMs); and that all microservices should communicate strictly using HTTP REST API contracts.</p>&#xA;&#xA;<p>My doubts are as follows:</p>&#xA;&#xA;<ol>&#xA;<li><p>To show a list of orders, I'll be using the Order DB to get all orders. In each Order document (I'll be using MongoDB for storage), I'll be having a customer_id Foreign Key. Now the issue of resolving customer_name by using customer_id.<br/>&#xA;If I need to show 100 orders on the page and go with the assumption that each order has a unique customer_id associated with it, then will I need to do a REST API call 100 times so as to get the names of all the 100 customer_ids?&#xA;Or, is data replication a good solution for this problem?</p></li>&#xA;<li><p>I am envisioning something like this w.r.t. PUB/SUB: The business center personnel mark an order as assigned &amp; select the service provider to allot to that order. This creates a message on the cross-server PUB/SUB channel.<br/>&#xA;Then, the Channel microservice (which is on a totally different instance / VM) captures this message &amp; sends a Push message &amp; SMS to the service provider's device using the data within the message's contents.<br/>&#xA;Is this possible at all?<br/>&#xA;<strong>UPDATE TO QUESTION 2:</strong> I want the Order microservice to be completely independent of any other microservices that will be built upon / side-by-side it. Channel microservice is an example of a microservice that depends upon events taking place within Order microservice.</p></li>&#xA;</ol>&#xA;&#xA;<p>Also, please guide me as to what all technologies / libraries to use.</p>&#xA;&#xA;<p>What I'll be developing on:<br/>&#xA;Java<br/>&#xA;MongoDB<br/>&#xA;Amazon AWS instances for each microservice.<br/></p>&#xA;&#xA;<p>Would appreciate anyone's help on this.<br/>&#xA;Thanks!</p>&#xA;"
32574103,Microservices - how to solve security and user authentication?,2015-09-14 21:18:13,<authentication><java-ee><microservices>,2,1504,1,2.0,3,"<p>There is a lot of discussion about microservice architecture. What I am missing - or maybe what I did not yet understand is, how to solve the issue of security and user authentication?</p>&#xA;&#xA;<p>For example: I develop a microservice which provides a Rest Service interface to a workflow engine. The engine is based on JEE and runs on application servers like GlassFish or Wildfly. &#xA;One of the core concepts of the workflow engine is, that each call is user centric. This means depending of the role and access level of the current user, the workflow engine produces individual results (e.g. a user-centric tasklist or processing an open task which depends on the users role in the process).</p>&#xA;&#xA;<p>In my eyes, thus a service is not accessible from everywhere. For example if someone plans to implement a modern Ajax based JavaScript application which should use the workflow microservice there are two problems:</p>&#xA;&#xA;<p>1) to avoid the cross-scripting problem from JavaScript/Ajax the JavaScript Web application needs to be deployed under the same domain as the microservice runs</p>&#xA;&#xA;<p>2) if the microservice forces a user authentication (which is the case in my scenario) the application need to provide a transparent authentication mechanism. </p>&#xA;&#xA;<p>The situation becomes more complex if the client need to access more than one user-centric microservices forcing user authentication.&#xA;I always end up with an architecture where all services and the client application running on the same application server under the same domain.</p>&#xA;&#xA;<p>How can these problems be solved? What is the best practice for such an architecture?</p>&#xA;"
39126827,"Laravel passport, Oauth and microservices",2016-08-24 14:58:30,<laravel><oauth><oauth-2.0><microservices>,2,1351,0,0.0,3,"<p>I am having a difficulty in terms of architecture and wondering if someone has some insights.</p>&#xA;&#xA;<p><strong>The plan</strong></p>&#xA;&#xA;<ul>&#xA;<li>I will have multiple microservices (different laravel projects, catalog.microservice.com, billing.microservice.com) each providing an API. </li>&#xA;<li>On top of these will be an angular fronted consuming those APIs. </li>&#xA;<li>I will have another micro service (passport.microservice.com) for auth now thanks to laravel 5.3 passport this is even easier.  </li>&#xA;</ul>&#xA;&#xA;<p><strong>The flow:</strong></p>&#xA;&#xA;<ul>&#xA;<li>User goes to catalog.microservice.com </li>&#xA;<li>user need to authenticate and provides a user and password</li>&#xA;<li>request is made by angular (aka client) to passport.microservice.com through password grand type to get an authorization token</li>&#xA;<li>now that I have a token I am authorized to call a resource from catalog.microservice.com</li>&#xA;<li>catalog.microservice.com needs to know if the token is valid and makes a request (some kind of middleware?) to passport.microservice.com</li>&#xA;<li>passport.microservice.com returns the user, scope etc.</li>&#xA;</ul>&#xA;&#xA;<p><strong>Questions:</strong></p>&#xA;&#xA;<ul>&#xA;<li>Is this a good approach?</li>&#xA;<li>The token validation in catalog.microservice.com can be a middleware? </li>&#xA;</ul>&#xA;"
35913253,Microservice based or Monolithic,2016-03-10 10:03:10,<cordova><spring-boot><microservices>,3,584,0,0.0,3,"<p>I read a lot about Microservices and their structure and it seems, that there are a lot of advantages when it comes to maintainability. </p>&#xA;&#xA;<p>I want to build a mobile app with Spring Boot and Phonegap, which pulls news from RESTful Web Services. </p>&#xA;&#xA;<p>So I'm thinking f building it as a microservice so I can add other services without rebuilding the whole application. Because in future I might want to add other services.</p>&#xA;&#xA;<p>But is it really worth to build a Microservice based application for such a small mobile app? </p>&#xA;"
32217639,Online Store and Microservices,2015-08-26 03:44:02,<restful-architecture><microservices>,1,443,0,3.0,3,"<p>I am working for a big online store. At the moment our architecture is something weird where we have microservices which actually all share the same DB (doesn't work well at all...).&#xA;I am considering improving that but have some challenges on how to make them independant.</p>&#xA;&#xA;<p>Here is a use case. I have customers, customers purchase products. Let say I have 3 microservices : customer authentication, order management, product management.&#xA;An order is linked to a customer and a product.&#xA;Could you describe a solution for the following problems :</p>&#xA;&#xA;<ol>&#xA;<li>How do you make the link between an order and a customer?</li>&#xA;<li>Let say both services share a customer ID, how do you handle data consistency? If you remove a customer on the customer service side, you end up with inconsistency. If your service has to notify the other services then you end up with tighlty coupled services which to me sounds like what you wanted to avoid in the first place. You could kind of avoid that by having an event mechanism which notify everyone but what about network errors when you don't even know who is supposed to receive the event?</li>&#xA;<li>I want to do a simple query : retrieve the customers from US that bought product A. Given that 3million people bought product A and we have 1 million customers in the US; How could you make that reasonably performant? (Our current DB would execute that in few milliseconds)</li>&#xA;</ol>&#xA;&#xA;<p>I can't think of any part of our code where we don't have this kind of relation. One of the solution I can think of is duplicating data. E.g. When a customer purchase something, the order management service will store the customer details and the product details. You end up with massive data replication, not sure if that's a good thing and I would still be worried about consistency.</p>&#xA;&#xA;<p>I couldn't find a paper addressing those issues. What are the different options?</p>&#xA;"
39839881,Is it OK to pass on OAuth Access Token between services?,2016-10-03 20:28:57,<oauth><oauth-2.0><authorization><access-token><microservices>,3,1446,0,0.0,3,"<p>Considering the following scenario in a context of the SSO/OAuth/microservices:</p>&#xA;&#xA;<ol>&#xA;<li>User successfully logs-in to the web application using OAuth's Implicit Flow.</li>&#xA;<li>Web app requests some data from <strong>Service A</strong> and <strong>Service B</strong> passing on user's Access Token to authorize both requests.</li>&#xA;<li><strong>Service A</strong> also calls <strong>Service B</strong> (passing on the same Access Token!) in order to build response to the initial Web App request.</li>&#xA;</ol>&#xA;&#xA;<p>Now, is this OK to pass on the user's Access Token from <strong>Service A</strong> to <strong>Service B</strong>? </p>&#xA;&#xA;<p>Or should <strong>Service A</strong> use ""Client Credentials"" grant to obtain its own Access Token to authorize call to the <strong>Service B</strong>?</p>&#xA;&#xA;<p><strong>UPDATE</strong>:<br>&#xA;Please assume both services are owned by the same organization and both trust the same Authorization Server. Also both services are behind the same API Gateway which validates Access Tokens.</p>&#xA;"
39672919,How to design a sails.js project with microservices architecture?,2016-09-24 05:35:16,<node.js><architecture><sails.js><microservices>,2,1195,0,3.0,3,"<p>I learned about microservices from <a href=""http://microservices.io/"" rel=""nofollow"">here</a></p>&#xA;&#xA;<p>Now, I want to use microservices architecture in my next sails.js project.</p>&#xA;&#xA;<p><strong>One way I could think of is:</strong></p>&#xA;&#xA;<ol>&#xA;<li><p>Breaking my one sails.js application into multiple small sails.js sub-projects/repositories. </p></li>&#xA;<li><p>Having one controller-model in one sub-project. For example, If we consider simple eCommerce app with entities say User, Products, Orders, etc. then there will be separate sails.js repositories for each of them with respective sails.js model-controller.  Then this single sub-repository will from my one microservice.</p></li>&#xA;<li><p>Each sub-repository then will obviously have its own configs.</p></li>&#xA;<li><p>These microservices will them communicate with each other using some HTTP node module.</p></li>&#xA;<li><p>Then writing my own <a href=""http://microservices.io/patterns/apigateway.html"" rel=""nofollow"">API gateway</a> for routing in node.js, which will be responsible for invoking methods/web-services from these sub-repositories depending on the request from clients.</p></li>&#xA;</ol>&#xA;&#xA;<p>Is this the best way OR is there alternative way to design your project using microservices architecture?</p>&#xA;&#xA;<p>What will be the best way to implement inter-service communication, API gateway with sail.js? If one microservice designed with above mentioned approach get bigger, and if I have to split it up in 2, how sails.js model should be changed?</p>&#xA;"
34722107,Is DAO microservice good approach in microservices architecture?,2016-01-11 12:55:19,<web-services><rest><database-design><architecture><microservices>,5,1813,0,1.0,3,"<p>I'm creating a web-application and decided to use micro-services approach. Would you please tell me what is the best approach or at least common to organize access to the database from all web-services (login, comments and etc. web-services). Is it well to create DAO web-service and use only it to to read/write values in the database of the application. Or each web-service should have its own dao layer.</p>&#xA;"
39268365,Nested GraphQL servers / microservices,2016-09-01 09:56:38,<microservices><graphql><apollo-server>,1,291,1,1.0,3,<p>I would like to replace all my REST APIs with GraphQL (apollo-server preferred). It's clear to me how to use GraphQL in monolithic apps but it's not clear how to do it for microservices.</p>&#xA;&#xA;<p>The main API server consists of multiple microservices where each microservice exposes its own REST API through which the central API server communicates with it. I would like to replace all these REST APIs with GraphQL thus I would get microservices as nested GraphQL servers communicating with each other through GraphQL instead of REST.</p>&#xA;&#xA;<p>The problem that I'm facing is how to easily build a GraphQL query string for microservices based on the received attributes in the resolver of the main GraphQL server. There is no way to tell GraphQL to return all the fields for microservice. The best way would be to simple forward just a part of a the main query further to a microservice. </p>&#xA;&#xA;<p>Any ideas? Do you think that REST is still more appropriate for microservices then GraphQL?</p>&#xA;
47837207,Entity-level access restriction in the microservice architecture based on user or group membership,2017-12-15 17:31:03,<security><design><architecture><permissions><microservices>,3,982,1,1.0,3,"<p>In the systems, there may be data that is restricted in nature. &#xA;Sometimes access to specific entities should be easily restricted or granted based on user or group membership. </p>&#xA;&#xA;<p>What is the best way to implement this in the microservice architecture?</p>&#xA;&#xA;<h2>#1</h2>&#xA;&#xA;<p>Should access control, managing permissions etc. be the responsibility of the microserive itself? Developers will have to implement access control, store, and update permissions for every service. Seems like not very robust and error-prone approach.</p>&#xA;&#xA;<h2>#2</h2>&#xA;&#xA;<p>Create dedicated microservice handling permission management? This service will be called by other microserives to check access permissions for each entity and filtering entities before returning results. Centralized permissions storage and management is an advantage but microservice will have to make a call to ""Permission Service"" for each entity to check access rights what may have a negative influence on performance. And developers still have to integrate access checks into their services what leaves space for an error.</p>&#xA;&#xA;<h2>#3</h2>&#xA;&#xA;<p>Make access control responsibility of the API Gateway or Service Mesh. It is possible to think of an implementation that will automatically filter responses of all services. But in the case when the microservice returns list of entities permissions should be checked for each entity. Still a potential performance problem.</p>&#xA;&#xA;<h2>Example</h2>&#xA;&#xA;<p>Consider the following synthetic example. &#xA;Healthcare system dealing with test results, X-Ray images etc. Health information is very sensitive and should not be disclosed.</p>&#xA;&#xA;<p>Test results should be available only to:</p>&#xA;&#xA;<ul>&#xA;<li>patient</li>&#xA;<li>doctor</li>&#xA;<li>laboratory</li>&#xA;</ul>&#xA;&#xA;<p>Attending doctor may send the patient to another specialist. A new doctor should have access to test results too. So access can be granted dynamically.</p>&#xA;&#xA;<p>So each entity (e.g. test results, X-Ray image) has a set of rules what users and groups are allowed to access it.</p>&#xA;&#xA;<p>Imagine there is a microservice called ""Test Results Service"" dealing with test results. Should it be responsible for access control, manage permissions etc.? Or permissions management should be extracted to separate microservice?</p>&#xA;&#xA;<p>Healthcare system may also handle visits to a doctor. Information about patient's visit to the doctor should be available to:</p>&#xA;&#xA;<ul>&#xA;<li>patient</li>&#xA;<li>doctor</li>&#xA;<li>clinic receptionist</li>&#xA;</ul>&#xA;&#xA;<p>This is the example of a different entity type that requires entity level access restriction based on user or group membership.</p>&#xA;&#xA;<p>It is easy to imagine even more examples when entity level access control is required.</p>&#xA;"
49836268,How to deal with authentication in a micro-services architecture,2018-04-14 21:14:47,<microservices><grpc>,2,172,4,3.0,3,"<p>I am currently reading a lot about microservices but still, I don't understand some parts. I made the following draw:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/GkgRC.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/GkgRC.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Each microservice has 2 accesses:</p>&#xA;&#xA;<ul>&#xA;<li>REST: For http uses</li>&#xA;<li>gRPC: For intra/background communication/exchanges</li>&#xA;</ul>&#xA;&#xA;<p>If I want to login I can just send an Http Request to my Authentication service. But what about if I want to access the Stuff service that needs you to be already connected?</p>&#xA;&#xA;<p>Let say that the user wants to display the stuff available in the database STUFF, the service Stuff will first check if the ""token"" of the connected user is right, by exchanging with the Authentication service, and then return the stuff or a ""login requires request"".</p>&#xA;&#xA;<p>So the thing I don't understand is, if each services that needs a client already connected needs to exchange with Authentication, then it will create a huge internet traffic in order to check each user request.. So I though about make one Authentication service per service, but since I should have only one Database, then it's the database that will slow the traffic?</p>&#xA;&#xA;<p>Also, if I understand, each micro service should be on separate servers, not the same one?</p>&#xA;&#xA;<p>I hope I am clear, don't hesitate to ask for more details !</p>&#xA;&#xA;<p>Thanks in advance :)</p>&#xA;&#xA;<p>Max</p>&#xA;&#xA;<h1>Edit 1</h1>&#xA;&#xA;<p><strong>Based on @notionquest's answer:</strong></p>&#xA;&#xA;<p>So it should more looks like that right?</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/pdOdR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pdOdR.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Also, based on Peter's comment, each service can implement its own middleware (JWT as mentioned) so the API Gateway is only a ""pass-through"". However, I don't feel like it could be a nice for me since each service make a token check for each internal exchange, doesn't it?</p>&#xA;&#xA;<p>For the stuff, it's easy since it checks only 1 time the token. Now, let's say that, after the user got the stuff, he choose one and wanna buy it. Then the ""Buying service"" will call the stuff service in order the verify the price of the item, but... It will have to check the user token since the stuff is a ""on authenticated access"", so it means that ""Buying"" service and ""Stuff"" service both check the token, which add an extra check.</p>&#xA;&#xA;<p>I though about an internal guaranteed access between services but is it worth it?</p>&#xA;&#xA;<p>Also, maybe you said to implement the middleware for each service since they have a REST access, but the API Gateway would just destroy the idea of having REST access</p>&#xA;"
44420585,Microservices: how to effectively deal with data dependencies between microservices,2017-06-07 18:47:49,<node.js><mean-stack><microservices>,2,125,0,1.0,3,"<p>I am developing an application utilizing the microservices development approach with the mean stack.  I am running into a situation where data needs to be shared between multiple microservices.  For example, let's say I have user, video, message(sending/receiving,inbox, etc.) services.  Now the video and message records belong to an account record.  As users create video and send /receive message there is a foreign key(userId) that has to be associated with the video and message records they create. I have scenarios where I need to display the first, middle and last name associated with each video for example.  Let's now say on the front end a user is scrolling through a list of videos uploaded to the system, 50 at a time.  In the worst case scenario, I could see a situation where a pull of 50 occurs where each video is tied to a unique user.</p>&#xA;&#xA;<p>There seems to be two approaches to this issue:</p>&#xA;&#xA;<p>One, I make an api call to the user service and get each user tied to each video in the list.  This seems inefficient as it could get really chatty if I am making one call per video.  In the second of the api call scenario, I would get the list of video and send a distinct list of user foreign keys to query to get each user tied to each video.  This seems more efficient but still seems like I am losing performance putting everything back together to send out for display or however it needs to be manipulated.</p>&#xA;&#xA;<p>Two, whenever a new user is created, the account service sends a message with the user information each other service needs to a fanout queue and then it is the responsibility of the individual services to add the new user to a table in it's own database thus maintaining loose coupling.  The extreme downside here would be the data duplication and having to have the fanout queue to handle when updates needs to be made to ensure eventual consistency.  Though, in the long run, this approach seems like it would be the most efficient from a performance perspective.  </p>&#xA;&#xA;<p>I am torn between these two approaches, as they both have their share of tradeoffs.  Which approach makes the most sense to implement and why?</p>&#xA;"
35348080,How to handle shared datasources using microservices architecture,2016-02-11 19:14:25,<java><architecture><redis><microservices><bigdata>,1,622,0,1.0,3,"<p>I have couple of services in my microservice architecture.</p>&#xA;&#xA;<p>Two of the service(Service A, Service B) got different api's and provide different domain logic. However they do share some logic that should be returned - user-state from Redis.</p>&#xA;&#xA;<ul>&#xA;<li>When user state is changed Iam publishing from a 3rd service to all the my micro-services</li>&#xA;</ul>&#xA;&#xA;<p>solutions:</p>&#xA;&#xA;<ol>&#xA;<li><p>I could create another service which would be responsible for ""user-state"" and will hold all user data on Redis.&#xA;Disadvantages: &#xA;My clients going to have additional call on every api requests(to get the user-state).</p></li>&#xA;<li><p>Duplicate the user-state datasource for each microservices(holding more than one redis instance) and return it independently for each request.&#xA;Disadvantages: &#xA;I am going to duplicate my data and duplicate Redis instances(each microservice will access it's own)</p></li>&#xA;<li><p>have one redis datasource while all services going to use it. &#xA;Disadvantages: &#xA;Duplicating redis-logic(in order to retrieve the data) among the services and break microservices principle by using one shared datasource</p></li>&#xA;</ol>&#xA;&#xA;<p>What would you suggest doing?</p>&#xA;"
50700178,Should API gateway be responsible for authorisation?,2018-06-05 12:32:36,<authentication><architecture><authorization><microservices><api-gateway>,1,100,0,1.0,3,"<p>Currently I have a monolith application with Java/Spring Boot the following endpoints:</p>&#xA;&#xA;<ul>&#xA;<li><code>/login</code></li>&#xA;<li><code>/logout</code></li>&#xA;<li><code>/some-resource</code></li>&#xA;</ul>&#xA;&#xA;<p>To access <code>some-resource</code>, the flow is following:</p>&#xA;&#xA;<ol>&#xA;<li>The user makes a <code>POST</code> request to <code>/login</code> endpoint. If the credentials are correct, a JWT token is returned in header, otherwise a 401.</li>&#xA;<li>The users sends the JWT token along with the request to <code>/some-resource</code>. If the token is valid, the resource is returned, otherwise 403.</li>&#xA;</ol>&#xA;&#xA;<p>Now I want to split the monolith into 2 services: ""AuthServer"" and ""SomeResourceServer"". There will be an API gateway on the top. I am thinking about 2 possible ways to handle authorisation</p>&#xA;&#xA;<hr>&#xA;&#xA;<h2>Option 1</h2>&#xA;&#xA;<ol>&#xA;<li>The user makes request to <code>/login</code> endpoint. The API gateway forwards it to the ""AuthServer"". If the credentials are correct, a JWT token is returned in header, otherwise a 401. <strong>- This step is the same</strong></li>&#xA;<li>The users sends the JWT token along with the request to <code>/some-resource</code>. The API gateway calls the ""AuthServer"" to validate the JWT token. If the token is valid, the API gateway calls ""SomeResourceServer"" and returns the results. Otherwise 403.</li>&#xA;</ol>&#xA;&#xA;<hr>&#xA;&#xA;<h2>Option 2</h2>&#xA;&#xA;<ol>&#xA;<li>The user makes request to <code>/login</code> endpoint. The API gateway forwards it to the ""AuthServer"". If the credentials are correct, a JWT token is returned in header, otherwise a 401. <strong>- This step is the same</strong></li>&#xA;<li>The users sends the JWT token along with the request to <code>/some-resource</code>. The API gateway simply forwards the request to ""SomeResourceServer"". Then ""SomeResourceServer"" calls ""AuthServer"" to validate the JWT token. If the token is valid, the resource is returned, otherwise 403.</li>&#xA;</ol>&#xA;&#xA;<hr>&#xA;&#xA;<p>In Option 1 the API gateway is responsible to handle authorisation (communicate with ""AuthServer""), in option 2 the communication is done between the servers. So which option is more correct? Are there any good/bad practices? Or maybe another way/option?</p>&#xA;"
31764926,Microservices API calls and dependency design,2015-08-01 18:35:43,<design><dependencies><microservices>,2,359,0,2.0,3,"<p>Are there any best practice on designing microservices service regarding API dependency (APIs that the service is calling to)?</p>&#xA;&#xA;<p>For example if I have a ""Order Management"" (OM) service, obviously it will need to call ""User Management"" (UM) service since it will need to query user info (shipping address, email, etc) many times. If I let my OM calls UM all the time when it needs user info this will create lots of dependency on UM service. </p>&#xA;&#xA;<p>As far as I understand services are supposed to be autonomous and as decoupled as possible - but now I got a OM service that will go down everytime UM service go down.</p>&#xA;&#xA;<p>Upon searching on Google I found 3 alternatives:</p>&#xA;&#xA;<ol>&#xA;<li>Use the event-based programming to replciate user data as soon as user data is created in UM module so it is always replicated into a table inside OM</li>&#xA;<li>Use database's replciation mechanism to replicate data from UM onto OM database</li>&#xA;<li>Copy user data into order object as nested json to eliminate dependency for order query and update (but I suppose initial order creation will still need to call UM)</li>&#xA;</ol>&#xA;&#xA;<p>Are there any best practices on the challenge here or are there any rules of thumb of deciding which design approach to take?</p>&#xA;"
38070572,How to architecture Microservice & OpenID connect?,2016-06-28 08:10:32,<microservices><openid-connect><oauth2>,1,1235,0,1.0,3,"<p>We have three microservices: microA, microB &amp; microC.</p>&#xA;&#xA;<ul>&#xA;<li>microA &amp; microB are powering product 1.</li>&#xA;<li>microA &amp; microC are powering product 2.</li>&#xA;</ul>&#xA;&#xA;<p>Obviously, we would need a security layer, in our case implementing an ""OpenID Connect"" provider fits well with the business needs. We add to the stack the OpenID provider.</p>&#xA;&#xA;<p>The user/rights management is quite easy &amp; natural: we associate the OpenId identifier of the user on each microservices to a subset of rights:</p>&#xA;&#xA;<p>For example on the service microA, we store that the user OpenID XXX can do this and that. it's isolated on the microservice level. Respect the boundaries of our context. Fine.</p>&#xA;&#xA;<p>When the user login with OpenID on product1, we grant an access token to the user + an Id token.</p>&#xA;&#xA;<p>The situation becomes more complex when product1 expose an API that third-party use.</p>&#xA;&#xA;<p>Now, let say that my user comes to the third-party webapp and is prompted to login &amp; allow the third-party to get some rights on product1 API.</p>&#xA;&#xA;<p>If I understand correctly OpenID connect, it's all about authentication over OAuth2, but how do we handle classic OAuth2 scope management then?</p>&#xA;&#xA;<p>The best scenario I have found is:</p>&#xA;&#xA;<ol>&#xA;<li><p>make the whole OpenID connect to have the authentication info </p></li>&#xA;<li><p>and then make another full OAuth2 process to another Authorization server to ask the user to grant some scopes to the third party?</p></li>&#xA;</ol>&#xA;&#xA;<p>which means that on the third-party:</p>&#xA;&#xA;<ul>&#xA;<li>the user will be prompted to login on the OpenID Provider </li>&#xA;<li>then redirected and prompted to accept the scope requested</li>&#xA;</ul>&#xA;&#xA;<p>Is that correct? If yes, OAuth2 server flow is like 4 HTTP requests to the end user, so performing it twice is like executing eight requests to get the Authentication + Authorization flow done. Seems too massive.</p>&#xA;"
38168658,Multiple microservices and database associations,2016-07-03 09:40:56,<database><rest><spring-boot><microservices>,2,480,0,0.0,3,"<p>I have a question concerning microservices and databases. I am developing an application: a user sees a list of countries and can click through it so he can see a list of attractions of that country. I created a country-service, auth-service (contains users for oAuth2) and an attraction-service. Each service has its own database. I mapped the association between an attraction and its country by the <strong>iso code</strong> (for example: BE = belgium): /api/attraction/<strong>be</strong>.</p>&#xA;&#xA;<p>The approach above seems to work but I am a bit stuck with the following: a user must be able to add an attraction to his/her list of favorites, but I do not see how that's possible since I have so many different databases. </p>&#xA;&#xA;<p>Do I create a favorite-service, do I pass id's (I don't think I should do this), what kind of business key can I create, how do I associate the data in a correct way...?</p>&#xA;&#xA;<p>Thanks in advance!</p>&#xA;"
38254720,Migrate from monolith to Micro service architecture,2016-07-07 20:30:29,<microservices>,2,115,1,0.0,3,<p>We are on the initial stages of designing a micro service for my client from their standard monolith app that is sitting on 4 JBOSS servers in their own data center. Is micro service architecture target at only cloud based deployment? Can i deploy a micro service on premise production ready tomcat /JBOSS? Is that a good fit?</p>&#xA;
39967784,Microservice vs SOA differs,2016-10-10 22:35:46,<soa><microservices>,5,712,0,1.0,3,"<p>I was looking for differences b/w SOA and Microservices architecture style&#xA;and found a good link <a href=""https://www.infoq.com/articles/boot-microservices"" rel=""nofollow noreferrer"">https://www.infoq.com/articles/boot-microservices</a></p>&#xA;&#xA;<p>It Says:<br>&#xA;As a successor to ""Service Oriented Architecture"" (SOA), microservices can be categorized in the same family of ""distributed systems"", and carry forward many of the same concepts and practices of SOA. Where they differ, however, is in terms of the scope of responsibility given to an individual service. In SOA, a service may be responsible for handling a wide range of functionality and data domains, while a general guideline for a microservice is that it is responsible for managing a <strong>single data domain</strong> and the corresponding functions around that domain.</p>&#xA;&#xA;<p>Please help me to understand :<br>&#xA;The meaning of single data domain (recommended for microservice).&#xA;is it saying that a separate Microservice has to be build to manage a single domain/entity (and associated/composite domain/entities with this single domain/entity). Becasue if this case, then there will be many(~20 to ~50) microservices even to implement a basic functionality (enterprise) application</p>&#xA;&#xA;<p>Edit:&#xA;I have gone through the link <a href=""https://stackoverflow.com/questions/25501098/difference-between-microservices-architecture-and-soa"">Difference between Microservices Architecture and SOA</a>, but it explains, that it is same on the first two tenets, and different on 3rd point (in SOA, Services share schema and contract, not class), but that is SOAP contracts, but then what is the difference b/w SOA (with REST) vs Microservices (which is mostly with REST)</p>&#xA;"
49443206,Difference between OSGI and microservices,2018-03-23 05:54:50,<osgi><microservices><osgi-bundle>,2,1173,1,0.0,3,<p>When would you like to choose for OSGI modules than micro services and is there anything i can do with micro services that i can not do with OSGI modules?</p>&#xA;
44988481,Spring Cloud - how to allow access to endpoint for specific microservice only?,2017-07-08 16:42:24,<spring><oauth-2.0><microservices><spring-cloud>,2,286,4,1.0,3,"<p>I have simple microservice architecture:</p>&#xA;&#xA;<ul>&#xA;<li>edge service</li>&#xA;<li>service registry</li>&#xA;<li>auth service (I am using JWT and OAuth2)</li>&#xA;<li>user service</li>&#xA;<li>frontend and some core services</li>&#xA;</ul>&#xA;&#xA;<p>When the user tries to log in, the credentials are passing from edge service to auth service. Auth service fetches user's data from user service (using <strong>@FeignClient</strong>) and if username/password matches, it generates token. Nothing fancy about it.</p>&#xA;&#xA;<p>There a 'little' problem with this approach: the endpoint <code>/api/user/{username}</code> in user service, which is used by auth service to fetch user's data, might be used by any user to get any other user's data (password, roles etc.). The one solution would be somehow create JWT token for auth-service with role <code>AUTH_SERVICE</code> and at the user service side check JWT and if the role is different than <code>AUTH_SERVICE</code> reject the request.</p>&#xA;&#xA;<p>Are there any other solutions?</p>&#xA;&#xA;<p><strong>EDIT</strong></p>&#xA;&#xA;<p>I thought that my design is quite common but apparently I should have been more specific in the first place:</p>&#xA;&#xA;<ul>&#xA;<li>Auth-servie is my Authorization Server and the other services are Resource servers</li>&#xA;<li>I use API gateway pattern and my auth-service is also behin proxy</li>&#xA;<li>After the client application obtains JWT it adds it to every request and based on that the authentication and authorization is performed; every Resource server has a public key which is used to verify signature; if it's valid, the service knows that JWT has been generated by trusted auth-service and the service based on JWT creates OAuth2Authenication object which contains all the user information</li>&#xA;</ul>&#xA;&#xA;<p><strong>EDIT2:</strong></p>&#xA;&#xA;<p>I ended up merging auth-service to user-service, which was the suggestion given from a couple of SO users. After thinking about it it seemed unnecessary to have a seperate auth-service for just JWT generation. I've accepted @Abhijit Sarkar answer because it has some valid points even though he wasn't right about additional call to auth-service to verify validity of the token.</p>&#xA;"
48921774,Microservices unsuitable for business domain?,2018-02-22 07:28:39,<database><domain-driven-design><microservices><distributed-computing><soa>,2,80,2,1.0,3,"<p>The business domain has five high-level bounded contexts</p>&#xA;&#xA;<ul>&#xA;<li>Customers</li>&#xA;<li>Applications</li>&#xA;<li>Documents</li>&#xA;<li>Decisions</li>&#xA;<li>Preforms</li>&#xA;</ul>&#xA;&#xA;<p>Further, these bounded contexts has sub-contexts like ordering and delivery of the documents. Despite the project of consisting ten of thousands of classes and dozens of EJB's, most of the business logic resides in relational database views and triggers for a reason: A lot of joins, unions and constraints involved in all business transactions. In other words, there is complex web of dependencies and constraints between the bounded contexts, which restricts the state transfers. In layman terms: the business rules are very complicated.</p>&#xA;&#xA;<p>Now, if I were to split this monolith to database per service microservices architecture, bounded contexts being the suggested service boundaries, I will have to implement all the business logic with explicit API calls. I would end up with hundreds of API's implementing all these stupid little business rules. As the performance is main factor (we use a lot of effort to optimize the SQL as it is now), this is out of the question. Secondly, segregated API's would probably be nightmare to maintain in this web of ever evolving business rules, where as database triggers actually support the high cohesion and DRY mentality, enforcing the business rules transparently.</p>&#xA;&#xA;<p>I came up with a conclusion microservice architecture being unsuitable for this type of document management system. Am I correct, or approaching the idea from wrong angle?</p>&#xA;"
36832219,How to use redis for number of micro-services?,2016-04-25 04:51:34,<caching><redis><microservices>,3,4406,0,1.0,3,"<p>I am very much new to redis. I have been investigating on redis for past few days.I read the documentation on cache management(lru cache), commands ,etc. I want to know how to implement caching for multiple microservice(s) data .&#xA;I have few questions:</p>&#xA;&#xA;<ol>&#xA;<li>Can all microservices data(cached) be kept under a single instance of redis&#xA;    server?</li>&#xA;<li><p>Should every microservice have its own cache database in redis?</p></li>&#xA;<li><p>How to refresh cache data without setting EXPIRE? Since it would consume more memory.</p></li>&#xA;</ol>&#xA;&#xA;<p>Some more information on best practices on redis with microservices will be helpful.</p>&#xA;"
36642718,Two microservices for read and write to one database table,2016-04-15 09:01:05,<architecture><microservices>,2,1649,0,1.0,3,"<p>I'm a little bit confused about the microservice best practice approach. </p>&#xA;&#xA;<p>Following scenario:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Massive incoming messages from mqtt devices. A rest api where customers could read the messages (mostly only a part of them).</p>&#xA;</blockquote>&#xA;&#xA;<p>My idea was, to create one microservice for storing the messages in a database table. And a second microservice with a rest api to read this messages.&#xA;I want to do this, because of scaling issues. (The incoming storing part needs much more power, than the reading rest api)</p>&#xA;&#xA;<p>I read that the ""perfect"" microservice should be the only one, who accesses his data in a database. So other microservices should ask for this data, via its API and not on database level.&#xA;So my approach would be not the perfect one. I see a few options to handle this:</p>&#xA;&#xA;<ul>&#xA;<li>only one mircroservice, for storing and reading</li>&#xA;<li>making an api in the storing microservice, where the rest microservice could fetch the data.</li>&#xA;</ul>&#xA;&#xA;<p>But all of them, doesn't look good for me. </p>&#xA;&#xA;<p>Whats your opinion?</p>&#xA;&#xA;<p>Regards,&#xA;Markus</p>&#xA;"
36615117,microservice messaging db-assigned identifiers,2016-04-14 06:15:30,<microservices><spring-cloud-stream>,2,154,0,2.0,3,"<p>The company I work for is investigating moving from our current monolithic API to microservices. Our current API is heavily dependent on spring and we use SQL server for most persistence. Our microservice investigation is leaning toward spring-cloud, spring-cloud-stream, kafka, and polyglot persistence (isolated database per microservice). </p>&#xA;&#xA;<p>I have a question about how messaging via kafka is typically done in a microservice architecture. We're planning to have a coordination layer between the set of microservices and our client applications, which will coordinate activities across different microservices and isolate clients from changes to microservice APIs. Most of the stuff we've read about using spring-cloud-stream and kafka indicate that we should use streams at the coordination layer (source) for resource change operations (inserts, updates, deletes), with the microservice being one consumer of the messages. </p>&#xA;&#xA;<p>Where I've been having trouble with this is inserts. We make heavy use of database-assigned identifiers (identity columns/auto-increment columns/sequences/surrogate keys), and they're usually assigned as part of a post request and returned to the caller. The coordination layer may be saving multiple things using different microservices and often needs the assigned identifier from one insert before it can move on to the next operation. Using messaging between the coordination layer and microservices for inserts makes it so the coordination layer can't get a response from the insert operation, so it can't get the assigned identifier that it needs. Additionally, other consumers on the stream (i.e. consumers that publish the data to a data warehouse) really need the message to contain the assigned identifier.</p>&#xA;&#xA;<p>How are people dealing with this problem? Are database-assigned identifiers an anti-pattern in microservices? Should we expose separate microservice endpoints that return database-assigned identifiers so that the coordination layer can make a synchronous call to get an identifier before calling the asynchronous insert? We could use UUIDs but our DBAs hate those as primary keys, and they couldn't be used as an order number or other user-facing generated ids.</p>&#xA;"
48279479,How to query in a Event Driven Microservice architecture?,2018-01-16 10:50:06,<microservices><cqrs><event-driven>,3,308,0,1.0,3,"<p>Let suppose the following simple UC based on a CQRS architecture:</p>&#xA;&#xA;<p>We have a backend managing a Business Object, let says a Movie.</p>&#xA;&#xA;<ul>&#xA;<li>This backend is composed of 2 Microservices: a CommandManager (Create/Update/Delete Movie) and a QueryManager (Query Movie)</li>&#xA;<li>We have a frontend that offer a web page for creating a new Movie and this action lead automatically to another web page describing the Movie. </li>&#xA;</ul>&#xA;&#xA;<p>A simple way to do that is:</p>&#xA;&#xA;<ul>&#xA;<li>A web page collect movie information using a form and send them to the frontend.</li>&#xA;<li>The frontend make a POST request to the CommandManager</li>&#xA;<li>The CommandManager write the new movies to the datastore and return the movie key</li>&#xA;<li>The frontend make a GET using this key to the QueryManager</li>&#xA;<li>The QueryManager looks for the Movie in the Datastore using the key and return it.</li>&#xA;<li>The frontend deliver the page with the Movie Information.</li>&#xA;</ul>&#xA;&#xA;<p>Ok, now I want to transform this UC in a more Event Driven way. Here is the new flow:</p>&#xA;&#xA;<ul>&#xA;<li>A web page collect movie information using a form and send them to the frontend.</li>&#xA;<li>The frontend write a Message in the BUS with the new movie information</li>&#xA;<li>The CommandManager listen the BUS and create the new movies in the datastore. Eventually, it publish a new message in the BUS specifying that a new Movie has been created.</li>&#xA;</ul>&#xA;&#xA;<p>At this point, the frontend is no more waiting for a response due to the fact that this kind of flow is asynchronous. How could we complete this flow in order to forward the user to the Movie Information Web page? We should wait that the creation process is done before querying the QueryManager. </p>&#xA;&#xA;<p>In a more general term, in a asynchronous architecture based on bus/event, how to execute Query used to provide information in a web page?</p>&#xA;"
48201224,Kafka AND REST for communication between microservices?,2018-01-11 06:45:16,<rest><architecture><apache-kafka><message-queue><microservices>,1,429,2,1.0,3,"<p>I am currently working on an architecture see below. First I'm not sure if this kind of architecture is called an <em>event-driven</em> or a <em>data-driven</em> architecture or maybe both.</p>&#xA;&#xA;<p>There some input messages are sent from the <strong>Frontend</strong> to <strong>T1</strong>. These messages are first validated, then collected and in the end evaluated.</p>&#xA;&#xA;<p>My current approach is to persist the raw messages with all meta information in <strong>MS A</strong>, the sorted collections in <strong>MS B</strong> and the evaluations in <strong>MS C</strong>. This separates the data to the appropriately concerned microservices.  </p>&#xA;&#xA;<p>In <strong>T2</strong> I only produce the messages which <strong>MS B</strong> requires.<br>&#xA;In <strong>T3</strong> I only produce the messages which <strong>MS C</strong> requires.<br>&#xA;But when evaluation the collections all meta information from <strong>MS A</strong> is required. So how to proceed with this kind?</p>&#xA;&#xA;<ol>&#xA;<li>Should I send only the minimum of data to the queue and provide an API?</li>&#xA;<li>Should I send all data to the queues (forward data for following services)?</li>&#xA;<li>Should I send all information for the next service to the queue and provide an API?</li>&#xA;<li>Something else?</li>&#xA;</ol>&#xA;&#xA;<p>Or did I misunderstand the approach ""Communicating microservices through Kafka""?</p>&#xA;&#xA;<p>Please feel free to offer criticism!<br>&#xA;Thanks for advice!</p>&#xA;&#xA;<p><img src=""https://i.stack.imgur.com/BgT2M.png"" height=""500""/></p>&#xA;"
46404449,Micro service architecture for Angular2,2017-09-25 11:44:49,<angular><design-patterns><architecture><microservices>,1,657,4,2.0,3,"<p>If we take an enterprise  angular 2 web app it has several modules(screens) such as Customer management, Reservations, Booking management, Reporting and etc....</p>&#xA;&#xA;<p>What we normally do is we create common components in a component library and use them on main angular application. The main angular app contains all the modules(screens) with REST API integrations(assuming backed is REST). When app is getting bigger &amp; bigger compile time and rendering consuming more time &amp; resources. Also if one particular area is having a issue we cannot have a release since all are bundle to one app.</p>&#xA;&#xA;<p>As you all know <strong>Micro service architecture</strong> is a method of developing software systems that has grown in popularity. So, my question is can we apply same architecture for these type of enterprise angular 2 apps?. </p>&#xA;&#xA;<p>It is like this. We have a customer management as a separate angular app. Again Booking management is another angular app. Reporting is another app. These apps are going to be separate war files when deploying to the web server. </p>&#xA;&#xA;<p>Once we have developed such loosely coupled apps this will reduce the over head of project size, compile time &amp; resources. Also this will make unit testing more easier. Particular set of developers are only considering the only one unit of the module.</p>&#xA;&#xA;<p>Kindly share your expert thoughts about this</p>&#xA;&#xA;<p>Thanks.</p>&#xA;"
50312750,How can I keep databases of two web applications in sync?,2018-05-13 04:23:50,<java><sql-server><microservices><database-trigger>,2,65,0,0.0,3,"<p>I have two webapps, each with its own backend microservice and each microservice has its own database. For any changes in tables of database of microservice1, I want to change(create/update) entries in tables of database of microservice 2. How can I do that? </p>&#xA;&#xA;<h1>Context:</h1>&#xA;&#xA;<p><strong>Webapp 1:</strong> UI for human resource coordinators to schedule an interview. </p>&#xA;&#xA;<p><strong>Microservice 1:</strong> Backend service that schedules an interview.</p>&#xA;&#xA;<p><strong>DB for microservice 1:</strong> Stores information related to interview of a candidate. </p>&#xA;&#xA;<pre><code>  interviews: [ {&#xA;      ""interviewId"": ""1"",&#xA;      ""candidateId"": ""abc"",&#xA;      ""interviewers"": [&#xA;      {&#xA;         ""interviewer_name"": ""Thor"",&#xA;         ""schedule"": {&#xA;            ""startTime"": """",&#xA;            ""endTime"": """",&#xA;            ""roomNumber"": 101&#xA;         }&#xA;      },&#xA;      {&#xA;         ""interviewer_name"": ""Loki"",&#xA;         ""schedule"": {&#xA;            ""startTime"": """",&#xA;            ""endTime"": """",&#xA;            ""roomNumber"": 101&#xA;         }&#xA;      }&#xA;   ]&#xA;} ]&#xA;</code></pre>&#xA;&#xA;<p><strong>Webapp 2:</strong> UI for interviewers to coordinate on questions to ask in an interview. </p>&#xA;&#xA;<p><strong>Microservice 2:</strong> Backend service for interviewers to coordinate on question selection. i.e. each interviewer selects what question he/she is going to ask from a candidate in an interview (this is to ensure no two interviewers end up asking same question from a candidate).</p>&#xA;&#xA;<p><strong>DB for microservice 2:</strong> Schemas</p>&#xA;&#xA;<p>// QuestionBank : Table containing questions, that interviewers can select.</p>&#xA;&#xA;<p>// Interviewers : Table containing all interviewers in the firm.</p>&#xA;&#xA;<p>// InterviewToInterviewer : (many to many mapping of interviews with interviewers). One interview can have many interviewers, and each interviewer can participate in many interviews.</p>&#xA;&#xA;<p>// InterviewToInterviewerToQuestion :  (many to many mapping of interviewToInterviewers with questions). For each interview an Interviewer can select many questions and each of the question in a questionbank can be a part of many interviewToInterviewer entry.</p>&#xA;&#xA;<h1>Current Workflow:</h1>&#xA;&#xA;<p>As soon as interview is scheduled from webapp1:</p>&#xA;&#xA;<ol>&#xA;<li>An email is sent to all the interviewers. Email contains a link to a webapp 2, clicking on this link opens webapp2 that provides an interface for interviewers to select questions they plan to ask in an interview.</li>&#xA;</ol>&#xA;&#xA;<h1>Requirement:</h1>&#xA;&#xA;<ol>&#xA;<li><p>If the questions are not selected by interviewer, then I want to send reminders to them. For this I want webapp2 to know that an interview is scheduled. </p></li>&#xA;<li><p>I want webapp2 to know about any lineup changes (in a given interview, interviewer is changed or an interview is cancelled etc) that happens. </p></li>&#xA;</ol>&#xA;&#xA;<h1>Solutions I thought off:</h1>&#xA;&#xA;<ol>&#xA;<li><p>As soon as interview is scheduled/changed from webapp1, webapp1 will calls webapp2 (webapp2 exposes an API for that) to let webapp2 know that a new interview is created or an existing interview is updated. </p></li>&#xA;<li><p>For any new entry/update in interview table in DB1, a DB trigger is launched to DB2. I am not sure whether this is possible also. </p></li>&#xA;</ol>&#xA;&#xA;<p>Out of the two approaches above can someone help me with the pros and cons of one choosing over other. Or there is some other alternative approach to achieve this.</p>&#xA;&#xA;<p>Leads here are appreciated. </p>&#xA;"
43814764,Testing microservices?,2017-05-05 22:46:35,<testing><go><integration-testing><microservices>,3,437,1,0.0,3,<p>I know this question is a little subjective but I am lost on what to do here. At the moment I am using Go + Go-kit to write some microservices. I'd like to test the endpoints of these microservices in an integration test type fashion but I am unsure how to go about it. The only thing I can think of is to have shell scripts that hit the endpoints and check for responses. But this seems like kludge and not a real smart practice. I feel like there should be a better way to do this. Does anyone have any suggestions?</p>&#xA;
43384538,Database location in Microservices Architecture,2017-04-13 05:57:03,<azure><docker><microservices>,3,361,4,0.0,3,"<p>We have a monolithic application which we are now converting to microservice architecture using containers. </p>&#xA;&#xA;<p>Our microservices are <em>stateful</em> (i.e they need to insert/retrieve data from db). As per microservice architecture, each microservice should have its own data (i.e database in our case).</p>&#xA;&#xA;<p>My question is that <strong>where</strong> the database of each microservice should be deployed, whether it should be in the same host in which the microservice is deployed, in the same container in which the microservice is deployed or it should be in the separate server like azure db or something?</p>&#xA;&#xA;<p>What would be the pros &amp; cons of each approach and what is the best approach according to microservice best practices?&#xA;*</p>&#xA;"
42332737,Exchange reference token for JWT - downstream microservices authorization,2017-02-19 20:52:59,<jwt><microservices><identityserver4>,2,743,0,2.0,3,"<p>I am currently creating a new application based on a Microservices architecture, with authentication provided by Identity Server 4. </p>&#xA;&#xA;<p>Following lots of research and also setting up proof of concepts, I have Identity Server setup to secure the API's and a native application successfully accessing these services using tokens.</p>&#xA;&#xA;<p>Initially the client was issued an access token which was used to access the API's, I have however now switched this out to use reference tokens.  Now, onto the issue!</p>&#xA;&#xA;<p>The approach I would like to take here is to adopt a Microservices gateway, which receives a reference token and then turns this into a JWT for inclusion in any requests to the downstream microservices.  Within the Gateway, how can I ""exchange"" the inbound reference token for a JWT? Is there something within Identity Server that can assist here? Or do I need to use the introspection endpoint, sending in the reference token and retrieving the claims to construct a JWT within the gateway service for passing in the Authorization header to all downstream services?</p>&#xA;&#xA;<p>If there is any further information that I can provide to help with understanding the goal of the architecture, please just let me know.</p>&#xA;"
48458627,How to filter and sort data from multiple microservices?,2018-01-26 09:27:49,<architecture><microservices>,1,362,0,3.0,3,"<p>We have microservices which work with different, but related data. For example, ads and their stats. We want to be able to filter, sort and aggregate this related data for UI(and not only for it). For example, we want to show to a user ads which have 'car' in their text and which have more than 100 clicks.</p>&#xA;&#xA;<p><strong>Challenges:</strong></p>&#xA;&#xA;<ul>&#xA;<li>There could be a lot of data. Some users have millions of rows after filtration</li>&#xA;<li>Services doesn't have all the data. For example, for statistics service ad without stats == non existent ad. It doesn't know anything about such ads. But sorting and filtration should work anyway(ad without stats should be considered as ad without zero clicks)</li>&#xA;</ul>&#xA;&#xA;<p><strong>Requirements:</strong></p>&#xA;&#xA;<ul>&#xA;<li>Eventual consistency within couple of seconds is OK</li>&#xA;<li>Data loss is not acceptable</li>&#xA;<li>5 to 10 seconds filtration and sorting for big clients with millions of rows is OK</li>&#xA;</ul>&#xA;&#xA;<p><strong>Solutions we could think of:</strong></p>&#xA;&#xA;<ul>&#xA;<li>Load all data required by query from all services and filter and sort it in memory.</li>&#xA;<li>Push updates from services to Elasticsearch(or something like this). Elastic handles query and returns ids of desired entities which then loaded from services.</li>&#xA;<li>One big database for all services which has everything</li>&#xA;</ul>&#xA;&#xA;<p>What should we pay attention to? Are there other ways to solve our problem?</p>&#xA;"
46069921,Is there a difference between API gateway pattern and BFF?,2017-09-06 08:07:33,<microservices><netflix-zuul><api-gateway>,1,1333,1,1.0,3,<p>My understanding is that API gateway pattern is like a proxy to all microservices. So client calls the API gateway which takes care of further routing. BFF is a specific case of API gateway pattern where we have a routing mechanism for each type of client. Am I right?</p>&#xA;
46002727,What is the difference between an API-Gateway and an Edge Service?,2017-09-01 14:42:21,<microservices>,1,935,0,0.0,3,"<p>I understand the concept behind an API gateway as described by Richardson:</p>&#xA;&#xA;<p><a href=""http://microservices.io/patterns/apigateway.html"" rel=""nofollow noreferrer"">http://microservices.io/patterns/apigateway.html</a></p>&#xA;&#xA;<p>But what is the difference to an Edge service. Is this a concrete implementation of the API gateway pattern?</p>&#xA;"
41914911,microservice based event store,2017-01-28 21:15:33,<microservices><cqrs><event-store><eventsource>,1,244,0,0.0,3,"<p>Unfamiliar with all the details of domain driven design, would it make sense  in a microservice architecture to think of each service as it's own domain and in turn build an event store per service?</p>&#xA;&#xA;<p>Not totally sure what the trade-offs might be from a single monolithic event store for the entire system. For example, more difficulty replaying conditions in the system or debugging cross service dependencies.</p>&#xA;"
42562820,DDD. Shared kernel? Or pure event-driven microservices?,2017-03-02 18:10:44,<domain-driven-design><microservices><bounded-contexts>,3,1670,1,1.0,3,"<p>I'm breaking my system into (at least) two bounded-contexts: study-design and survey-planning.</p>&#xA;&#xA;<p>There's a concept named ""subject"" (potential subject for interviewing) in the study-design context. We also maintain associations between subjects and populations in that domain.</p>&#xA;&#xA;<p>Now, in the survey-planning, we also need (some) information about the subject (for example: for planning a visit, or even for anticipated selection of questionnaire, in case the population the subject belongs to is known beforehand).</p>&#xA;&#xA;<p>So, I need that ""subject"" in both contexts. </p>&#xA;&#xA;<p>What approach should I pick? Having a shared kernel, as explained in Eric Evans DDD book? I don't mind (at least for now) having the two contexts sharing the same database.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/FKtJ9.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/FKtJ9.jpg"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Or... should I go pure microservice? Meaning: those two can't / shouldn't share database..., and in that case I might have to go the mirroring / duplicating route through event passing: <a href=""https://www.infoq.com/news/2014/11/sharing-data-bounded-contexts"" rel=""nofollow noreferrer"">https://www.infoq.com/news/2014/11/sharing-data-bounded-contexts</a></p>&#xA;&#xA;<p>Any thoughts on which one is better, for the above situation?</p>&#xA;&#xA;<p>Thanks!</p>&#xA;"
42404800,How to build front end for Microservices,2017-02-23 00:20:21,<user-interface><architecture><microservices>,1,477,1,0.0,3,"<p>Let's say I have a dozen microservices. I am wondering where should the front end go. Let's say front end is HTML, Javascript, CSS. One way is to make it a separate service handled by a UI team. So it can form the API gateway where the request from browser comes in first. But this seems against the idea of independent self contained services.<br>&#xA;browser ------> API Gateway ------> Microservices&#xA;<br>&#xA;In <a href=""https://technologyconversations.com/2015/08/09/including-front-end-web-components-into-microservices/"" rel=""nofollow noreferrer"">this</a> link, they say that Javascript and CSS should be served by microservices. API gateway should serve only the HTML page. THere is a nice diagram showing this >>&#xA;<a href=""https://i.stack.imgur.com/1suda.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1suda.png"" alt=""microservices with UI""></a>&#xA;I have two questions<br>&#xA;1. How will this be implemented? How will API gateway serve the JS and CSS files in microservices, and maybe HTML fragments too. How will initial page load happen and from where.<br>&#xA;2. Now we are mingling HTML into microservices. But what if I want to serve Android and iOS apps too? THanks.</p>&#xA;"
39591223,Can SOA and Microservices co-exist?,2016-09-20 10:04:15,<design><architecture><soa><microservices>,3,379,0,0.0,3,<p>It is often documented to build a microservice based architecture from a monolith. Is it also possible to have microservices in SOA based architecture?</p>&#xA;
39540366,Go-kit real world example with inter microservice data transfers,2016-09-16 21:31:37,<go><microservices>,1,947,0,4.0,3,"<p>I try to work with go-kit (gokit.io) and to build real-work application with it.&#xA;I look through examples. These examples are great. But I do not understand how to do services to service communications / data transfers in go-kit framework. </p>&#xA;&#xA;<p>I can see ""real-world"" shipping app, but I do not understand how it could be ""real world"" micro-services. I can see in sources that, for example, they build the booking service just passing foreign repositories into service</p>&#xA;&#xA;<pre><code>type service struct {&#xA;    cargoRepository         cargo.Repository&#xA;    locationRepository      location.Repository&#xA;    routingService          routing.Service&#xA;    handlingEventRepository cargo.HandlingEventRepository&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and later they get data from repositories (this repository belongs to foreign micro-service) just calling the method:</p>&#xA;&#xA;<p><code>locationRepository.Find(...)</code></p>&#xA;&#xA;<p>Could someone please explain me:</p>&#xA;&#xA;<ul>&#xA;<li>how to build micro-service to micro-service communications in go-kit framework? Just show me the way / pattern, please. I do not understand it at all.</li>&#xA;</ul>&#xA;&#xA;<p>I see it as they just share direct access to data. But in real world micro-services, I expected that micro-services will communicate to each other to get needed data. And I do not understand how to do it in go-kit framework.</p>&#xA;"
50134195,Authorization between micro services and users,2018-05-02 12:01:47,<architecture><microservices>,1,127,0,1.0,3,"<p>What would be best way to handle access and authorization between microservices and users?</p>&#xA;&#xA;<p>I'm building an application on microservice architecture. Services speak to each other through REST. there are endpoints that should be accessed only by other microservices and not directly by users, some endpoints are public and some would require users to register or have admin privileges. On top of that Users will have roles like admins and regular users.</p>&#xA;&#xA;<p>I'm trying to figure out if Oauth2 and scopes is the best approach for what I'm trying to achieve. e.g. each microservice will have ""user"" that have permission on certain scopes like ""service1-place-order"". </p>&#xA;"
45241581,Microservices vs functions as service (faas),2017-07-21 15:36:08,<aws-lambda><microservices>,1,909,0,1.0,3,"<p>Microservice architecture is/was next big thing. Easy to deploy, easy to develeop, not as complicated to scale and develop as monolith systems.</p>&#xA;&#xA;<p>Oriented mostly towards containers, it all looked new and promising, but i recently discovered there is a new hype about function as service or faas (aws lambda for example). </p>&#xA;&#xA;<p>Wikipedia says the following about Faas ""Building an application following this model is one way of achieving a ""serverless"" architecture, and is typically used when building microservices applications.""</p>&#xA;&#xA;<p>My conclusion was that in faas one should not worry about maintaining hardware and network resources. But is that the only advantage? Could microservice architecture pattern be fully achieved using functions as service?</p>&#xA;"
45167593,Authorization of actions across microservices,2017-07-18 13:01:29,<web-services><rest><authorization><microservices><event-sourcing>,2,108,1,1.0,3,"<p>A modern multi-user web application imposes a lot of restrictions on the actions that users can perform. In other words, the actions require authority. For example, a user can only change its own personal data, and only members of a group can post content to that group. In a classic monolith application, such restrictions are easily enforced by joining several database tables and acting according to the results of queries. However, with microservices, it becomes much less clear where and how such limitations should be handled.</p>&#xA;&#xA;<p>For the sake of argument, consider a Facebook clone. The whole application consists of several parts:</p>&#xA;&#xA;<ul>&#xA;<li>A front-end, written in JS and other web technologies</li>&#xA;<li>A backend consisting of a number of microservices</li>&#xA;<li>An API for retrieving and submitting data to the backend, i.e. a gateway</li>&#xA;</ul>&#xA;&#xA;<p>As for the business logic, there are (among others) two well-known entities:</p>&#xA;&#xA;<ul>&#xA;<li>Events (as in concerts, birthday parties etc.)</li>&#xA;<li>Posts (text entries existing on walls, pages, events etc.)</li>&#xA;</ul>&#xA;&#xA;<p>Suppose that these two entities are managed by separate services, EventService and PostService. Then consider the following constraint:</p>&#xA;&#xA;<blockquote>&#xA;  <p>A post to an event can be deleted by two kinds of users: the author of the post, and the host(s) of the event.</p>&#xA;</blockquote>&#xA;&#xA;<p>In a monolith, this constraint would've been conceptually very easy to deal with. Upon receiving a request to delete a post, supplying the post id and user id,</p>&#xA;&#xA;<ol>&#xA;<li>Fetch the event which the post belongs to.</li>&#xA;<li>Check if the user is the author of the post.</li>&#xA;<li>If yes, delete the post. If not, fetch the hosts of the event.</li>&#xA;<li>Check if the user is among the hosts.</li>&#xA;<li>If yes, delete the post.</li>&#xA;</ol>&#xA;&#xA;<p>However, with a microservice strategy, I have a hard time figuring out how to divide the responsibilities of an operation like this across the services.</p>&#xA;&#xA;<h2>Alternative 1</h2>&#xA;&#xA;<p>An easy way around it would be to put logic like this in the gateway. That way, the same procedure as described above could essentially be performed, but with calls to the services instead of directly to the database. Rough sketch:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>// Given postId and userId&#xA;// Synchronous solution for presentational purposes&#xA;&#xA;const post = postClient('GET', `/posts/${postId}`);&#xA;const hosts = eventClient('GET', `/events/${post.parentId}/hosts`);&#xA;const isHost = hosts.find(host =&gt; host.id == userId);&#xA;&#xA;if (isHost) {&#xA;    postClient('DELETE', `/posts/${postId}`);&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However, I'm not happy with this solution. Once I start putting logic like this in the gateway, it'll become very tempting to <em>always</em> do it, as it's a quick and simple way to get things done. All business logic would eventually amass in the gateway, and the services would become ""stupid"" CRUD endpoints. This would defeat the purpose of having separate services with well-defined areas of responsibility.  Furthermore, it could be slow as it could give rise to a high number of calls to the services when operations are getting more complex.</p>&#xA;&#xA;<p>I would essentially be reinventing the monolith, replacing database queries with slow and limited network calls.</p>&#xA;&#xA;<h2>Alternative 2</h2>&#xA;&#xA;<p>Another option would be to allow unlimited communication <em>between</em> services, allowing PostService to simply ask EventService whether the user is a host of the event in question before performing the delete. However, I'm afraid that having a potentially large number of microservices communicating with each other could introduce a lot of coupling in the longer run. Experts seem to generally advise against direct inter-service communication.</p>&#xA;&#xA;<h2>Alternative 3</h2>&#xA;&#xA;<p>With a solid system for publishing and subscribing to events, the services could stay updated about what happens in other services. For example, every time a user is promoted to host in EventService, an event would be posted (e.g. <code>events.participant-status-changed, {userId: 14323, eventId: 12321, status: 'host'}</code>). PostService could subscribe to the event and remembering this fact when a request to delete a post is received.</p>&#xA;&#xA;<p>However, I'm not quite happy with this one either. It'd create a very intricate and error-prone system, where an unhandled (but potentially rare) event could make services go out of sync. Also, there's a risk that logic would end up in the wrong place. For example, the constraint in this question would be handled by PostService even though conceptually it's a property of the event entity.</p>&#xA;&#xA;<p>I should stress though that I'm very optimistic about the usefulness of events when implementing applications using microservices. I'm just not sure they are the answer to this category of problems.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>How would you tackle this hypothetical, but quite realistic difficulty?</p>&#xA;"
45351222,Is it possible to proxy a POJO in microservices application?,2017-07-27 12:45:39,<java><spring-boot><microservices>,1,140,2,0.0,3,"<p>I would like to avoid duplicating my POJOs in a microservices application, so I am wondering if there is a way to do that (like proxying)?</p>&#xA;&#xA;<p>I mean, is there a way for a <code>Service A</code> to access POJOs (or other classes/interfaces) defined inside a <code>Service B</code> without physically creating these POJOs classe files in <code>Service A</code>? </p>&#xA;&#xA;<p>The big big challenge in a microservice architecture is that point and I didn't find a way to solve it.</p>&#xA;"
51889526,Why would we go for micro-services if there is requirement for lower latency code?,2018-08-17 06:25:20,<java><microservices>,1,63,8,1.0,3,"<p>In a monolith, we just need to either make a function call or method invocation as opposed to inter process communication. Can someone familiar with micro-services architecture help to understand reasons how you can use micro services for developing low latency applications?</p>&#xA;&#xA;<p>I think Chronicle framework claims that you can develop micro-services based products and use chronicle queues to communicate without incurring network hop latency. </p>&#xA;"
45688730,Decompose microservices: Business capability vs Domain,2017-08-15 08:01:46,<domain-driven-design><microservices><software-design>,1,1010,2,3.0,3,"<p>As I read, there are two patterns to define one microservice, by <a href=""http://microservices.io/patterns/decomposition/decompose-by-business-capability.html"" rel=""nofollow noreferrer"">business capability</a> and by <a href=""http://microservices.io/patterns/decomposition/decompose-by-subdomain.html"" rel=""nofollow noreferrer"">subdomain</a>. But I still find it very ambiguous. I get confused how these two patterns differentiate from each other. Both of them revolve around activities involving an area of business logic. All of components in each service are small enough to get packaged with each other without affecting other services. Could anyone please give me a further explanation about these two?</p>&#xA;"
29071226,What is a good practice to promote a microservice to a public API?,2015-03-16 07:03:15,<design><architecture><microservices>,3,996,0,3.0,4,"<p>Microservices seem to be a very good fit for my software after watching and reading number of articles from Martin Fowler, Sam Newman, Adrian Cockcroft and Sudhir Tones. However, when thinking deeper into the implementation, there are number of concerns:</p>&#xA;&#xA;<ol>&#xA;<li>My software has an UI, let's call it a web-based component. This component will need to coordinate/orchestrate calls to 10-20 different microservices internally (let's call it ""private microservices"") and return data to the AJAX call. Is it a good design to couple the orchestration logic in this component? Or should I create another microservice that does the job and the web-based component should be very thin to delegate the call to this microservice?</li>&#xA;<li>I will need to expose some public APIs. Should I have a separate layer to delegate the call like in the case above? </li>&#xA;</ol>&#xA;&#xA;<p>I think it might be more or less about the design pattern for public/private microservices. </p>&#xA;&#xA;<p>What would be a good pattern to address the above concerns?</p>&#xA;&#xA;<p><strong>Updated on 9 Apr 2015</strong>:</p>&#xA;&#xA;<p>API Gateway Pattern actually addresses my concerns. I also agree with other answers regarding EAI patterns or security consideration.</p>&#xA;&#xA;<p>To extend more regarding my findings, I think Netflix architecture is having, so-called ""edge service"", which is the front tier that is serving requests coming from either web-based or devices and the middle-tier services are actually your microservices. So i think to promote a middle-tier service to be an edge-service, this has to be a delegate. It will keep the middle-tier clean and consistent. </p>&#xA;&#xA;<p>Have a look at <a href=""https://github.com/cfregly/fluxcapacitor#project-overview"" rel=""nofollow"">https://github.com/cfregly/fluxcapacitor#project-overview</a> to have more ideas.</p>&#xA;"
33118913,Authentication and Authorization in Microservices,2015-10-14 07:13:53,<authentication><oauth-2.0><authorization><microservices>,1,608,0,1.0,4,"<p>I've been reading a fair bit on Microservices recently, and especially around AuthN and AuthZ. For the most part, this all makes a lot of sense, and I can see how it all should work.</p>&#xA;&#xA;<p>For what I'm playing with, I going with delegated authorization - so I'm to be passing tokens around from client to service, and then passing the same token on from service to service. I also have an endpoint on the OAuth2 Service that will accept a token and return the details of the token - the User ID, the Start and End of the validity period, the scopes that the token is valid for, etc.</p>&#xA;&#xA;<p>The problem that I'm running into here is - in order to correctly issue a token, there needs to be some communication with the User Service to ensure that the User that the token is for is actually valid. And in order to verify a Token, there needs to be some communication with the User Service to ensure that the User is still valid. And yet, in order to safely communicate with the User Service to get details about a User, a Token is needed that gives permission for this access.</p>&#xA;&#xA;<p>I assume there is some standard practice on how to solve this circular dependency between the OAuth2 and User Service, but I've not seen any mention of it at all. Is this a common problem? Or have I just missed something obvious?</p>&#xA;&#xA;<p>(Note - for now I'm only implementing Client Credentials Grant and Resource Owner Password Credentials Grant, since I'm only playing around to see how it all works and they're easier to call with cURL. I don't know that this makes any difference though)</p>&#xA;"
39015444,Should instances of a horizontally scaled microservice share DB?,2016-08-18 10:08:28,<docker><soa><microservices>,1,134,0,3.0,4,"<p>Given a microservice that owns a relational database and needs to scale horizontally, I see two approaches to provisioning of the database server:</p>&#xA;&#xA;<ul>&#xA;<li>provide each instance of the service with it's own DB server instance with a coupled process lifecycle </li>&#xA;</ul>&#xA;&#xA;<p>OR</p>&#xA;&#xA;<ul>&#xA;<li>have the instances connect to a shared (by identical instances of the same service) independent db server or cluster</li>&#xA;</ul>&#xA;&#xA;<p>With an event driven architecture and the former approach, each instance of the microservice would need to process each event and take the appropriate action to mutate its own isolated state. This seems inefficient.  </p>&#xA;&#xA;<p>Taking the latter approach, only one instance has to process the event to achieve the same effect but as a mutation of the shared state. One must ensure each event is processed by only one instance of the given microservice (is this trivial?) to avoid conflict.</p>&#xA;&#xA;<p>Is there consensus on preferred approach here? What lessons has your experience taught you on this?</p>&#xA;"
41445442,How to sync the database with the microservices (and the new one)?,2017-01-03 14:12:27,<mysql><database><message-queue><microservices><nsq>,1,888,12,0.0,4,"<p>I'm developing a website with the microservice architecture, and each of the service owns a database. The database stores the data which the microservice needs.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p><code>Post</code>, <code>Video</code> services need the user information, so both of the services subscribed to the <code>NEW_USER_EVENT</code>. </p>&#xA;&#xA;<p>The <code>NEW_USER_EVENT</code> will be triggered when there's a new user registered.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/0SY8a.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0SY8a.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Once the services received the <code>NEW_USER_EVENT</code>, they put the incoming user information to each of their own database. So they can do things without asking the <code>User</code> service.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/NR8Xk.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/NR8Xk.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>So far so good. But here comes the question:</p>&#xA;&#xA;<ul>&#xA;<li>What if I'm going to create a new service? How do I get the registered user informations and put them in the new service?</li>&#xA;</ul>&#xA;&#xA;<p>Maybe I can get the informations from the existing services. But the events are pushed by the messaging queue (<code>NSQ</code>). </p>&#xA;&#xA;<p>If I'm going to copy the data from one of the microservices, how do I make sure which service has the latest user informations? (<em>Because some services haven't received the latest event</em>) </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/vJoGv.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vJoGv.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<hr>&#xA;&#xA;<p><em>Read More:</em></p>&#xA;&#xA;<p><a href=""http://blog.christianposta.com/microservices/the-hardest-part-about-microservices-data/"" rel=""nofollow noreferrer"">The Hardest Part About Microservices: Your Data</a></p>&#xA;&#xA;<p><a href=""https://auth0.com/blog/introduction-to-microservices-part-4-dependencies/"" rel=""nofollow noreferrer"">Intro to Microservices, Part 4: Dependencies and Data Sharing</a></p>&#xA;"
31717615,Databases in a microservices pattern/architecture,2015-07-30 07:27:01,<web-services><rest><design-patterns><microservices>,2,453,0,3.0,4,"<p>I'm trying to understand the layout of the microservices pattern. Given that each microservice would run on its on VM (for sake of example) how does the database fit into this architecture? </p>&#xA;&#xA;<p>Would each service, in turn, connect to the consolidated database to read/write data? </p>&#xA;&#xA;<p>Thanks for any insight</p>&#xA;"
35465175,"microservice architecture questions about code resue, security and database sharing",2016-02-17 18:49:53,<microservices>,1,117,0,1.0,4,<p>I have the following questions about micro service architecture</p>&#xA;&#xA;<ol>&#xA;<li><p>How common code/utility-libs are being reused between different micro services? Where this common code is also being developed</p></li>&#xA;<li><p>In my micro-service some services are for clients and some can be internal ( for other micro services to use). What is the best option to make internal services secure?</p></li>&#xA;<li><p>What if two micro-services has to use the same database? Say they do totally different operations but using the same database table?</p></li>&#xA;<li><p>Micro services are mostly about the back end but the GUI is going to be the same. In that case each micro service deployment requires website update as well. Is that consider as a disadvantage?</p></li>&#xA;</ol>&#xA;
47938835,How to create replay mechanism within event-drive microservice,2017-12-22 09:17:08,<java><architecture><transactions><microservices><event-driven-design>,2,170,3,1.0,4,"<p>We have 7 microservices communicated via eventbus.&#xA;We have a real-time transaction sequence:</p>&#xA;&#xA;<p>Service 1->service2->service3 (and so on.) Until transactions considered as completed</p>&#xA;&#xA;<p>We must make sure all transactions happened.</p>&#xA;&#xA;<p>Ofcourse we can have failures at any point. So we are thinking about mechanisem to replay ""half-baked"" transactions into completion.</p>&#xA;&#xA;<p>It's getting tricky. Two ways we thought about:</p>&#xA;&#xA;<ol>&#xA;<li><p>Having another service (supervisor service) that will log each part in our real time sequence and will be smart enough when transactions are not completed (timedout) to understand how we can continune from left point</p>&#xA;&#xA;<p>Disadvantages:&#xA;lots of ""smart"" logic on one central service</p></li>&#xA;<li><p>having retry mechanisem on every service while each one taking care of it's own and replay it's own until success or exhusated</p>&#xA;&#xA;<p>Disadvantages:&#xA; lots of retry duplicated code on each service</p></li>&#xA;</ol>&#xA;&#xA;<p>What do you experts think?</p>&#xA;&#xA;<p>Thank</p>&#xA;"
31190685,Microservices explained,2015-07-02 17:07:56,<php><microservices>,4,1266,0,1.0,4,<p>I'm trying to understand micro services. Can someone please explain to me how it works? I've looked at several tutorials and still confused.</p>&#xA;&#xA;<p>Let's say you have a shopping application. What are the different microservices entailed for such an application?</p>&#xA;&#xA;<p>I will need to do the following</p>&#xA;&#xA;<ul>&#xA;<li>Account creation</li>&#xA;<li>Charge the customer</li>&#xA;<li>Get a list of items for sale&#xA;etc</li>&#xA;</ul>&#xA;
30288968,Micro Services and noSQL - Best practice to enrich data in micro service architecture,2015-05-17 16:03:12,<microservices>,4,2100,0,5.0,4,"<p>I want to plan a solution that manages enriched data in my architecture.<br>&#xA;To be more clear, I have dozens of micro services.<br>&#xA;let's say - Country, Building, Floor, Worker.<br>&#xA;All running over a separate NoSql data store.  </p>&#xA;&#xA;<p>When I get the data from the worker service I want to present also the floor name (the worker is working on), the building name and country name.</p>&#xA;&#xA;<p><strong>Solution1.</strong><br>&#xA;Client will query all microservices.<br>&#xA;Problem - multiple requests and making the client be aware of the structure.<br>&#xA;I know multiple requests shouldn't bother me but I believe that returning a json describing the entity in one single call is better.</p>&#xA;&#xA;<p><strong>Solution 2.</strong><br>&#xA;Create an orchestration that retrieves the data from multiple services.<br>&#xA;Problem - if the data (entity names, for example) is not stored in the same document in the DB it is very hard to sort and filter by these fields.</p>&#xA;&#xA;<p><strong>Solution 3.</strong><br>&#xA;Before saving the entity, e.g. worker, call all the other services and fill the relative data (Building Name, Country name).<br>&#xA;Problem - when the building name is changed, it doesn't reflect in the worker service. </p>&#xA;&#xA;<p><strong>solution 4.</strong><br>&#xA;(This is the best one I can come up with).<br>&#xA;Create a process that subscribes to a broker and receives all entities change.<br>&#xA;For each entity it updates all the relavent entities.<br>&#xA;When an entity changes, let's say building name changes, it updates all the documents that hold the building name.<br>&#xA;Problem:&#xA;Each service has to know what can be updated.&#xA;When a trailing update happens it shouldnt update the broker again (recursive update),  so this can complicate to the microservices.</p>&#xA;&#xA;<p><strong>solution 5.</strong><br>&#xA;Keeping everything normalized. Fileter and sort in ElasticSearch.&#xA;Problem: keeping normalized data in ES is too expensive performance-wise</p>&#xA;"
30267737,Microservice Database shared with other services,2015-05-15 19:56:41,<mysql><web-services><deployment><microservices>,1,1114,3,1.0,4,"<p>Something I have searched for but cannot find a straight answer to is this:</p>&#xA;&#xA;<p>For a given service, if there are two instances of that service deployed to two machines, do they share the same persistent store or do they have separate stores with some syncing mechanism (master/slave, clustering)?</p>&#xA;&#xA;<p>E.g. I have a OrderService backed by MySQL. We're getting many orders in so I need to scale this service up, so we deploy a second OrderService. Where does its data come from?</p>&#xA;&#xA;<p>It may sound silly but, to me, every discussion makes it seem like the service and database are a packaged unit that are deployed together. But few discussions mention what happens when you deploy a second service.</p>&#xA;"
36519652,Share data between microservices,2016-04-09 16:32:32,<database-design><architecture><microservices>,2,2792,0,2.0,4,"<p>I work on a microservices architecture and I want to solve a small data sharing problem (I don't know if is the right word).</p>&#xA;&#xA;<p>Example :</p>&#xA;&#xA;<p>I have one user service and is DB that stores email, username, password...</p>&#xA;&#xA;<p>I have another service and his database that work with the user data for generate documents with the user informations.</p>&#xA;&#xA;<p>Which is the best way for the second service for accessing to the user data ? Replicate user data (Just if is required for his job) for her in is database ?</p>&#xA;"
42981194,How do you handle validation in composite microservice request?,2017-03-23 16:01:34,<architecture><microservices><software-design><distributed-transactions>,3,1030,0,0.0,4,"<p>Consider an application with two entities:</p>&#xA;&#xA;<ul>&#xA;<li><code>User</code> (contains basic user data, such as name)</li>&#xA;<li><code>Passport</code> (contains authentication credentials, i.e. password)</li>&#xA;</ul>&#xA;&#xA;<p>And two internal microservices:</p>&#xA;&#xA;<ul>&#xA;<li><code>UserService</code> (responsible for creating and managing users and their basic data)</li>&#xA;<li><code>AuthService</code> (responsible for user authentication and password handling)</li>&#xA;</ul>&#xA;&#xA;<p>The <code>User</code> entity belongs to the <code>UserService</code> and <code>Passport</code> entity belongs to the <code>AuthService</code>.</p>&#xA;&#xA;<p>Those two services should be separated, because they solve very different tasks: <em>profile data</em> and <em>authentication</em>.</p>&#xA;&#xA;<p>Also, consider we have a registration form with three fields:</p>&#xA;&#xA;<ul>&#xA;<li>E-Mail</li>&#xA;<li>Name</li>&#xA;<li>Password</li>&#xA;</ul>&#xA;&#xA;<p>This form will trigger HTTP-request to the <code>GatewayService</code>, which intercepts all requests to the application and routes them to internal microservices (or composes/aggregates them).</p>&#xA;&#xA;<p>Now, when gateway service receives the request with all the form data it needs to do the following:</p>&#xA;&#xA;<ol>&#xA;<li>Call <code>UserService</code> to create new user (it will respond with generated <code>userId</code>).</li>&#xA;<li>Call <code>AuthService</code> to create a passport for newly created user. It will need the <code>userId</code> received in step #1 and a <code>password</code> field from the original request.</li>&#xA;</ol>&#xA;&#xA;<p>This looks pretty straightforward, but what will happen if <code>AuthService</code> is unavailable on step #2? We will need to somehow separate those requests!</p>&#xA;&#xA;<p>The classic approach is to use the eventual consistency and to create <code>Passport</code> entity via asynchronous call (we can place this request to the queue and process it in separate service). In order to do this we will send an asynchronous request to the <code>AuthService</code> passing <code>userId</code> and <code>password</code> to it, instead of step #2, so the step #1 will immediately return response to the client.</p>&#xA;&#xA;<p>However, what if <code>password</code> field is not properly formatted (breaks validation rules)? The validation logic is only present in the <code>AuthService</code>, so we can't know if password is correct until the call is made to it. And now, the request is processed asynchronously, so we can't get back to user and tell him to correct the password.</p>&#xA;&#xA;<p><strong>SO, how do you properly handle validation in distributed composite requests to microservice application?</strong></p>&#xA;&#xA;<ol>&#xA;<li><p>The naive solution is to move validation logic to the <code>GatewayService</code> itself, but it's a terrible idea, because it will make it fat and will leak business logic from <code>AuthService</code>.</p></li>&#xA;<li><p>The other idea is to provide an additional method for password validation and to call it prior to steps #1 and #2. It looks like a viable solution, but it will force us to have two methods for each business method in our microservices, one for prior validation and one for actual operation. Also, there is a time space between validation and operation, so the earlier correct value could become incorrect when operation is actually performed.</p></li>&#xA;<li><p>We could split the form in two to avoid composite requests and ask user for password after asking for personal data and creating an account for him. However, this could lead to security problems, where user account could be intercepted by some other party who could guess the next <code>userId</code>. We could, use some additional security token, but it will introduce odd functionality to services and will make the whole setup more complex.</p>&#xA;&#xA;<p>Also, this approach looks like an attempt to escape the problem, you can't always avoid composite requests.</p></li>&#xA;<li><p>We could use full-scale distributed transactions, e.g. <a href=""https://en.wikipedia.org/wiki/Two-phase_commit_protocol"" rel=""nofollow noreferrer"">2PC</a>, but it will make the system dramatically complex and will mitigate the use of MSA in the first place.</p></li>&#xA;<li><p>And the final idea is to merge those two services together, but it will make no sense in microservice architecture to do so.</p></li>&#xA;</ol>&#xA;"
38554037,How to deal with shared models in micro service architectures,2016-07-24 16:06:26,<node.js><microservices>,3,1289,1,0.0,4,"<p>My goal is to create an architecture in which services should be able to deploy independent of each other and are completely autonomous, but what do you do when you have 2 services that reads from DB the same object type?</p>&#xA;&#xA;<p>In my case I have a socket server (micro service 1) and a http server (micro service 2). Using the http server my users creates an asset called: A, this asset gets stored on a DB and a mongoID is returned. Then, using another protocol and the ID, there are calls to the socket server that needs to check that validity of that ID, thus, needs to read from DB. This two services will have to share the model of A in order to map it to an object, but this means the 2 services will have to share code, and that's not ok.</p>&#xA;&#xA;<p>Do I need another service? or should I make only service1 able to read from DB and then make the second one talks to service 1?</p>&#xA;"
44582199,"Angular microservices, loadChildren from url",2017-06-16 06:25:06,<angular><architecture><microservices>,1,383,0,2.0,4,"<p>I recently started thinking of how to effectively implement Angular in a microservices architecture.</p>&#xA;&#xA;<p>Let's say we have a service for login, a service for user management and a service for browsing, adding and editing certain media. Each service has its own backend and frontend served in its own private container. So each part is then isolated with a clearly defined API to interact with for the backend, and its own isolated user interface consuming this API.</p>&#xA;&#xA;<p>Now, let's say I would like to tie up each of these microservices into a single application. I have two ways (as far as I can see) to do this:</p>&#xA;&#xA;<ol>&#xA;<li><p>I can configure a server to place each service under a sub-url, and have the application be an array of SPA's, a sort of MPA (Multi Page App). </p></li>&#xA;<li><p>I can create a master app where I set up the routes for each of my micro-apps and load them on demand (custom PreloadingStrategy, I'm looking at you).</p></li>&#xA;<li><p><sup>I also found <a href=""https://stackoverflow.com/questions/39904153/front-end-micro-services-with-angular-2#answer-39937403"" title=""this"">this</a>, a process which I personally don't think highly of, because you'll lose many of the benefits of microservices in a continuous delivery scheme of things. This aims to create a SPA monolith out of microservices.</sup></p></li>&#xA;</ol>&#xA;&#xA;<p>Now, the first alternative seems like a chore, and no fun at all. The second is intriguing to me. I came accross this article: <a href=""https://coryrylan.com/blog/custom-preloading-and-lazy-loading-strategies-with-angular"" rel=""nofollow noreferrer"">https://coryrylan.com/blog/custom-preloading-and-lazy-loading-strategies-with-angular</a> and immediately started thinking; how can I exploit this to load pre-built angular modules from a url instead of packaging them from the file system?</p>&#xA;&#xA;<p>So my question is; has anybody done this before? Is it possible? Are there security issues in doing this?&#xA;Or are there other alternatives of tying up my microservices into a larger application?</p>&#xA;"
37739538,API Gateway example for node.js,2016-06-10 03:45:31,<node.js><microservices>,1,2858,0,1.0,4,"<p>Looking for a good example of how to implement a node API gateway for a microservice application, I understand the purpose of having a gateway, I am just not sure of how to implement this without just adding another level of RESTful route calls. To me a gateway is supposed to just direct the route to the microservice. </p>&#xA;&#xA;<p><strong>API Gateway port 3000</strong></p>&#xA;&#xA;<pre><code>router.use('/microservicename/*', function (req, res, next) {&#xA;     **code that will direct to microservice**&#xA;});&#xA;</code></pre>&#xA;&#xA;<p><strong>Microservice1 server.js port 3001</strong></p>&#xA;&#xA;<pre><code>var express = require('express');&#xA;var app = express();&#xA;&#xA;var routes = require('./routes/routes');&#xA;&#xA;app.use('/microservicename', routes);&#xA;&#xA;var server = app.listen(3001, function () {&#xA;    console.log('Server running at http://127.0.0.1:3001/');&#xA;});&#xA;</code></pre>&#xA;&#xA;<p><strong>Microservice1 router.js (3001)</strong></p>&#xA;&#xA;<pre><code>router.get('/route1', function (req, res, next) {&#xA;  //get route code&#xA;});&#xA;&#xA;router.post('/route2', function (req, res, next) {&#xA;  //post route code&#xA;});&#xA;&#xA;router.put('/route3', function (req, res, next) {&#xA;  //put route code&#xA;});&#xA;&#xA;router.delete('/route4', function (req, res, next) {&#xA;  //delete route code&#xA;});&#xA;</code></pre>&#xA;"
46315996,Transformation from Legacy to Microservices architecture,2017-09-20 07:38:36,<rest><design><microservices><soa>,2,156,0,2.0,4,"<p>I want to discuss a transformation from fat DB to microservices architecture.</p>&#xA;&#xA;<p><strong>A bit of history:</strong>&#xA;So we have a legacy loan application system, which captures customer detail into a FAT database with some 1000+ tables. The application is doing a lot more than just just capturing loan with 100+ screens/processes built that are beyond loan capturing. Like administration, reporting, config etc.</p>&#xA;&#xA;<p><strong>Current State:</strong>&#xA;The whole Presentation Layer, Logic Layer, DB Layer, ORM layer is part of the one project.</p>&#xA;&#xA;<p><strong>Current Task In Hand:</strong>&#xA;The app is built in Win Forms, and my job is transform it to Modern UI as we need modern feature. </p>&#xA;&#xA;<p><strong>Approach:</strong>&#xA;The approach I am taking is to built some Micro Services on current DB Structure. Using the same DB will allow the current application to run as it is, and we can write a new DB Layer, Logic Layer in some Micro Services. We can then write Modern User Interface (angular/react) that will consume those services. &#xA;The second step then will be then stop the use of capturing operation from legacy app.</p>&#xA;&#xA;<p>Third step is to move the specific DB tables out of the legacy databases to their own databases.</p>&#xA;&#xA;<p>This approach seems best by keeping the current operation running as it is. Also, this approach allows us to run both applications parallel on the production environment. </p>&#xA;&#xA;<p><strong>Confusion:</strong>&#xA;The question I have is on detailed design. I am struggling to understand the context split in Micro Services. The information in the scope of first iteration is:&#xA;- Some Qualification Questions&#xA;- Contact details&#xA;- App requirements&#xA;- Bank Details&#xA;- Income details&#xA;- Expense details&#xA;- Previous loan information</p>&#xA;&#xA;<p>The microservices I am thinking to have is&#xA; - Application Service&#xA;    - Qual questions&#xA;    - App requirements&#xA;    - Previous Loan information&#xA;    - Income/Expense details&#xA; - Demographics Information&#xA;    - Bank Details&#xA;    - Contact Details</p>&#xA;&#xA;<p><strong>Questions:</strong>&#xA;- Does the approach sounds correct from legacy to microservices?&#xA;- The microservice split. Can someone suggest if this is right?</p>&#xA;&#xA;<p>Thanks a lot in advance.&#xA;Regards&#xA;Gaurav Sharma</p>&#xA;"
47451190,Kafka instead of Rest for communication between microservices,2017-11-23 08:53:42,<rest><apache-kafka><microservices>,1,912,0,1.0,4,"<p>I want to change the communication between (micro)-services from REST to Kafka.&#xA;I'm not sure about the topics and wanted to hear some opinions about that.</p>&#xA;&#xA;<p>Consider the following setup:&#xA;I have an API-Gateway that provides CRUD functions via REST for web applications. So I have 4 endpoints which users can call.&#xA;The API-Gateway will produce the request and consumes the responses from the second service.&#xA;The second service consumes the requests, access the database to execute the CRUD operations on the database and produces the result.</p>&#xA;&#xA;<p>How many topics should I create?&#xA;Do I have to create 8 (2 per endpoint (request/response)) or is there a better way to do it?</p>&#xA;&#xA;<p>Would like to hear some experience or links to talks / documentation on that.</p>&#xA;"
52031350,How ACID works in a restful micro-service architecture,2018-08-27 00:47:44,<java><rest><microservices><acid>,1,59,2,1.0,4,"<p>I'm pretty new at implementing microservice architecture and this question is breaking my mind</p>&#xA;&#xA;<p>How a microservice architecture address transactional mechanism between different end-points calls.</p>&#xA;&#xA;<p>An example is banking services based on a microservice architecture&#xA;basically, the banking operation is for different calls to different services to complete a transaction, if one of them fails, then there is no way to eliminate the partial process, I do not know if there is any mechanism to solve this problem</p>&#xA;&#xA;<blockquote>&#xA;  <p><strong>create a payment</strong></p>&#xA;  &#xA;  <p><strong>POST</strong> /payments/customer/10/payment/100/ </p>&#xA;  &#xA;  <p><strong>debit money from the account</strong></p>&#xA;  &#xA;  <p><strong>PUT</strong> /customers/10/accounts/20</p>&#xA;  &#xA;  <p><strong>Send a customer notification</strong></p>&#xA;  &#xA;  <p><strong>POST</strong> /alerts/customers/10</p>&#xA;</blockquote>&#xA;"
43246560,Microservices Architecture: Chatty services or data duplication,2017-04-06 05:39:28,<architecture><domain-driven-design><microservices>,3,395,0,1.0,4,"<p>TL;DR Should a service opt for saving data in its local database that it needs occasionally, or request the data every time from the service that the data originated from?</p>&#xA;&#xA;<p>Let's have some generic example of a web store / ordering app. Service A is a user session management service. It handles business logic of what a user is doing, what he can do, etc. The user can create his own shirt for purchase. Service B is a data aggregator that contains a lot of the inventory and what's available.</p>&#xA;&#xA;<p>The user starts creating a shirt, so service A request from service B, what styles/colors are available. Service B sends down a list of possible choices which service A then displays for the user. The user then selects one, customizes it and moves on to a new shirt. Again service A has to request from service B, what styles/colors are available. </p>&#xA;&#xA;<p>Now let's assume within a life cycle of a user session, these styles/colors won't change and we know this is going to be the same data being retrieved over and over again. Not by just this user, but all users. So in this case, since the styles/colors are really part of Service B's domain, they should stay there and live there, or would it be advised to prevent all these needless calls and upon the first request (temporarily) save in Service A the data for the lifecycle of the session to prevent chatty services.</p>&#xA;&#xA;<p>This is an over-simplified example but the problem remains real-world. Which is more suggested way of architecting this design? &#xA;This usually applies for example when some fairly-static data is passing through some service, and this service will need this data again a few times within the lifecycle of these transactions. So I'm unsure whether the service should just save it temporarily for the life-cycle knowing the data won't change or not caring if it changes within the lifecycle or opt for more chatty services and keep requesting every time.</p>&#xA;"
41067341,"what is the difference between distributed computing, microservice and parallel computing",2016-12-09 19:11:53,<terminology><distributed-computing><microservices>,1,2395,0,1.0,4,"<p>My basic understanding for:</p>&#xA;&#xA;<p>Distributed computing is a model of connected nodes -from hardware perspective they share only network connection- and communicate through messages. each node code be responsible for one part of the business logic as in ERP system there is a node for hr, node for accounting. communication could be HTML, SOA, RCP</p>&#xA;&#xA;<p>Microservice is a service that is responsible for one part of the business logic and communicate with each other usually by http. microservices could share the hardware resources and are accessed by thier api.</p>&#xA;&#xA;<p>Parallel systems are systems which optimize the use of resources. for example multithreaded app running on several thread where sharing memory resources.</p>&#xA;&#xA;<p>I am a little bit confused since microservices are distributed systems, but when running multiple microservices on single hardware resources they are also parallel systems. Am i getting it right here:</p>&#xA;"
29787063,"Is kafka a good fit for a small scale microservices environment, or should I look for lightweight alternatives",2015-04-22 03:16:02,<apache-kafka><microservices>,2,1786,0,4.0,4,"<p>I'm working on a series of applications that will be deployed as microservices. Each one will have a separate database and I'm looking to coordinate data through single unified event store/log like Apache Kafka. I've started experimenting with Kafka, and most users seem to be using kafka at fairly large scale with clustering and fairly complex fault tolerance setups. We don't anticipate having particularly large volume initially, so I'm wondering if Kafka is the right choice? Is this a good fit for kafka or should I be looking at lighterweight alternatives given our current scale.</p>&#xA;"
41837637,Microservices vs multi-layered architecture,2017-01-24 19:45:25,<asp.net-web-api><architecture><microservices><multi-layer>,1,2806,0,1.0,4,"<p>My project has one backend service (Web API) and one frontend SPA application. Backend service has presentation, application services, domain and infrastructure layers located in different .net assemblies. Domain layer has business domain objects, infrastructure – communication with external data and other stuff, application services – set of services used by presentation layer, presentation – Web API controllers. I think it’s very common layered architecture.</p>&#xA;&#xA;<p>Our new architect announced we are going to move backend to microservices architecture braking down our layers and dividing domain, application service and infrastructure layers to a few services and convert presentation layer to backend for frontend layer (as <a href=""http://samnewman.io/patterns/architectural/bff/"" rel=""nofollow noreferrer"">here</a> described). In feature, we are going to have mobile application. Sql Server database is going to leave as is for now.</p>&#xA;&#xA;<p>I don’t have experience with microservice architecture, so my questions are: &#xA;Is multi-layered architecture out of fashion already? What benefits and problems can bring such architecture design for my application?</p>&#xA;"
42498492,Avoid bottlenecks in microservices,2017-02-28 00:51:28,<microservices>,1,295,0,2.0,4,"<p>I'm going to apply Microservices for my Datawarehouse application. There are 4 main Microservices in application:</p>&#xA;&#xA;<p>1) Data Service: Import/Export external data sources to DWH and Query data from DWH.</p>&#xA;&#xA;<p>2) Analytics Service: for chart visualization on UI</p>&#xA;&#xA;<p>3) Machine Learning: for recommendation system</p>&#xA;&#xA;<p>4) Reports: for report generating</p>&#xA;&#xA;<p>The diagram as below:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/hW6lc.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/hW6lc.jpg"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Each service has its own DB and they communicate directly with each other via TCP and Thift serialization. The problem here is Data Service suffer a high load from other services and can become a SPOF of application. Data in DWH is big too (maybe up to hundred miliions of records). How to avoid the bottlenecks for Data Service in this case? Or How do I define a properly bounded context to avoid the bottlenecks?</p>&#xA;"
43609390,User as a microservice,2017-04-25 11:26:44,<architecture><microservices>,1,506,1,1.0,4,"<p>I'm working on PAAS solution as a product. we have divided business processes in several microservices. One core part of the processes is closely connected to nearly all microservices.</p>&#xA;&#xA;<p>Is this a good practice to create a separate service to manage data such as user management? After the implementation, only this service will have access to users and other related DB tables. All other services will have to call this new user microservice for user related tasks.</p>&#xA;&#xA;<p>This approach will enforced us to refactor DB schema by adding denormalization. We would not get underlying tables that is served among multiple microservices. If serveral services needs data, it would be shared via a microservice.</p>&#xA;"
47554214,Design choice for a microservice event-driven architecture,2017-11-29 13:39:28,<domain-driven-design><microservices><cqrs>,3,248,0,1.0,4,"<p>Let's suppose we have the following:</p>&#xA;&#xA;<p>DDD aggregates A and B, A can reference B.</p>&#xA;&#xA;<p>A microservice managing A that exposes the following commands:</p>&#xA;&#xA;<ul>&#xA;<li>create A</li>&#xA;<li>delete A</li>&#xA;<li>link A to B</li>&#xA;<li>unlink A from B</li>&#xA;</ul>&#xA;&#xA;<p>A microservice managing B that exposes the following commands:</p>&#xA;&#xA;<ul>&#xA;<li>create B</li>&#xA;<li>delete B</li>&#xA;</ul>&#xA;&#xA;<p>A successful creation, deletion, link or unlink always results in the emission of a corresponding event by the microservice that performed the action.</p>&#xA;&#xA;<p>What is the best way to design an event-driven architecture for these two microservices so that:</p>&#xA;&#xA;<ol>&#xA;<li>A and B will always eventually be consistent with each other. By consistency, I mean A should not reference B if B doesn't exist.</li>&#xA;<li>The events from both microservices can easily be projected in a separate read model on which queries spanning both A and B can be made</li>&#xA;</ol>&#xA;&#xA;<p>Specifically, the following examples could lead to transient inconsistent states, but consistency must in all cases eventually be restored:</p>&#xA;&#xA;<p><strong>Example 1</strong></p>&#xA;&#xA;<ul>&#xA;<li>Initial consistent state: A exists, B doesn't, A is not linked to B</li>&#xA;<li>Command: link A to B</li>&#xA;</ul>&#xA;&#xA;<p><strong>Example 2</strong></p>&#xA;&#xA;<ul>&#xA;<li>Initial consistent state: A exists, B exists, A is linked to B</li>&#xA;<li>Command: delete B</li>&#xA;</ul>&#xA;&#xA;<p><strong>Example 3</strong></p>&#xA;&#xA;<ul>&#xA;<li>Initial consistent state: A exists, B exists, A is not linked to B</li>&#xA;<li>Two simultaneous commands: link A to B and delete B</li>&#xA;</ul>&#xA;&#xA;<p>I have two solutions in mind.</p>&#xA;&#xA;<p><strong>Solution 1</strong></p>&#xA;&#xA;<ul>&#xA;<li>Microservice A only allows linking A to B if it has previously received a ""B created"" event and no ""B deleted"" event.</li>&#xA;<li>Microservice B only allows deleting B if it has not previously received a ""A linked to B"" event, or if that event was followed by a ""A unlinked from B"" event.</li>&#xA;<li>Microservice A listens to ""B deleted"" events and, upon receiving such an event, unlinks A from B (for the race condition in which B is deleted before it has received the A linked to B event).</li>&#xA;</ul>&#xA;&#xA;<p><strong>Solution 2:</strong></p>&#xA;&#xA;<ul>&#xA;<li>Microservice A always allows linking A to B.</li>&#xA;<li>Microservice B listens for ""A linked to B"" events and, upon receiving such an event, verifies that B exists. If it doesn't, it emits a ""link to B refused"" event.</li>&#xA;<li>Microservice A listens for ""B deleted"" and ""link to B refused"" events and, upon receiving such an event, unlinks A from B.</li>&#xA;</ul>&#xA;&#xA;<p><strong>EDIT: Solution 3, proposed by Guillaume:</strong></p>&#xA;&#xA;<ul>&#xA;<li>Microservice A only allows linking A to B if it has not previously received a  ""B deleted"" event.</li>&#xA;<li>Microservice B always allows deleting B.</li>&#xA;<li>Microservice A listens to ""B deleted"" events and, upon receiving such an event, unlinks A from B.</li>&#xA;</ul>&#xA;&#xA;<p>The advantage I see for solution 2 is that the microservices don't need to keep track of of past events emitted by the other service. In solution 1, basically each microservice has to maintain a read model of the other one.</p>&#xA;&#xA;<p>A potential disadvantage for solution 2 could maybe be the added complexity of projecting these events in the read model, especially if more microservices and aggregates following the same pattern are added to the system.</p>&#xA;&#xA;<p>Are there other (dis)advantages to one or the other solution, or even an anti-pattern I'm not aware of that should be avoided at all costs?&#xA;Is there a better solution than the two I propose?</p>&#xA;&#xA;<p>Any advice would be appreciated.</p>&#xA;"
41433856,emailing in microservice architecture,2017-01-02 22:08:52,<rest><email><microservices><restful-architecture><email-integration>,1,1709,0,3.0,5,"<p>Sorry about my english - if some thing is not clear please ask me in comments - i will clarify this.</p>&#xA;&#xA;<p>I build system in microservice architecture. I have one service with user information, one service for ""offers"", and one service for ""ideas"". Services ""offers"" and ""ideas"" comunicate (by Restful API) with ""User"" service on login and other operations. And i wonder - how to deal with emails? Each service have it separate frontend and send emails after some actions (eg. when some third person open link with some offer the user who create this offer will get email, or when some user create idea the manager will get email). Moreover, on each service frontend, manager can create ""periodic"" mailing with season statistical data or just some other information. Each service email looks differently and have different content.</p>&#xA;&#xA;<p>I have many choices and don't know which will be better. This are some propositions:</p>&#xA;&#xA;<ol>&#xA;<li>Each service has his own separate emailing system and send all kinds&#xA;of email (after action, and periodic) independent. </li>&#xA;<li>The ""user service"" have ""engine"" to send action and periodic emails and other services give the task. Inside task there is link to service who give task and that link will generate email content (for example witch statistical data in periodic email). This solution is complicated...</li>&#xA;<li>The ""user service"" has only engine to periodic emails (tasks have link to generate email body...) but email after actions are send from each microservice indepenndent</li>&#xA;<li>Create new microservice only for sending email (periodic and ""after action"") with proper API. Ofcourse each service like ""offers"" should send also link (to themself) in mailing task - this link will be call when the periodic email will be send and the response of this link will be generated body of email....</li>&#xA;</ol>&#xA;&#xA;<p>Which one will be better? Or may be there is some better alternative? </p>&#xA;"
27865814,Does my concept follow a Microservice architecture?,2015-01-09 17:18:25,<php><magento><soa><single-page-application><microservices>,2,5151,0,3.0,5,"<p>I read <a href=""http://martinfowler.com/articles/microservices.html"" rel=""noreferrer"">the article on Microservices</a> on Martin Fowler's page and find it quite interesting. Now I plan structuring an E-Commerce Web Application as proof-of-concept and am wondering if my concept is considered being a Microservice architecture.</p>&#xA;&#xA;<p>The architecture consists of 3 components:</p>&#xA;&#xA;<ul>&#xA;<li>a javascript based single page application, which sends AJAX requests to</li>&#xA;<li>a server with a REST API which feeds JSON data received by calling other services (I think you call this behaviour API Gateway)</li>&#xA;<li>3 services: CatalogProvider, CustomersProvider, CheckoutProvider</li>&#xA;</ul>&#xA;&#xA;<p>For now the services all are API endpoints of a Magento (PHP) Shopsystem. In future I plan to then swap the providers with other systems.</p>&#xA;&#xA;<p>So my questions are:</p>&#xA;&#xA;<ul>&#xA;<li><p>MS are considered to be 'independently deployable'. I understand that in the world of JAVA we are talking about one JAR- or WAR-file, but how is a PHP service 'independently deployable'?</p></li>&#xA;<li><p>Does my concept NOT follow the principles of a MS architecture, because the providers are all part of one big (Magento) system?</p></li>&#xA;</ul>&#xA;&#xA;<p>Thank you for reading. I'm happy for any suggestions.</p>&#xA;"
31046924,Building authentication with Microservices Architecture,2015-06-25 09:52:50,<microservices>,3,3023,0,4.0,5,<p>I'm developing an app with microservices and I don't know how to distribute microservices to allow auth.</p>&#xA;&#xA;<p>I've read that each microservice should have its own database to avoid coupling.</p>&#xA;&#xA;<p>The problem is that Authentication (via JWT) and Users Microservices must have access to the same database and table (Users). I suppose this problem has been solved before due to similar applications having to deal with the same issue.</p>&#xA;&#xA;<p>How can I solve this?</p>&#xA;
48900551,Why ESB is considered bad in microservices architecture,2018-02-21 07:45:26,<architecture><microservices><distributed-computing><soa><esb>,1,1068,5,2.0,5,"<p>In microservices architecture, autonomous business services should talk directly with each other. The communication may be synchronous (orchestration) or event-based (choreography). An API gateway may aggregate the API's for the client (backends for frontends). With microservices we are seeking two ultimate goals</p>&#xA;&#xA;<ul>&#xA;<li>Low coupling</li>&#xA;<li>High cohesion</li>&#xA;</ul>&#xA;&#xA;<p>Which grants continuous deployment, fine-grained scaling, rapid technology adaptation, reusability, auditability an much more, of course for the price of higher complexity.</p>&#xA;&#xA;<p>However, it is highly discouraged to use ESB (Enterprise Service Bus) or other middleware. Microservices and ESB is often seen as an rival solutions. Why is an ESB seen so bad? As long as it is just used as an meditation channel with some additional monitoring and authentication layers (no business logic), what's the problem of using it in the microservice architecture?</p>&#xA;"
44085454,Join table between Different Microservices,2017-05-20 11:41:21,<architecture><microservices>,3,2111,0,1.0,5,"<p>I am still trying to make sense of micro service architecture.</p>&#xA;&#xA;<p>The idea to separate different application (include the database) excites me. But I am still confused if there are two micro-services e.g. Product and User. both product and user own table product and user respectively in their database. According to best practice in micro service, we only can access the database from the service. </p>&#xA;&#xA;<p>The problem is, let us suppose we have product table that has user_id column. We want to do search product which also return the name of the user who create the product. This requires join between product table in product micro-service and user table in user micro-service. How do you handle this? </p>&#xA;"
46453981,How an authorization service implements ownership checks in a role-based microservice architecture,2017-09-27 17:34:28,<design><architecture><authorization><microservices><soa>,2,162,0,2.0,5,"<p>Let's say I have three types of users on a blogging app</p>&#xA;&#xA;<ol>&#xA;<li><strong>Author</strong> (is able to modify their own posts but not others)</li>&#xA;<li><strong>Administrator</strong> (is able to modify all posts)</li>&#xA;<li><strong>Reader</strong> (can not modify any posts)</li>&#xA;</ol>&#xA;&#xA;<p>To manage this system I want to have three main services: </p>&#xA;&#xA;<ul>&#xA;<li>An <strong>API Gateway</strong> that exposes all the APIs clients will consume, composing services as needed. </li>&#xA;<li>A <strong>Post Management Service</strong> which provides the CRUD operations for blog posts (including the data of who owns what posts)</li>&#xA;<li>An <strong>Authorization Service</strong> which stores roles and permissions, exposing an API which takes in an array of roles (the roles a requesting user has) and an array of permissions (the permissions needed to access an API) and determines if those inputted roles cover all the permissions inputted. </li>&#xA;</ul>&#xA;&#xA;<p>Now what I am struggling with is ownership of a resource (and where ownership should be checked).</p>&#xA;&#xA;<p>Without communicating with other services how would an authorization service determine if a user should be able to access something they own without knowing how to determine if a user owns a given resource. </p>&#xA;&#xA;<p>I've come up with a few different solutions to this problem, although I'm not quite happy with any of them. </p>&#xA;&#xA;<ol>&#xA;<li>The API Gateway would query a different service that manages the posts to determine if a requesting user owns the post they are trying to access, this would mean there is authorization logic that happens outside of the authorization service.</li>&#xA;<li>The service managing blog posts would handle authorization based on ownership, this would also mean authorization logic is happening outside the authorization service as well as the fact that unauthorized requests are being marked as authorized initially (since they will still pass through the authorization service)</li>&#xA;<li>The Authorization service could be given the knowledge of how to check ownership, the API would have to be able to be told whether or not it should check for ownership along with the permissions. This would add complexity to the authorization service and increase the cross-service communication which I'd like to relegate as much as possible to the API gateway since it should be the primary service composer. </li>&#xA;</ol>&#xA;&#xA;<p>Looking for ideas on alternative methods or insight into what the best solution to this problem might be.</p>&#xA;"
46311488,Confused about ESBs as a solution to point-to-point integration,2017-09-20 00:20:34,<architecture><microservices><esb>,4,675,0,0.0,5,"<p>Still very new to studying application architecture and having trouble stomaching some ideas in a book about microservices. In my readings, I have come across the older idea of the ESBs(Enterprise Service Bus) and its role in coordinating messages between new services and legacy applications. ESBs are touted as a solution to problems poised by point-to-point integration. Microservices seem to be the approach taken by newer companies as the de facto standard to creating an agile, scalable, and resilient app. But aren't microservices using point-to-point integration? Each node in an application built from microservices is communicating directly with other nodes, right? I feel I am connecting some dots that shouldn't be connected. Any help much appreciated, thanks in advance.</p>&#xA;"
40947247,"Event sourcing, CQRS and database in Microservice",2016-12-03 11:30:16,<microservices><cqrs><event-sourcing>,1,1104,1,1.0,5,"<p>I am quite new in context of Micro-service architecture and reading this post : <a href=""http://microservices.io/patterns/data/event-sourcing.html"" rel=""noreferrer"">http://microservices.io/patterns/data/event-sourcing.html</a> to get familiar with Event sourcing and data storage in Microservice architecture. &#xA;I have read many documents about 3 important aspect of system :</p>&#xA;&#xA;<ol>&#xA;<li>Using event sourcing instead of a simply shared DB and ORM and&#xA;    row update</li>&#xA;<li>Events are JAVA objects. </li>&#xA;<li>In case of saving data permanently&#xA;    , we need to use DB (either relational or noSQL)</li>&#xA;</ol>&#xA;&#xA;<p>Here are my questions :</p>&#xA;&#xA;<ol>&#xA;<li><p>How database comes along with event sourcing? I have read CQRS&#xA;pattern, but I can not understand how CQRS pattern is related to&#xA;event store and event objects ?  </p></li>&#xA;<li><p>Can any body provide me a&#xA;    complete picture and set of operations happens with all players to&#xA;    gather: CQRS pattern , Event sourcing (including event storage&#xA;    module) and finally different microservices?</p></li>&#xA;<li>In a system&#xA;        composed of many microservices, should we have one event storage or&#xA;        each microservice has its own ? or both possible ?</li>&#xA;<li>same&#xA;    question about CQRS. This pattern is implemented in all&#xA;    microservices or only in one ?  </li>&#xA;<li>Finally, in case of using&#xA;        microservice architecture, it is mandatory to have only one DB or&#xA;        each Microserivce should have its own ?</li>&#xA;</ol>&#xA;&#xA;<p>As you can see, I have understood all small pieces of game , but I can not relate them together to compose a whole image. Specially relevance between CQRS and event sourcing and storing data in DB. &#xA;I read many articles for example :</p>&#xA;&#xA;<ul>&#xA;<li><a href=""https://ookami86.github.io/event-sourcing-in-practice/"" rel=""noreferrer"">https://ookami86.github.io/event-sourcing-in-practice/</a></li>&#xA;<li><a href=""https://msdn.microsoft.com/en-us/library/jj591577.aspx"" rel=""noreferrer"">https://msdn.microsoft.com/en-us/library/jj591577.aspx</a></li>&#xA;</ul>&#xA;&#xA;<p>But in all of them small players are discussed. Even a hand drawing piece of image will be appreciated. </p>&#xA;"
47527983,Designing java project for monoliths and microservices at same time,2017-11-28 09:25:20,<java><scope><package><domain-driven-design><microservices>,3,268,2,0.0,5,"<p>I would like to know how you divide project modules in java for monolith with possibility of transforming modules to micro-services later?<br>&#xA;My personal naming looks like this:</p>&#xA;&#xA;<pre><code>com.company.shopapp.product&#xA;...product.domain (ddd, services, repositories, entities, aggregates, command handlers - everything with package scope)&#xA;...product.api (everything with public scope)&#xA;...product.controller (CQRS endpoints for commands in web perspective - (package scope))&#xA;...product.query(CQRS - package scope)&#xA;&#xA;com.company.shopapp.sales&#xA;- domain&#xA;- api &#xA;- controller&#xA;- query &#xA;</code></pre>&#xA;&#xA;<p>What we have here is basically product management context and sales context as packages. </p>&#xA;&#xA;<p>Modules communicate each other using public interfaces (api package) only. In my project I use ""..api.ProductFacade"" to centralize communication points.</p>&#xA;&#xA;<p>When my ""sales"" module grow i will turn it into microservice by implementing ""..api.ProductFacade"" interface as a ""rest"" or ""soap"" client and on the other side I will create Endpoint/RestController based on ProductFacade interface.&#xA;Package ""com.company.shopapp.product.api"" will be transformed into extended library and added to both projects. </p>&#xA;&#xA;<p>Edit: &#xA;I can achive this out of the box using @Feign library.&#xA;<a href=""https://cloud.spring.io/spring-cloud-netflix/multi/multi_spring-cloud-feign.html#spring-cloud-feign-inheritance"" rel=""nofollow noreferrer"">https://cloud.spring.io/spring-cloud-netflix/multi/multi_spring-cloud-feign.html#spring-cloud-feign-inheritance</a></p>&#xA;&#xA;<p>The whole idea feels nice, but maybe you have better way to design project and ensure that breaking it into micro-services will not break whole application. </p>&#xA;"
46244677,Verifying Access Token (JWT) in Each Service of a Microservices Architecture,2017-09-15 17:16:46,<rest><authentication><architecture><cloud><microservices>,2,422,1,0.0,5,"<p>I have an application which is implemented using microservice architecture. There is an authentication service (A) which uses jwt standard, and there are other services in the application like S1, S2, S3 and so on.&#xA;Now for example S1 receives a request, it should validate the token to see if the user is authorized or not. The validation can be achieved by:</p>&#xA;&#xA;<ul>&#xA;<li>Sending the token from S1 to A, then A validates the token and sends the result to S1 (which is a kind of overhead)</li>&#xA;<li>Validating the token inside S1 (which is a duplicate action inside every service, also requires secret key or public/private keys inside each service,  for signing/verification)</li>&#xA;</ul>&#xA;&#xA;<p>I'm not asking about how these approaches work exactly. The questions is, which one of them is better? Or what is the best practice in this situation?</p>&#xA;"
41024771,Micro Service vs Nano Service?,2016-12-07 18:30:53,<web-services><agile><microservices>,2,3641,4,0.0,5,"<p>So, what do you call it? A Micro service or a Nano Service?</p>&#xA;&#xA;<p>What differences they have? I came across many blogs on internet and I could find any satisfactory answer. </p>&#xA;&#xA;<p>Found this quotation from Mark Little on <a href=""https://www.infoq.com/news/2014/05/nano-services"" rel=""noreferrer"">InfoQ</a>:</p>&#xA;&#xA;<blockquote>&#xA;  <p>First things first what actually is a micro service? Well there really isn’t a hard and fast definition but from conversations with various people there seems to be a consensus that a micro service is a simple application that sits around the 10-100 LOC mark.</p>&#xA;</blockquote>&#xA;&#xA;<p>another one:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Nanoservice is an antipattern where a service is too fine-grained. A nanoservice is a service whose overhead (communications, maintenance, and so on) outweighs its utility. Like Steve and others, Arnon concludes that Microservices is just another name for SOA</p>&#xA;</blockquote>&#xA;&#xA;<p>I'm looking for an accurate and explainable distinction between a Micro and a Nano Service. I highly appreciate your opinions!</p>&#xA;"
29830038,Logging in microservices,2015-04-23 17:04:04,<logging><tracing><microservices>,3,1836,0,5.0,5,"<p>assume we've got a number of Web API microservices, and they are written in different languages/framworks (some are ASP.NET Web API, some are NodeJS, some are Flask etc.).</p>&#xA;&#xA;<p>I would like to log every request made to any service, and I would prefer a centralized log.</p>&#xA;&#xA;<p>What method/tools should I use?</p>&#xA;&#xA;<p>Regards,&#xA;Daníel</p>&#xA;"
39485459,Microservice Versioning,2016-09-14 08:07:28,<architecture><versioning><soa><microservices>,4,834,0,1.0,5,"<p>What is the best practice to adapt for versioning in a Microservice Based Architecture, in terms of supporting multiple versioned deployment of the same service during runtime and how the consumers would be able to use different versions?&#xA;1) If we use Routing based Versioning as one of the approaches mentioned <a href=""http://niels.nu/blog/2016/microservice-versioning.html"" rel=""nofollow noreferrer"">here</a>&#xA;then I guess we would have the following drawbacks </p>&#xA;&#xA;<ol>&#xA;<li>Internal Services have to go through Reverse Proxy for consumption.</li>&#xA;<li>Consumers always have to be aware of the required versioning.</li>&#xA;</ol>&#xA;&#xA;<p>Is it a best practice to expose the version information to consumers?  </p>&#xA;&#xA;<p>In any case, as I feel, the following always applies:</p>&#xA;&#xA;<ol>&#xA;<li>For MAJOR version change, the consumers have to be changed.</li>&#xA;<li>For MINOR version change (backwards compatible), only the consumer(s) that requires the added functionality needs to change.</li>&#xA;<li>For PATCH version change, it's optional and would probably be seamless for any consumers to make use of it.</li>&#xA;</ol>&#xA;&#xA;<p>What kind of Microservice versioning strategy can help us in enabling the above?</p>&#xA;&#xA;<p>NOTE - Please feel free to let me know if this needs to be split in multiple questions.</p>&#xA;"
45655728,What is the real difference between an API and an microservice?,2017-08-12 23:17:02,<api><microservices>,5,11680,0,2.0,5,"<p>I am learning about microservices and I don't understand what the real difference between creating a REST API and creating microservices is. I’m working in Go, but my question applies over all languages.</p>&#xA;"
26491425,Why should a 12 Factor app be self contained?,2014-10-21 16:16:05,<java><paas><12factor><microservices>,2,1169,0,0.0,6,"<p>In the 12 Factor article on Port Binding&#xA;<a href=""http://12factor.net/port-binding"" rel=""nofollow noreferrer"">http://12factor.net/port-binding</a> there is a requirement that every app&#xA;be self-contained and not have a runtime injected e.g. Tomcat. For&#xA;what reason is this advised... what are advantages of self-contained apps for microservices?</p>&#xA;"
34023438,microservices: How to model related domain objects?,2015-12-01 15:02:03,<soa><microservices>,1,353,0,1.0,6,"<p>I have 2 domain objects: Project and Contract. A project can have many contracts so in the database it is modeled as a classic one-to-many relationship. Our question is this: How do you model the above in the context of microservices? Do you (a) have 2 microservices ProjectService and ContractService? or (b) Do you have one ProjectService which encompasses both Projects and Contracts?</p>&#xA;&#xA;<p>We are thinking that answer (a) (i.e. 2 microservices ProjectService and ContractService) implies that one would have to call 2 services to retrieve and save the complete Project object hierarchy. On the other hand, answer (a) completely decouples Projects from Contracts which may be a good thing in theory, but practically useless since a Contract cannot logically exist without a Project.</p>&#xA;&#xA;<p>What is the correct approach here? Is answer (a) an example of the nano service anti pattern?</p>&#xA;"
33952306,"Microservice, amqp and service registry / discovery",2015-11-27 07:31:10,<rest><architecture><amqp><microservices><service-discovery>,1,767,1,1.0,6,"<p>I m studying Microservices architecture and I m actually wondering something.</p>&#xA;&#xA;<p>I m quite okay with the fact of using (back) service discovery to make request able on REST based microservices. I need to know where's the service (or at least the front of the server cluster) to make requests. So it make sense to be able to discover an ip:port in that case.</p>&#xA;&#xA;<p>But I was wondering what could be the aim of using service registry / discovery when dealing with AMQP (based only, without HTTP possible calls) ?</p>&#xA;&#xA;<p>I mean, using AMQP is just like ""I need that, and I expect somebody to answer me"", I dont have to know who's the server that sent me back the response.</p>&#xA;&#xA;<p>So what is the aim of using service registry / discovery with AMQP based microservice ?</p>&#xA;&#xA;<p>Thanks for your help</p>&#xA;"
32470907,"Microservices - Maintaining Multiple Data stores, initial data load etc",2015-09-09 04:28:10,<microservices>,1,547,2,1.0,6,"<p>On aspects of granulatiry of mictoservices have read about the 2 pizza rule, services that can be developed in 2 weeks etc.  When the case studies of amazon, nelflix, gilt are read we hear about 100s of services. While the service granularity does make sense, what is still not clear to me is about the data stores of each of these microservices. Will there not be just too many data stores if each of the services store/maintain their own data ?? It might be the same logical entity like a product, customer etc that is sliced &amp; the relevant portion/attributes stored/maintained by a corresponding microservice. There could be a service that maintains basic customer information, another that maintains the additional customer information like say his subscription information or his interests etc. </p>&#xA;&#xA;<p>Couple of questions that come to mind around the data stores</p>&#xA;&#xA;<ol>&#xA;<li>Will this not be a huge maintenance issue in terms of backups,&#xA;restores etc? </li>&#xA;<li>How is the initial data populated into these stores ? Are there any best practices around this ? Organisations are bound to have huge volumes of customer or product data &amp; they will most likely be mastered in other systems. </li>&#xA;<li>How does this approach of multiple data stores impact the 'omni-channel' approach where it  implies getting a single view of all data? Organizations might have had data consolidation initiatives going on to achieve the same</li>&#xA;</ol>&#xA;&#xA;<p>Edit: Edited the subject a bit</p>&#xA;"
30173267,Microservice Architecture- cross-domain chattiness,2015-05-11 16:48:08,<architecture><soa><microservices>,3,808,6,3.0,6,"<p>I have a relatively new project that employs a microservice architecture. I feel pretty good about the size and granularity of the individual services, with the exception or our security service.</p>&#xA;&#xA;<p>I have three main services, let's say <code>foo-service</code>, <code>bar-service</code>, and <code>baz-service</code>. These services never need to communicate, but all three services regularly talk via HTTP requests to the <code>security-service</code>. I want this to stop for a variety of reasons- the biggest is that each request to my individual services spawns a request to the security service, which can turn into several extra hops once you account for load balancing, etc. I've been reading ""Software Architecture Patterns"" by Mark Richards, and he recommends in these instances you should share databases and violate DRY: copy the required functionality into each service. Still, he uses this example with smaller ""utility"" classes, which may not really apply in this instance. </p>&#xA;&#xA;<p>The security service isn't that big, so I could definitely copy it into each of the other services. That said, it's just big enough that I don't feel great copying and pasting it - 314 'relevant' lines of code according to coveralls (java so there's a lot more actual code ;-). I could easily turn it into a module that each service brings in- but then my services have a shared dependency and that has bit me in the past. Of course the security code will grow over time as we add authentication methods, but we aren't reinventing the wheel when it comes to auth so It's mostly integrating with other libraries and authentication services. That is, I don't imagine this particular code base getting huge.</p>&#xA;&#xA;<p>So my question, should I copy and paste the code or build a module that every service brings in? Thanks!</p>&#xA;"
34794630,Micro service security,2016-01-14 16:25:39,<c#><microservices>,2,1298,7,2.0,6,"<p>Over the last few days I've been playing with the micro service pattern and all is going well but security seems to baffle me.</p>&#xA;&#xA;<p><strike>&#xA;So If I may ask a question:&#xA;How do I handle user authentication on an individual service? At the moment I pass a request to the <code>Gateway API</code> which in turns connects to the service.&#xA;</strike></p>&#xA;&#xA;<p><strong>Question Edited Please See Below</strong></p>&#xA;&#xA;<p>Bearing in mind that the individual services should not know about each other. The <code>Gateway</code> is the aggregator as such. </p>&#xA;&#xA;<p><strong>Current architecture.</strong></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/60tiY.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/60tiY.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>A little code to simulate the request:</p>&#xA;&#xA;<p><strong>Frontend - Client App</strong></p>&#xA;&#xA;<pre><code>public class EntityRepository&lt;T&gt;&#xA;{&#xA;    private IGateway _gateway = null;&#xA;    public EntityRepository(IGateway gateway)&#xA;    {&#xA;        this._gateway = gateway;&#xA;    }&#xA;    public IEnumerable&lt;T&gt; FindAll()&#xA;    {&#xA;        return this._gateway.Get(typeof(T)).Content.ReadAsAsync&lt;IEnumerable&lt;T&gt;&gt;().Result;&#xA;    }&#xA;    public T FindById(int id)&#xA;    {&#xA;        return this._gateway.Get(typeof(T)).Content.ReadAsAsync&lt;T&gt;().Result;&#xA;    }&#xA;    public void Add(T obj)&#xA;    {&#xA;        this._gateway.Post(typeof(T), obj);&#xA;    }&#xA;    public void Update(T obj)&#xA;    {&#xA;        this._gateway.Post(typeof(T), obj);&#xA;    }&#xA;    public void Save(T obj)&#xA;    {&#xA;        this._gateway.Post(typeof(T), obj);&#xA;    }&#xA;}&#xA;&#xA;&#xA;   //Logic lives elsewhere&#xA;   public HttpResponseMessage Get(Type type)&#xA;   {&#xA;      return Connect().GetAsync(Path(type)).Result;&#xA;   }&#xA;   public HttpResponseMessage Post(Type type, dynamic obj)&#xA;   {&#xA;      return Connect().PostAsync(Path(type), obj);&#xA;   }&#xA;    private string Path(Type type)&#xA;    {&#xA;        var className = type.Name;&#xA;        return ""api/service/"" + Application.Key + ""/"" + className;&#xA;    }&#xA;    private HttpClient Connect()&#xA;    {&#xA;        var client = new HttpClient();&#xA;        client.BaseAddress = new Uri(""X"");&#xA;&#xA;        // Add an Accept header for JSON format.&#xA;         client.DefaultRequestHeaders.Accept.Add(&#xA;         new MediaTypeWithQualityHeaderValue(""application/json""));&#xA;&#xA;        return client;&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>I use generics to determine where it needs to fire once it hit's the gateway.&#xA;So if the <code>Type</code> is <strong>Category</strong> it will fire the <strong>Category</strong> service thus calling:</p>&#xA;&#xA;<pre><code>public IEnumerable&lt;dynamic&gt; FindAll(string appKey, string cls)&#xA;{&#xA;    var response = ConnectTo.Service(appKey, cls);&#xA;    return (appKey == Application.Key) ? (response.IsSuccessStatusCode) ? response.Content.ReadAsAsync&lt;IEnumerable&lt;dynamic&gt;&gt;().Result : null : null;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The Gateway does not contain the physical files/Class's of the types.</p>&#xA;&#xA;<p>After a little code, I was hoping someone could give me a little demonstration or the best approach to handle security/user authentication with the current architecture.</p>&#xA;&#xA;<p><strong>Case Scenario 1</strong>&#xA;User hits the web app and logs in, at that point the users encrypted email and password is sent to the <code>Gateway API</code> which is then passed to the <code>User Service</code> and decides whether the user is authenticated - all well and good but now I want to fetch all Messages from the <code>Message Service</code> that the user has received. I cannot really say in the Gateway if the user is authenticated, fetch the messages because that does not solve the issue of calling the <code>Message Service</code> outside of the <code>Gateway API</code></p>&#xA;&#xA;<p>I also cannot add authentication to each individual service because that would require all respective services talking to the <code>User Service</code> and that defeats the purpose of the pattern.</p>&#xA;&#xA;<p><strong>Fixes:</strong>&#xA;Only allow the Gateway to call the Services. Requests to services outside of the Gateway should be blocked.</p>&#xA;&#xA;<p>I know security is a broad topic but within the current context, I'm hoping someone could direct me with the best course of action to resolve the issue.</p>&#xA;&#xA;<p>Currently I have Hardcoded a <code>Guid</code> in all off the applications, which in turn fetches data if the app is equal.</p>&#xA;"
41655915,Microservices: Atomic Events,2017-01-14 22:54:45,<database><events><microservices>,2,582,1,3.0,6,"<p>I'm learning about microservice data replication right now, and one thing I'm having trouble with is coming up with the right architecture for ensuring event atomicity.  The way I understand it, the basic flow is:</p>&#xA;&#xA;<ol>&#xA;<li>Commit changes to a database.</li>&#xA;<li>Publish an event detailing the changes on the global message bus.</li>&#xA;</ol>&#xA;&#xA;<p>But what if, for example, a power outage occurred in-between Steps 1 and 2?  In a naively-built system, that would mean the changes persist but the event detailing them will never be published.  I've pondered the following ideas to create better guarantees, but I'm not quite sure of all the pros and cons of each:</p>&#xA;&#xA;<p>A:  Use an embedded database (like SQLite) in my microservice instance to track the full transaction, from the commit to the main database to the event publishing.</p>&#xA;&#xA;<p>B:  Create an Events table in my main database, using database transactions to insert the Event and commit the relevant changes at the same time.  The service would then push the Event to the bus, and then make another commit to the main database to mark the Event as Published.</p>&#xA;&#xA;<p>C:  As above, create an Events table in my main database, using database transactions to insert the Event and commit the relevant changes at the same time.  Then, notify (either manually via REST/Messages from within the service or via database hooks) a dedicated EventPusher service that a new event has been appended.  The EventPusher service will query the Events table and push the events to the bus, marking each one as Published upon acknowledgement.  Should a certain amount of time pass without any notification, the EventPusher will do a manual query.</p>&#xA;&#xA;<p>What are the pros and cons of each of the choices above?  Is there another superior option I have yet to consider?</p>&#xA;"
44610425,Good practices to propagate errors through micro services,2017-06-17 23:41:37,<rest><api><http><microservices><restful-architecture>,2,445,3,0.0,6,"<p>We have a micro services architecture and we are having some discussions about how to expose internal errors to the client.</p>&#xA;&#xA;<p>Here's an example:</p>&#xA;&#xA;<p>Let's suppose we have 3 services, service A, B and C.&#xA;When the client sends a request to the service A, which is public, this service sends a request to service B that sends a request to service C (which are internal and needs authentication, but the credentials are stored internally like environment variables, they are not send by the client).</p>&#xA;&#xA;<p>And for some reason the communication between B and C receives a 401 (could be 422, 403 or any client related errors), which means that the request was not authorized.</p>&#xA;&#xA;<p>Something like that:<a href=""https://i.stack.imgur.com/NmQB7.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/NmQB7.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>The communication between B and C is internal, the user don't know about these services. Should I expose our internal structure sending a 401 to the client? Given it's not the client's fault? Should I send a 500?</p>&#xA;"
34442192,Api gateway or No Api Gateway,2015-12-23 19:09:44,<microservices>,1,1401,1,0.0,6,"<p>I am developing an application based on the <code>microservice architecture</code>. Here, each <code>service</code> is an independently deployable <code>play-scala application</code> exposing <code>rest apis</code>. I want to implement an <code>Api gateway</code> on top of these services for mapping incoming requests.I am following the architecture discussed here :<a href=""http://%20https://www.nginx.com/blog/building-microservices-using-an-api-gateway/"" rel=""nofollow noreferrer"">Building Microservices</a></p>&#xA;&#xA;<p>There are very few projects with substantial maturity that are based on the microservice architecture. One of them is <a href=""https://github.com/theiterators/reactive-microservices#master"" rel=""nofollow noreferrer"">Reactive Microservices</a>.But this project is not using the <code>api gateway pattern</code> and seems to be following the <a href=""http://www.infoq.com/articles/seven-uservices-antipatterns"" rel=""nofollow noreferrer"">Anti Pattern</a> There is an <a href=""https://github.com/theiterators/reactive-microservices/issues/10"" rel=""nofollow noreferrer"">issue</a> opened for this project regarding the missing Api Gateway here .The contributors here claim that they did not follow the <code>api gateway pattern</code> because it has the risk of <code>single-point of failure</code>. </p>&#xA;&#xA;<p>This varying opinion is very confusing to me. So,I am looking for the suggestions on whether I should be using Api Gateway or not. <code>What is the right practice here ?</code> </p>&#xA;"
41161769,Authorisation in microservices - how to approach domain object or entity level access control using ACL?,2016-12-15 10:22:31,<spring><security><authorization><acl><microservices>,1,948,2,1.0,6,"<p>I am currently building microservices based system on java Spring Cloud. Some microservices use PostgreSQL and some of them MongoDB. REST and JMS is used for communication. The plan is to use SSO and OAuth2 for authentication</p>&#xA;&#xA;<p>The challenge I am facing is that authorisation have to be done on domain object/entity level. It means some kind of ACL (Access Control List) is needed. The best practice for this kind of architecture is to avoid something like this and have coarse grained security probably on application/service layer level in every microservice but unfortunately it is not possible.</p>&#xA;&#xA;<p>My final idea is to use Spring Security ACL and have the ACL tables in shared database between all microservices. The database would be accessed only by Spring infrastructure or through Spring api. The DB schema looks stable and unlikely will change. In this case I would simply break the rule about sharing db between microservices.</p>&#xA;&#xA;<p>I was considering different kinds of distributed solutions but left them: </p>&#xA;&#xA;<ul>&#xA;<li>One microservice with ACL and accessing it using rest - The problem is too many http calls and performance degradation. I would have to extend Spring Security ACL to replace db access by rest calls</li>&#xA;<li>ACL in every microservice for its own entities - Sounds quite reasonable but imagine a case having some read models of entities synchronised to some other microservices or same entity that exists in different bounded contexts (different microservices). ACLs can become really unmanageable and can be source of errors.</li>&#xA;<li>One microservice with ACL tables that are synchronised to other microservices as a read model. The problem is that there is no support in Spring Security ACL for MongoDB. I have seen some custom solutions on github and yes it is doable. But...when creating a new entity I have to create record in the microservice  that owns ACL and then it is asynchronously synchronised as a read model to microservice owning the entity. It does not sound as a easy solution</li>&#xA;<li>Choose some URL based access control on API gateway. But I would have to modify Spring Security ACL somehow. The API gateway would have to know too much about other services. Granularity of access control is bound to REST api granularity. Maybe I can not imagine all the consequences and other problems that would this approach bring</li>&#xA;<li>Finally the solution with shared db that I mentioned is my favorite. Actually it was the first one I have disqualified because it is “shared” database. But after going through possibilities it seemed to me that this is the only one that would work. There is some more additional complexity in case I would like to use some kind of caching because distributed cache would be needed.</li>&#xA;</ul>&#xA;&#xA;<p>I would really use some advice and opinions how to approach the architecture because this is really tricky and a lot of things can go wrong here.</p>&#xA;&#xA;<p>Many thanks,</p>&#xA;&#xA;<p>Lukas</p>&#xA;"
45453061,What is the difference between microservices and webservices?,2017-08-02 06:29:44,<web-services><microservices>,3,3866,1,1.0,6,"<p>The closest I got to finding the actual difference is this <a href=""http://www.tatvasoft.com/blog/the-difference-between-micro-services-and-web-services/"" rel=""nofollow noreferrer"">article</a>.</p>&#xA;&#xA;<p>But I didn't understand what would make me choose one over the other and if microservices can also use a REST API and communicate via http.</p>&#xA;&#xA;<p>I mainly didn't understand what a microservice is and if it can come instead of a webservice, other than the purpose of </p>&#xA;&#xA;<blockquote>&#xA;  <p>breaking large software applications into loosely coupled modules</p>&#xA;</blockquote>&#xA;"
30621628,BDD and microservices,2015-06-03 13:31:54,<c#><bdd><distributed><specflow><microservices>,3,686,2,2.0,7,"<p>Our solution relies on microservices. On the other hand, our CIO expects us to practice Behavior Driven Development on every new feature. </p>&#xA;&#xA;<p>Is it possible to manage BDD in a microservices architecture ? Based on your experience, is it a good practice to adopt BDD against such an architecture, or do you think we should directly look at integration testing ?</p>&#xA;&#xA;<p>[EDIT]</p>&#xA;&#xA;<p>More precisely, in my opinion, BDD Tests are expected to verify the business logic, and only the business logic. In many frameworks, BDD Tests scenarios are created by the skateholders, with a DSL. BDD Tests tend to converge to exclusive ""Infrastructure Ignorant"" practices. On the other hand, Integration Tests are supposed to verify that the solution matches the target infrastructure (they are done by DevOps ?), and only the infrastructure. When business functions are ""distributed"" over microservices, you should mock almost everything (infra and business) in your BDD Tests environment (it should be the local environment) and mocking business weakens a lot your goals. Do you think these practices are compatible ?</p>&#xA;"
30908112,Micro Service cross service dependencies,2015-06-18 06:36:30,<architecture><microservices>,3,3388,1,2.0,7,"<p>Just to simplify my situation I currently have 3 micro services.</p>&#xA;&#xA;<ol>&#xA;<li>Authentication</li>&#xA;<li>Locations</li>&#xA;<li>Inventory</li>&#xA;</ol>&#xA;&#xA;<p>The authentication service authenticates the user and sends back a JWT access token and I use that across the other services. Its stateless and all works well.</p>&#xA;&#xA;<p>I setup locations among some other things in the location service and this works well and as expected.</p>&#xA;&#xA;<p>But now I am at the inventory service and I need to add some inventory but it is linked to a location. I can easily pass the locationId in the API call but I have no way of authorizing the current user to add something to that location unless I then call the location service to validate this.</p>&#xA;&#xA;<p>This then creates service dependencies between each other and it is something I am trying to avoid at all costs otherwise you just lose most of the benefits of micro services.</p>&#xA;&#xA;<p>What would be the recommended approach to validate that the current user has permissions for that location? The only thing I have thought of so far is either</p>&#xA;&#xA;<ol>&#xA;<li>Getting the location API to issue out another access token with additional claims of what locations they have access to.</li>&#xA;<li>Or issuing out another completely separate token of some kind and passing that via the header to the inventory micro service to do a validation similar to how the JWT is authenticated.</li>&#xA;</ol>&#xA;&#xA;<p><strong>Edit</strong></p>&#xA;&#xA;<p>As mentioned below on providing aggregate roots (or I am assuming that means the same as API gateways) it would provide the 3rd option of another service on top to communicate to both to provide the information.</p>&#xA;&#xA;<p>However it then leaves a 3rd service dependent upon 2 others, so I just increased my service dependencies.</p>&#xA;"
38328727,What is the best way to design background jobs in microservices architecture?,2016-07-12 12:19:34,<architecture><microservices>,1,1727,1,1.0,7,"<p>I am using microservices architecture. As per my requirements, there are some Restful services required and some background jobs to be developed. </p>&#xA;&#xA;<p>For an example of Groceries delivery system,</p>&#xA;&#xA;<ul>&#xA;<li>Customers service - some restful service</li>&#xA;<li>Provider service - some restful service</li>&#xA;<li>OrderProvision - some background service which checks whether all of customer items got provided by different providers. </li>&#xA;</ul>&#xA;&#xA;<p>Once done, send an initiation to customer with the status and initiate delivery system to start delivering</p>&#xA;&#xA;<p>For the case of OrderProvision what is the best way to implement microservices?&#xA;In case of .Net framework, I can create a windows service/ scheduler task to run in background and do the checks. If it needs to be deployed on other servers like Linux, it does not work. What would be the best way to code such background tasks in microservices architecture?</p>&#xA;"
40966759,Microservices: Centralized Authorization vs Authorization in each service,2016-12-05 03:42:29,<architecture><microservices>,1,1391,0,1.0,7,"<p>Let's say I have a Microservices system built with an API Gateway.  </p>&#xA;&#xA;<p>Every request after coming through the Gateway have to be pre-authenticated by an Authentication Service (The Firewall pattern)  </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/DySBr.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/DySBr.png"" alt=""Firewall Pattern""></a>  </p>&#xA;&#xA;<p>But how about Authorization? For instance, I have 3 models and 3 services according to them in a <em>Hotel Management</em> system:  </p>&#xA;&#xA;<p><strong>User</strong>  </p>&#xA;&#xA;<ul>&#xA;<li>each user can have many hotels  </li>&#xA;</ul>&#xA;&#xA;<p><strong>Hotel</strong>  </p>&#xA;&#xA;<ul>&#xA;<li>a hotel is owned by a single user (owner)  </li>&#xA;<li>each hotel can have many employees (also a user)  </li>&#xA;<li>a hotel can have many rooms</li>&#xA;<li>for the sake of simplicity let's pretend that an employee have the same rights as the owner over a hotel  </li>&#xA;</ul>&#xA;&#xA;<p><strong>Room</strong>  </p>&#xA;&#xA;<ul>&#xA;<li>a room can only belong to a single hotel</li>&#xA;<li>owner and employees can only edit rooms in hotels that they owned/employed at</li>&#xA;</ul>&#xA;&#xA;<p>An example request to edit a room <strong>Y</strong>, after being authenticated it will have a verified claim that state something like <strong>'I am user X'</strong>.  </p>&#xA;&#xA;<p>To know whether <strong>X</strong> has the right to edit over <strong>Y</strong> I have to make requests to Hotel Service asking ""Does <strong>Y</strong>'s Hotel associated with (owned by/employing) <strong>X</strong>?"".  </p>&#xA;&#xA;<p>The question is: <strong>Where do I make these requests?</strong><br>&#xA;Have the Gateway ask the <em>Hotel Service</em> before forwarding client request to <em>Room Service</em>, or let the <em>Room Service</em> ask the <em>Hotel Service</em> by itself. When to choose one over another ? What's the benefit ?</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>Also, this modeling seems kinda wrong to me. All these relations laying around Microservices just make my system really complicated. As it grows it becomes harder for me to visualize the workflow between services. Is there a solution to this problem? A centralized relationship service that utilizes graph database like Neo4j perhaps?</p>&#xA;"
29636899,Do microservices break the bounded context?,2015-04-14 20:33:12,<domain-driven-design><microservices>,2,3461,3,3.0,7,"<p>I am a bit confused. I am working in a young banking company and we decided to implement a DDD architecture to break complexity.</p>&#xA;&#xA;<p>So, here is my question (it follows a design suggestion made by someone in the team). Let's say we have 3 different domains. D1, D2, D3, that expose domain (web)services. Each domain manipulates strongly typed business entities, that rely on the same tables. In front of these domains, we want a microservice to garantee that data persisted in tables is consistent, in a centralized manner. D1, D2 and D3 ask the microservice to persist data conforming to specific rules. We want the microservice to act as a CRUD proxy to the tables. The microservice provides specific DTOs to D1, D2 and D3 domains, obfuscating the tables to D1, D2, D3.</p>&#xA;&#xA;<p>Does this approach sound good ? Would you consider using microservices in a DDD architecture to manage CRUD and data consistency for 1+ domains ? Does ""CRUDing"" and validating data with a microservice break the bounded context ? What are the best practices with dealing with microservices in a DDD architecture, if any ?</p>&#xA;&#xA;<p>Many thanks for your contribution,</p>&#xA;&#xA;<p>[EDIT]</p>&#xA;&#xA;<p>The following article helped me to refine my thoughts : <a href=""http://martinfowler.com/bliki/MicroservicePremium.html"" rel=""noreferrer"">http://martinfowler.com/bliki/MicroservicePremium.html</a></p>&#xA;&#xA;<p>Microservices are useful on complex situations where monolithic systems failed at being maintainable. They are not good candidates for upfront design implementations. On the other hand, DDD tries to tackle complexity at the very beginning of the projects. Successful DDD should not meet microservices implementations.</p>&#xA;"
26975640,Why are Micro-Services Architectures not based on Enterprise Service Buses?,2014-11-17 15:08:19,<esb><microservices>,4,2300,0,2.0,8,"<p>What reasons are there against (or for) using the features of an Enterprise Service Bus when building an overall service adhering to a micro-service architecture (<a href=""http://martinfowler.com/articles/microservices.html"" rel=""noreferrer"">http://martinfowler.com/articles/microservices.html</a>)? Why should we use dumb pipes and smart endpoints as opposed to using smarter pipes and be able to develop simpler services? </p>&#xA;"
22987482,Can you use Hapi.JS as a Micro-services framework?,2014-04-10 12:04:08,<node.js><api><plugins><microservices>,1,2226,0,2.0,8,"<p>I've seen various interesting presentations recently about the joys of Micro Services (<a href=""http://martinfowler.com/articles/microservices.html"" rel=""nofollow noreferrer"">http://martinfowler.com/articles/microservices.html</a>) and also wonder how we might use those concepts with Hapi.JS. </p>&#xA;&#xA;<p>The CTO of Mail Online (largest online newspaper on the planet) name checks HAPI and its plugin system in relation to micro-services :</p>&#xA;&#xA;<p><a href=""http://www.nearform.com/nodecrunch/how-node-js-has-revolutionized-the-mailonline"" rel=""nofollow noreferrer"">http://www.nearform.com/nodecrunch/how-node-js-has-revolutionized-the-mailonline</a></p>&#xA;&#xA;<blockquote>&#xA;  <p>A micro-services architecture is used, which was inspired by Fred George, which is a&#xA;  slightly different take on the hapi plugin architecture, structuring applications to be &#xA;  maintainable as they get bigger is a key challenge going forward and micro-services is a &#xA;  solution to this. The MailOnline are also heavy users of Joyent (On Premise SDC and public &#xA;  cloud).</p>&#xA;</blockquote>&#xA;&#xA;<p>There are also new node frameworks set up specifically for micro-services (senecajs.org)</p>&#xA;&#xA;<p>Has anyone seen any case studies (and ideally tutorials) on leveraging Hapi in this way?</p>&#xA;"
28930710,How to avoid concurrency issues when scaling writes horizontally?,2015-03-08 19:10:29,<azure><scalability><sharding><microservices><horizontal-scaling>,5,639,2,3.0,8,"<p>Assume there is a worker service that receives messages from a queue, reads the product with the specified Id from a document database, applies some manipulation logic based on the message, and finally writes the updated product back to the database (a).</p>&#xA;&#xA;<p><img src=""https://i.stack.imgur.com/RZYlA.png"" alt=""horizontally scaling writes""></p>&#xA;&#xA;<p>This work can be safely done in parallel when dealing with different products, so we can scale horizontally (b). However, if more than one service instance works on the same product, we might end up with concurrency issues, or concurrency exceptions from the database, in which case we should apply some retry logic (and still the retry might fail again and so on). </p>&#xA;&#xA;<p><strong>Question</strong>: How do we avoid this? Is there a way I can ensure two instances are not working on the same product?</p>&#xA;&#xA;<p><strong>Example/Use case</strong>: An online store has a great sale on productA, productB and productC that ends in an hour and hundreds of customers are buying. For each purchase, a message is enqueued (productId, numberOfItems, price).  <strong>Goal</strong>: How can we run three instances of our worker service and make sure that all messages for productA will end up in instanceA, productB to instanceB and productC to instanceC (resulting in no concurrency issues)?</p>&#xA;&#xA;<p><strong>Notes</strong>: My service is written in C#, hosted on Azure as a Worker Role, I use Azure Queues for messaging, and I'm thinking to use Mongo for storage. Also, the Entity IDs are <code>GUID</code>.</p>&#xA;&#xA;<p>It's more about the technique/design, so if you use different tools to solve the problem I'm still interested.</p>&#xA;"
31317470,How should you deal with auth and sharing Users info across microservices?,2015-07-09 12:26:19,<node.js><mongodb><nginx><microservices>,1,1189,3,6.0,8,"<p><strong>TLTR:</strong> What is a good way to communicate across services for Auth and User Info regardless of location of server or technology used</p>&#xA;&#xA;<p>I'm trying to learn about microservices and I'm a little bit unclear as to how I should approach accessing user information and control access with multiple services. Please let me know if I am approaching this completely wrong.</p>&#xA;&#xA;<p>For example I have a basic service for Blog CRUD operations and a Service for uploading and storing images and videos. I haven't done anything with Authorization or Users yet (except I am accounting for UserIds eventually being present in my Models (e.g. in my blog model ObjectID's for author, commenters, etc).</p>&#xA;&#xA;<p>I want to keep this as separated as possible (for learning purposes more then anything) and while at the moment I am building it all in Node.js I hope to be able to swap in and out different technologies such as nginx, a java/go/python service or a different storage (currently mongo, but would like to be able to switch to sql as an option )</p>&#xA;&#xA;<p>How I currently have these structured is I have both services built as Express.js apps and currently I am using node-http-proxy to proxy to the express services (this is just to save with setting up nginx for now but I don't want to be dependent on nginx either).</p>&#xA;&#xA;<p><em>How should I approach:</em></p>&#xA;&#xA;<ul>&#xA;<li><p>Authenticated user or some of the routes (e.g. when creating a new post or updating/deleting) and Not when getting the post to Read (eventually I would like to incorporate roles too)</p></li>&#xA;<li><p>populating the User information e.g. from the user's ID stored in the blog author and replacing it with the user information (in a single app I could just use mongoose populate</p></li>&#xA;</ul>&#xA;&#xA;<p>The main aim is I would like to keep the Auth and Users in separate services that could be called in any other service and stored in another DB for example if they were located on different physical servers.</p>&#xA;&#xA;<p>someone had suggested to me I could do this using HTTP/S but is there a better way to do this and can anyone point me to any implementation examples, Node.js would be preferable but not essential</p>&#xA;&#xA;<p>This likely requires some service registry but I am a bit lost as to how this would be implemented</p>&#xA;"
30648096,centralized API documentation for microservices,2015-06-04 15:30:59,<api><documentation><microservices>,3,3386,5,2.0,8,"<p>My team and I are currently building multiple services in parallel. We have the benefit of building all the services from scratch. I would like the ability to automatically display all API endpoints, from all services, in one page/site.  This would be helpful because (among other things):</p>&#xA;&#xA;<ol>&#xA;<li><p>I don't have to go to multiple documentation sites to see what are the available endpoints in my entire ""system"". </p></li>&#xA;<li><p>It'll be a good first step to determine if any of the services should be split, combined or simply refactored.  </p></li>&#xA;</ol>&#xA;&#xA;<p>Some of our services are in Django and the <a href=""http://swagger.io/"" rel=""noreferrer"">rest-swagger</a> module is a great help. But I don't see how I can combine rest-swagger documentation from multiple services into a single documentation page/site.</p>&#xA;&#xA;<p>I'm currently looking through <a href=""http://microservices.io/index.html"" rel=""noreferrer"">this site</a> and anything related to the <a href=""http://nginx.com/blog/microservices-at-netflix-architectural-best-practices/"" rel=""noreferrer"">Netflix experience</a> but could not find a solution to my problem. Maybe centralized documentation isn't a big deal with 600+ services at Netflix, but that's hard to believe.</p>&#xA;&#xA;<p>Can anyone suggest a tool or method to have a combined API documentation for all services in a microservice architecture? </p>&#xA;&#xA;<p>My ideal scenario of what happens when a service is changed: </p>&#xA;&#xA;<ol>&#xA;<li>I click on the link to see the list of endpoints in my system.</li>&#xA;<li>A teammate updates a service and also it's documentation.</li>&#xA;<li>I refresh the page I am currently and I see that change made from step #2.</li>&#xA;</ol>&#xA;"
36083504,Database connection pool strategy for micro services,2016-03-18 11:44:23,<database><postgresql><jdbc><connection-pooling><microservices>,1,1749,2,0.0,8,"<p>We are trying to convert our monolithic application to a micro services based architecture. We use Postgresql as one of our database in the monolithic application with BoneCP for connection pooling. </p>&#xA;&#xA;<p>When this monolith is split to a number of independent micro-services with each of them running in a different JVM, I can think about two options for connection pooling</p>&#xA;&#xA;<ol>&#xA;<li>BoneCP or any decent connection pool for each microservice - My initial research shows that this is the primary choice. It is possible to have a fine grained control of connection requirements for each service.But, down side is that as the number of services increase, number of connection pool also increases and eventually there will be too many idle connections assuming that minimum connections in each pool is greater than 0.</li>&#xA;<li>Rely on database specific extensions like PGBouncer - This approach has the advantage that connection pool is managed by a central source rather than a pool for each micro service and hence number of idle connections can be brought down. It is also language/technology agnostic. Down side is that these extensions are database specific and some of the functionalities in JDBC may not work. For eg: Prepared statments may not work with PGBouncer in Transaction_Pooling mode. </li>&#xA;</ol>&#xA;&#xA;<p>In our case most of the micro-services(at least 50) will be connecting to the same Postgres server even though the database can be different. So, if we go with option 1, there is a higher chance of creating too many idle connections.The traffic to most of our services are very moderate and the rationale behind moving to micro-service is for easier deployment, scaling etc.</p>&#xA;&#xA;<p>Has anyone faced a similar problem while adopting micro-services architecture? Is there a better way of solving this problem in micro-service world?</p>&#xA;"
43426699,DB design for microservice architecture,2017-04-15 13:34:54,<database><design><microservices>,2,7671,0,4.0,8,"<p>I am planning to use the Microservices architecture for the implementation of our website. I wanted to know if it is right to share databases between services or if it is preferable to have a separate database for each service. In this regard, can I consider having one common database for all services or does it violate the very essence of Microservice architecture ?</p>&#xA;"
45515650,Client per MicroService vs Generic Client | Who is responsible for microservice client?,2017-08-04 21:19:05,<distributed-computing><microservices>,1,156,1,2.0,8,"<p>I have a microService architecture with 10 microServices and each of those provides a client. Inside of that client which is managed/controlled by microService team we just receive the parameters and pass them to a generic http invoker which receives the endpoint and N params and then does the call.&#xA;All microService use http and web api (I guess technology doesn't matter).</p>&#xA;&#xA;<p>For me doesn't make sense to be the microService team to provide a client, should be the responsibility of the consumer, if they want to create some abstractions or invoke it directly is their problem, not a microService problem. And the way I see a web API is as a contract. So I think we should delete all clients (pass responsibility to consumers) on the microService side and create a service layer on the consumer's side that uses the generic invoker to reach the endpoints.</p>&#xA;&#xA;<p>The image below represents all components where the <strong>red line defines</strong> the boundaries, <strong>who is responsible for what</strong>:</p>&#xA;&#xA;<ul>&#xA;<li>The gateway has Adapter Layer </li>&#xA;<li>Adapter Layer references the microService client package </li>&#xA;<li>MicroService client package references Generic HTTP invoker package&#xA;<a href=""https://i.stack.imgur.com/EnjD5.jpg"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/EnjD5.jpg"" alt=""enter image description here""></a></li>&#xA;</ul>&#xA;&#xA;<p>The other side of that is because we might have N number of consumers and they are all repeating the code of the client. And if the microService provides a client, we have a unique/central place to control that.</p>&#xA;&#xA;<p><strong>Which approach is correct? Is the client a responsability of the microService or the consumer?</strong></p>&#xA;&#xA;<p>This is an internal product.</p>&#xA;"
32741333,Session Management in microservices,2015-09-23 13:43:15,<java><session><cookies><weblogic><microservices>,1,9293,3,5.0,10,"<p>We have the following setup.</p>&#xA;&#xA;<ol>&#xA;<li>STM (Stingrey Traffic Manager) does load balancing + session stickiness</li>&#xA;<li>Weblogic 'cluster'</li>&#xA;<li>Auth handled by a third party tool</li>&#xA;</ol>&#xA;&#xA;<p>Therefore I do not have to worry about session with regards to horizontal scaling/ running multiple instances of the application. STM/ Weblogic cluster makes sure that the subsequent request come to same managed server.</p>&#xA;&#xA;<p>What we currently have is a monolithic application and we are trying to move to microservices. Also we do not wan't to move out of current infrastructure (i.e. STM/ Weblogic cluster/ Auth tool). What we have planned is:</p>&#xA;&#xA;<ol>&#xA;<li>A Gateway WAR which routes requests to other microservices</li>&#xA;<li>N x Microservices (WAR) for each functional sub-domain</li>&#xA;<li>Only the API Gateway receives user requests and other microservices are not accessible from outside</li>&#xA;</ol>&#xA;&#xA;<p>So my question is</p>&#xA;&#xA;<ol>&#xA;<li>Should API Gateway be state-full while other microsevices are stateless?</li>&#xA;<li>If so, how should the user session data be shared between API Gateway and microservices?</li>&#xA;</ol>&#xA;&#xA;<p>Please suggest any better alternatives and resources/links as well.  Thanks.</p>&#xA;"
35289988,Authorization and user microservices design,2016-02-09 10:46:09,<microservices>,2,856,2,4.0,10,"<p>I'm trying to design microservice from an existing application with a quite standard user management: has authentication and authorization, and stores user data.</p>&#xA;&#xA;<p>I'm developping an <em>Authorization server</em> to manage user <strong>authentication</strong> and <strong>authorization</strong> using <code>OAuth2</code> as authorization. On other side I have to store user's information/profile.</p>&#xA;&#xA;<p><strong>Question:</strong> Should <em>Authorization server</em> manage:</p>&#xA;&#xA;<ul>&#xA;<li><strong>both authorization and user API?</strong> Thus other microservices can contact <em>Authorization server</em> on <code>/me</code> to get current user but also <code>/users</code> to get full list of users.</li>&#xA;<li><strong>Or only authorization and I have to create <em>User microservices</em>?</strong> Thus <em>Authorization server</em> only exposes <code>/me</code> API related to user and <em>User microservices</em> will expose <code>/users</code>?</li>&#xA;</ul>&#xA;&#xA;<p>The first solution is a bit simpler but the <em>Authorization server</em> will become less generic (less reusable) because user application data model will be part of it (database data model of <code>User</code> table).</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>The other requirement is <strong><em>Authorization server</em> should check if a user exists before authorizing it</strong>. </p>&#xA;&#xA;<p>There is no user auto-creation, users must be invited by <em>administrator</em> to get access.&#xA;With this requirement, the first solution is simple because <em>Authorization server</em> has access to user database but the second solution <em>Authorization server</em> implies:</p>&#xA;&#xA;<ol>&#xA;<li>Share database with <em>User service</em> (hum don't like that)</li>&#xA;<li>Call <em>User service</em> before authorization using REST API (for example) </li>&#xA;<li><em>Authorization server</em> should maintain minimal <code>User</code> table (can be renamed <code>Account</code>) and administrator will not create user on <em>User service</em> but only user account on <em>Authorization server</em></li>&#xA;</ol>&#xA;&#xA;<p>I think <strong>1.</strong> solution is out but any advices about <strong>2.</strong> and <strong>3.</strong>?</p>&#xA;&#xA;<p><strong>3.</strong> in first place seems the best, but if I want to switch to another <em>Authorization server</em>, for example a public one (OAuth2) like Google, Github, Facebook, etc... Security can be compromise because we can't control user account creation.</p>&#xA;&#xA;<p>Any feedback?</p>&#xA;"
43612866,Microservices with shared database? using multiple ORM's?,2017-04-25 14:01:50,<database><orm><microservices>,2,7791,3,3.0,10,"<p>I'm learning about microservices and I'm gonna build a project with a microservices architecture.</p>&#xA;&#xA;<p>The thing is, one of my team mates want to use one database for all services, sharing all tables so ""data doesn't get repeated"", each service would be built with different frameworks and languages like django and rails which use very different ORM standards.</p>&#xA;&#xA;<p>What would be the correct approach? Since I think working with one database would involve a lot of ""hacking"" the ORMs in order to make them work correctly.</p>&#xA;"
49910421,Is this microserviced?,2018-04-18 23:21:42,<java><spring-boot><microservices>,3,59,5,3.0,-2,"<p>I have created a simple blogging application using Spring Boot and RESTful APIs.  I have connected the same to a MySQL database to run some SQL queries like those for adding a blog, deleting a blog, etc.</p>&#xA;&#xA;<p>My questions are as follows:</p>&#xA;&#xA;<ol>&#xA;<li><p>Does it mean that I have used a <em>microservice</em> architecture?  When does an architecture become a <em>microservice</em>? (I ask because many similar websites call an application as microservice-based.  Other than the main application, e.g., currency exchange instead of blogging, I see no other difference; for e.g., <a href=""http://www.springboottutorial.com/creating-microservices-with-spring-boot-part-1-getting-started"" rel=""nofollow noreferrer"">this one</a> - it does have many more aspects, but they are not contributing to its <em>microservice</em>-ness, IMHO).  </p></li>&#xA;<li><p>Can I call an application as horizontally scalable if I am using <em>microservice-based</em> architecture?</p></li>&#xA;</ol>&#xA;&#xA;<p>Note:  The tutorial I followed is <a href=""https://medium.com/@salisuwy/building-a-spring-boot-rest-api-part-iii-integrating-mysql-database-and-jpa-81391404046a"" rel=""nofollow noreferrer"">here</a> and the GitHub repo is <a href=""https://github.com/salisuwy/building-spring-boot-resp-api-v3"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;"
43593778,Microservices design,2017-04-24 16:53:13,<java><spring><microservices>,1,122,9,1.0,-2,"<p>I am new to microservices and I am getting a hardtime in understanding what they exactly are. I would take an example situation, if you can break it down to how microservices should be written for this scenario then it woud be really great. </p>&#xA;&#xA;<p>Scenario: I have to work with two content management systems: Documentum and IBM FileNet.</p>&#xA;&#xA;<p>For each content management system I want to write an implementation to - </p>&#xA;&#xA;<ol>&#xA;<li>Create a new file or a folder.</li>&#xA;<li>Update a fileor a folder. </li>&#xA;<li>Delete a fileor a folder.</li>&#xA;<li>Update fileor folder metadata.</li>&#xA;<li>Search a file.</li>&#xA;<li>Get content of a file.</li>&#xA;<li>Create and Update permission sets applied on file or folder.&#xA;etc. </li>&#xA;</ol>&#xA;&#xA;<p>How should I break this down to microservices? &#xA;Should I write implementation for each content management systems in a seperate microservice? </p>&#xA;&#xA;<p>Please help.</p>&#xA;&#xA;<p>Thanks </p>&#xA;"
49036468,Inter-Process communication in a microservices architecture,2018-02-28 18:44:13,<web-services><ipc><microservices>,6,171,0,0.0,-1,"<p>we are moving from monolithic to microservice architecture application, we're still in planning phase and we want to know what is the best practices of building it.</p>&#xA;&#xA;<p>suppose we have two services :</p>&#xA;&#xA;<ol>&#xA;<li><strong>User</strong> </li>&#xA;<li><strong>Device</strong>&#xA;&#xA;<ul>&#xA;<li>getUserDevices(UserId)</li>&#xA;<li>addDevice(DeviceInfo, UserId)</li>&#xA;<li>...</li>&#xA;</ul></li>&#xA;</ol>&#xA;&#xA;<p><strong>Each user has multiple devices</strong></p>&#xA;&#xA;<p>what is the most common, cleaner and proper way of asking the server to get all user devices ?</p>&#xA;&#xA;<p>1- <strong>{api-url}/User/{UserId}/devices</strong></p>&#xA;&#xA;<blockquote>&#xA;  <p>needs another HTTP request to communicate with Device service.</p>&#xA;  &#xA;  <p>for user X, get linked devices from <strong>User</strong> service.</p>&#xA;</blockquote>&#xA;&#xA;<p>// <strong>OR</strong></p>&#xA;&#xA;<p>2- <strong>{api-url}/Device/{UserId}/devices</strong></p>&#xA;&#xA;<blockquote>&#xA;  <p>for user X, get linked devices from <strong>Device</strong> service.</p>&#xA;</blockquote>&#xA;"
42105805,Microservices Communication Design,2017-02-08 06:03:09,<python><api><microservices>,2,629,0,0.0,-1,<p>I would like to know how to create a communication for each services. I am using API Gateway for the outside of the system to communicate with the services within. Is it necessary for a service to call another service through API Gateway or just directly into the service itself ?</p>&#xA;&#xA;<p>Thank You</p>&#xA;
